const data = [
  {
    element: {
      id: "Device.meta",
      path: "Device.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "Device.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.implicitRules",
      path: "Device.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "Device.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.language",
      path: "Device.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "Device.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "Device.contained",
      path: "Device.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/Device",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "Device.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.definition",
      path: "Device.definition",
      short: "The reference to the definition for the device",
      definition: "The reference to the definition for the device.",
      min: 0,
      max: "1",
      base: { path: "Device.definition", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/DeviceDefinition",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.definition",
    parentDataPath: "root",
    basePath: "root.definition",
    baseId: "Device.definition",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.udiCarrier",
      path: "Device.udiCarrier",
      short: "Unique Device Identifier (UDI) Barcode string",
      definition:
        "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.",
      comment:
        "UDI may identify an unique instance of a device, or it may only identify the type of the device.  See [UDI mappings](device-mappings.html#udi) for a complete mapping of UDI parts to Device.",
      min: 0,
      max: "*",
      base: { path: "Device.udiCarrier", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.identifier" },
        { identity: "rim", map: ".id and .code" },
      ],
    },
    dataPath: "root.udiCarrier[0]",
    parentDataPath: "root",
    basePath: "root.udiCarrier",
    baseId: "Device.udiCarrier",
    isPrimitive: false,
    childPaths: [
      "root.udiCarrier.deviceIdentifier",
      "root.udiCarrier.issuer",
      "root.udiCarrier.jurisdiction",
      "root.udiCarrier.carrierAIDC",
      "root.udiCarrier.carrierHRF",
      "root.udiCarrier.entryType",
    ],
    value: "",
  },
  {
    element: {
      id: "Device.udiCarrier.deviceIdentifier",
      path: "Device.udiCarrier.deviceIdentifier",
      short: "Mandatory fixed portion of UDI",
      definition:
        "The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.",
      alias: ["DI"],
      min: 0,
      max: "1",
      base: { path: "Device.udiCarrier.deviceIdentifier", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: "Role.id.extension" },
        {
          identity: "udi",
          map: "The device identifier (DI), a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.",
        },
      ],
    },
    dataPath: "root.udiCarrier.deviceIdentifier",
    parentDataPath: "root.udiCarrier[0]",
    basePath: "root.deviceIdentifier",
    baseId: "Device.udiCarrier.deviceIdentifier",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.udiCarrier.issuer",
      path: "Device.udiCarrier.issuer",
      short: "UDI Issuing Organization",
      definition:
        "Organization that is charged with issuing UDIs for devices.  For example, the US FDA issuers include :\n1) GS1: \nhttp://hl7.org/fhir/NamingSystem/gs1-di, \n2) HIBCC:\nhttp://hl7.org/fhir/NamingSystem/hibcc-dI, \n3) ICCBBA for blood containers:\nhttp://hl7.org/fhir/NamingSystem/iccbba-blood-di, \n4) ICCBA for other devices:\nhttp://hl7.org/fhir/NamingSystem/iccbba-other-di.",
      alias: ["Barcode System"],
      min: 0,
      max: "1",
      base: { path: "Device.udiCarrier.issuer", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Role.id.root" },
        {
          identity: "udi",
          map: "All UDIs are to be issued under a system operated by an Jurisdiction-accredited issuing agency.\nGS1 DIs: \n http://hl7.org/fhir/NamingSystem/gs1\nHIBCC DIs:\n http://hl7.org/fhir/NamingSystem/hibcc\nICCBBA DIs for blood containers:\n http://hl7.org/fhir/NamingSystem/iccbba-blood\nICCBA DIs for other devices:\n http://hl7.org/fhir/NamingSystem/iccbba-other",
        },
      ],
    },
    dataPath: "root.udiCarrier.issuer",
    parentDataPath: "root.udiCarrier[0]",
    basePath: "root.issuer",
    baseId: "Device.udiCarrier.issuer",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.udiCarrier.jurisdiction",
      path: "Device.udiCarrier.jurisdiction",
      short: "Regional UDI authority",
      definition:
        "The identity of the authoritative source for UDI generation within a  jurisdiction.  All UDIs are globally unique within a single namespace with the appropriate repository uri as the system.  For example,  UDIs of devices managed in the U.S. by the FDA, the value is  http://hl7.org/fhir/NamingSystem/fda-udi.",
      requirements:
        "Allows a recipient of a UDI to know which database will contain the UDI-associated metadata.",
      min: 0,
      max: "1",
      base: { path: "Device.udiCarrier.jurisdiction", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "Role.scoper" }],
    },
    dataPath: "root.udiCarrier.jurisdiction",
    parentDataPath: "root.udiCarrier[0]",
    basePath: "root.jurisdiction",
    baseId: "Device.udiCarrier.jurisdiction",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.udiCarrier.carrierAIDC",
      path: "Device.udiCarrier.carrierAIDC",
      short: "UDI Machine Readable Barcode String",
      definition:
        "The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID.   Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.",
      comment:
        "The AIDC form of UDIs should be scanned or otherwise used for the identification of the device whenever possible to minimize errors in records resulting from manual transcriptions. If separate barcodes for DI and PI are present, concatenate the string with DI first and in order of human readable expression on label.",
      alias: ["Automatic Identification and Data Capture"],
      min: 0,
      max: "1",
      base: { path: "Device.udiCarrier.carrierAIDC", min: 0, max: "1" },
      type: [{ code: "base64Binary" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "rim", map: "Role.id.extension" },
        {
          identity: "udi",
          map: "A unique device identifier (UDI) on a device label a form that uses automatic identification and data capture (AIDC) technology.",
        },
      ],
    },
    dataPath: "root.udiCarrier.carrierAIDC",
    parentDataPath: "root.udiCarrier[0]",
    basePath: "root.carrierAIDC",
    baseId: "Device.udiCarrier.carrierAIDC",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.udiCarrier.carrierHRF",
      path: "Device.udiCarrier.carrierHRF",
      short: "UDI Human Readable Barcode String",
      definition:
        "The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.",
      comment:
        "If separate barcodes for DI and PI are present, concatenate the string with DI first and in order of human readable expression on label.",
      alias: ["Human Readable Form"],
      min: 0,
      max: "1",
      base: { path: "Device.udiCarrier.carrierHRF", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "rim", map: "Role.id.extension" },
        {
          identity: "udi",
          map: "A unique device identifier (UDI) on a device label in plain text",
        },
      ],
    },
    dataPath: "root.udiCarrier.carrierHRF",
    parentDataPath: "root.udiCarrier[0]",
    basePath: "root.carrierHRF",
    baseId: "Device.udiCarrier.carrierHRF",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.udiCarrier.entryType",
      path: "Device.udiCarrier.entryType",
      short: "barcode | rfid | manual +",
      definition: "A coded entry to indicate how the data was entered.",
      requirements:
        "Supports a way to distinguish hand entered from machine read data.",
      min: 0,
      max: "1",
      base: { path: "Device.udiCarrier.entryType", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "UDIEntryType",
          },
        ],
        strength: "required",
        description: "Codes to identify how UDI data was entered.",
        valueSet: "http://hl7.org/fhir/ValueSet/udi-entry-type|4.3.0",
      },
      mapping: [{ identity: "rim", map: "NA" }],
    },
    dataPath: "root.udiCarrier.entryType",
    parentDataPath: "root.udiCarrier[0]",
    basePath: "root.entryType",
    baseId: "Device.udiCarrier.entryType",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/udi-entry-type",
        code: "barcode",
        display: "Barcode",
      },
      {
        system: "http://hl7.org/fhir/udi-entry-type",
        code: "rfid",
        display: "RFID",
      },
      {
        system: "http://hl7.org/fhir/udi-entry-type",
        code: "manual",
        display: "Manual",
      },
      {
        system: "http://hl7.org/fhir/udi-entry-type",
        code: "card",
        display: "Card",
      },
      {
        system: "http://hl7.org/fhir/udi-entry-type",
        code: "self-reported",
        display: "Self Reported",
      },
      {
        system: "http://hl7.org/fhir/udi-entry-type",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "Device.status",
      path: "Device.status",
      short: "active | inactive | entered-in-error | unknown",
      definition: "Status of the Device availability.",
      comment:
        "This element is labeled as a modifier because the status contains the codes inactive and entered-in-error that mark the device (record)as not currently valid.",
      min: 0,
      max: "1",
      base: { path: "Device.status", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labelled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "FHIRDeviceStatus",
          },
        ],
        strength: "required",
        description: "The availability status of the device.",
        valueSet: "http://hl7.org/fhir/ValueSet/device-status|4.3.0",
      },
      mapping: [
        { identity: "w5", map: "FiveWs.status" },
        { identity: "rim", map: ".statusCode" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "Device.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/device-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/device-status",
        code: "inactive",
        display: "Inactive",
      },
      {
        system: "http://hl7.org/fhir/device-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
      {
        system: "http://hl7.org/fhir/device-status",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "Device.statusReason",
      path: "Device.statusReason",
      short:
        "online | paused | standby | offline | not-ready | transduc-discon | hw-discon | off",
      definition: "Reason for the dtatus of the Device availability.",
      min: 0,
      max: "*",
      base: { path: "Device.statusReason", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "FHIRDeviceStatusReason",
          },
        ],
        strength: "extensible",
        description: "The availability status reason of the device.",
        valueSet: "http://hl7.org/fhir/ValueSet/device-status-reason",
      },
      mapping: [{ identity: "w5", map: "FiveWs.status" }],
    },
    dataPath: "root.statusReason[0]",
    parentDataPath: "root",
    basePath: "root.statusReason",
    baseId: "Device.statusReason",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
        code: "online",
        display: "Online",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
        code: "paused",
        display: "Paused",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
        code: "standby",
        display: "Standby",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
        code: "offline",
        display: "Offline",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
        code: "not-ready",
        display: "Not Ready",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
        code: "transduc-discon",
        display: "Transducer Disconnected",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
        code: "hw-discon",
        display: "Hardware Disconnected",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
        code: "off",
        display: "Off",
      },
    ],
  },
  {
    element: {
      id: "Device.distinctIdentifier",
      path: "Device.distinctIdentifier",
      short: "The distinct identification string",
      definition:
        "The distinct identification string as required by regulation for a human cell, tissue, or cellular and tissue-based product.",
      comment:
        "For example, this applies to devices in the United States regulated under *Code of Federal Regulation 21CFR§1271.290(c)*.",
      alias: ["Distinct Identification Code (DIC)"],
      min: 0,
      max: "1",
      base: { path: "Device.distinctIdentifier", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".lotNumberText" },
        {
          identity: "udi",
          map: "The lot or batch number within which a device was manufactured - which is a component of the production identifier (PI), a conditional, variable portion of a UDI.",
        },
      ],
    },
    dataPath: "root.distinctIdentifier",
    parentDataPath: "root",
    basePath: "root.distinctIdentifier",
    baseId: "Device.distinctIdentifier",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.manufacturer",
      path: "Device.manufacturer",
      short: "Name of device manufacturer",
      definition: "A name of the manufacturer.",
      min: 0,
      max: "1",
      base: { path: "Device.manufacturer", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".playedRole[typeCode=MANU].scoper.name" },
        { identity: "udi", map: "N/A" },
      ],
    },
    dataPath: "root.manufacturer",
    parentDataPath: "root",
    basePath: "root.manufacturer",
    baseId: "Device.manufacturer",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.manufactureDate",
      path: "Device.manufactureDate",
      short: "Date when the device was made",
      definition: "The date and time when the device was manufactured.",
      min: 0,
      max: "1",
      base: { path: "Device.manufactureDate", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".existenceTime.low" },
        {
          identity: "udi",
          map: "The date a specific device was manufactured - which is a component of the production identifier (PI), a conditional, variable portion of a UDI.  For FHIR, The datetime syntax must converted to YYYY-MM-DD[THH:MM:SS].  If hour is present, the minutes and seconds should both be set to “00”.",
        },
      ],
    },
    dataPath: "root.manufactureDate",
    parentDataPath: "root",
    basePath: "root.manufactureDate",
    baseId: "Device.manufactureDate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.expirationDate",
      path: "Device.expirationDate",
      short: "Date and time of expiry of this device (if applicable)",
      definition:
        "The date and time beyond which this device is no longer valid or should not be used (if applicable).",
      min: 0,
      max: "1",
      base: { path: "Device.expirationDate", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".expirationTime" },
        {
          identity: "udi",
          map: "the expiration date of a specific device -  which is a component of the production identifier (PI), a conditional, variable portion of a UDI.  For FHIR, The datetime syntax must converted to YYYY-MM-DD[THH:MM:SS].  If hour is present, the minutes and seconds should both be set to “00”.",
        },
      ],
    },
    dataPath: "root.expirationDate",
    parentDataPath: "root",
    basePath: "root.expirationDate",
    baseId: "Device.expirationDate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.lotNumber",
      path: "Device.lotNumber",
      short: "Lot number of manufacture",
      definition: "Lot number assigned by the manufacturer.",
      min: 0,
      max: "1",
      base: { path: "Device.lotNumber", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".lotNumberText" },
        {
          identity: "udi",
          map: "The lot or batch number within which a device was manufactured - which is a component of the production identifier (PI), a conditional, variable portion of a UDI.",
        },
      ],
    },
    dataPath: "root.lotNumber",
    parentDataPath: "root",
    basePath: "root.lotNumber",
    baseId: "Device.lotNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.serialNumber",
      path: "Device.serialNumber",
      short: "Serial number assigned by the manufacturer",
      definition:
        "The serial number assigned by the organization when the device was manufactured.",
      comment: "Alphanumeric Maximum 20.",
      min: 0,
      max: "1",
      base: { path: "Device.serialNumber", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".playedRole[typeCode=MANU].id" },
      ],
    },
    dataPath: "root.serialNumber",
    parentDataPath: "root",
    basePath: "root.serialNumber",
    baseId: "Device.serialNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.deviceName",
      path: "Device.deviceName",
      short: "The name of the device as given by the manufacturer",
      definition:
        "This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.",
      min: 0,
      max: "*",
      base: { path: "Device.deviceName", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.deviceName[0]",
    parentDataPath: "root",
    basePath: "root.deviceName",
    baseId: "Device.deviceName",
    isPrimitive: false,
    childPaths: ["root.deviceName.name", "root.deviceName.type"],
    value: "",
  },
  {
    element: {
      id: "Device.deviceName.name",
      path: "Device.deviceName.name",
      short: "The name that identifies the device",
      definition: "The name that identifies the device.",
      alias: ["Σ"],
      min: 1,
      max: "1",
      base: { path: "Device.deviceName.name", min: 1, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.deviceName.name",
    parentDataPath: "root.deviceName[0]",
    basePath: "root.name",
    baseId: "Device.deviceName.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.deviceName.type",
      path: "Device.deviceName.type",
      short:
        "udi-label-name | user-friendly-name | patient-reported-name | manufacturer-name | model-name | other",
      definition:
        "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.",
      min: 1,
      max: "1",
      base: { path: "Device.deviceName.type", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "DeviceNameType",
          },
        ],
        strength: "required",
        description: "The type of name the device is referred by.",
        valueSet: "http://hl7.org/fhir/ValueSet/device-nametype|4.3.0",
      },
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".playedRole[typeCode=MANU].code" },
      ],
    },
    dataPath: "root.deviceName.type",
    parentDataPath: "root.deviceName[0]",
    basePath: "root.type",
    baseId: "Device.deviceName.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/device-nametype",
        code: "udi-label-name",
        display: "UDI Label name",
      },
      {
        system: "http://hl7.org/fhir/device-nametype",
        code: "user-friendly-name",
        display: "User Friendly name",
      },
      {
        system: "http://hl7.org/fhir/device-nametype",
        code: "patient-reported-name",
        display: "Patient Reported name",
      },
      {
        system: "http://hl7.org/fhir/device-nametype",
        code: "manufacturer-name",
        display: "Manufacturer name",
      },
      {
        system: "http://hl7.org/fhir/device-nametype",
        code: "model-name",
        display: "Model name",
      },
      {
        system: "http://hl7.org/fhir/device-nametype",
        code: "other",
        display: "other",
      },
    ],
  },
  {
    element: {
      id: "Device.modelNumber",
      path: "Device.modelNumber",
      short: "The manufacturer's model number for the device",
      definition: "The manufacturer's model number for the device.",
      min: 0,
      max: "1",
      base: { path: "Device.modelNumber", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".softwareName (included as part)" },
      ],
    },
    dataPath: "root.modelNumber",
    parentDataPath: "root",
    basePath: "root.modelNumber",
    baseId: "Device.modelNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.partNumber",
      path: "Device.partNumber",
      short: "The part number or catalog number of the device",
      definition: "The part number or catalog number of the device.",
      comment: "Alphanumeric Maximum 20.",
      min: 0,
      max: "1",
      base: { path: "Device.partNumber", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".playedRole[typeCode=MANU].id" },
      ],
    },
    dataPath: "root.partNumber",
    parentDataPath: "root",
    basePath: "root.partNumber",
    baseId: "Device.partNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.specialization",
      path: "Device.specialization",
      short:
        "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication",
      definition:
        "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.",
      min: 0,
      max: "*",
      base: { path: "Device.specialization", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.specialization[0]",
    parentDataPath: "root",
    basePath: "root.specialization",
    baseId: "Device.specialization",
    isPrimitive: false,
    childPaths: [
      "root.specialization.systemType",
      "root.specialization.version",
    ],
    value: "",
  },
  {
    element: {
      id: "Device.specialization.version",
      path: "Device.specialization.version",
      short:
        "The version of the standard that is used to operate and communicate",
      definition:
        "The version of the standard that is used to operate and communicate.",
      min: 0,
      max: "1",
      base: { path: "Device.specialization.version", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "w5", map: "FiveWs.what[x]" }],
    },
    dataPath: "root.specialization.version",
    parentDataPath: "root.specialization[0]",
    basePath: "root.version",
    baseId: "Device.specialization.version",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.version",
      path: "Device.version",
      short:
        "The actual design of the device or software version running on the device",
      definition:
        "The actual design of the device or software version running on the device.",
      min: 0,
      max: "*",
      base: { path: "Device.version", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.version[0]",
    parentDataPath: "root",
    basePath: "root.version",
    baseId: "Device.version",
    isPrimitive: false,
    childPaths: [
      "root.version.type",
      "root.version.component",
      "root.version.value",
    ],
    value: "",
  },
  {
    element: {
      id: "Device.version.component",
      path: "Device.version.component",
      short: "A single component of the device version",
      definition: "A single component of the device version.",
      min: 0,
      max: "1",
      base: { path: "Device.version.component", min: 0, max: "1" },
      type: [{ code: "Identifier" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "w5", map: "FiveWs.what[x]" }],
    },
    dataPath: "root.version.component",
    parentDataPath: "root.version[0]",
    basePath: "root.component",
    baseId: "Device.version.component",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.version.value",
      path: "Device.version.value",
      short: "The version text",
      definition: "The version text.",
      min: 1,
      max: "1",
      base: { path: "Device.version.value", min: 1, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.version.value",
    parentDataPath: "root.version[0]",
    basePath: "root.value",
    baseId: "Device.version.value",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.property",
      path: "Device.property",
      short:
        "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties",
      definition:
        "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.",
      min: 0,
      max: "*",
      base: { path: "Device.property", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.property[0]",
    parentDataPath: "root",
    basePath: "root.property",
    baseId: "Device.property",
    isPrimitive: false,
    childPaths: [
      "root.property.type",
      "root.property.valueQuantity[0]",
      "root.property.valueCode[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "Device.property.valueQuantity",
      path: "Device.property.valueQuantity",
      short: "Property value as a quantity",
      definition: "Property value as a quantity.",
      min: 0,
      max: "*",
      base: { path: "Device.property.valueQuantity", min: 0, max: "*" },
      type: [{ code: "Quantity" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.property.valueQuantity[0]",
    parentDataPath: "root.property[0]",
    basePath: "root.valueQuantity",
    baseId: "Device.property.valueQuantity",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.patient",
      path: "Device.patient",
      short: "Patient to whom Device is affixed",
      definition: "Patient information, If the device is affixed to a person.",
      requirements:
        "If the device is implanted in a patient, then need to associate the device to the patient.",
      min: 0,
      max: "1",
      base: { path: "Device.patient", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Patient"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.subject[x]" },
        {
          identity: "rim",
          map: ".playedRole[typeCode=USED].scoper.playedRole[typeCode=PAT]",
        },
        { identity: "w5", map: "FiveWs.subject" },
      ],
    },
    dataPath: "root.patient",
    parentDataPath: "root",
    basePath: "root.patient",
    baseId: "Device.patient",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.contact",
      path: "Device.contact",
      short: "Details for human/organization for support",
      definition:
        "Contact details for an organization or a particular human that is responsible for the device.",
      comment: "used for troubleshooting etc.",
      min: 0,
      max: "*",
      base: { path: "Device.contact", min: 0, max: "*" },
      type: [{ code: "ContactPoint" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.source" },
        { identity: "rim", map: ".scopedRole[typeCode=CON].player" },
      ],
    },
    dataPath: "root.contact[0]",
    parentDataPath: "root",
    basePath: "root.contact",
    baseId: "Device.contact",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.url",
      path: "Device.url",
      short: "Network address to contact device",
      definition:
        "A network address on which the device may be contacted directly.",
      comment:
        "If the device is running a FHIR server, the network address should  be the Base URL from which a conformance statement may be retrieved.",
      min: 0,
      max: "1",
      base: { path: "Device.url", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.where[x]" },
        { identity: "rim", map: ".telecom" },
      ],
    },
    dataPath: "root.url",
    parentDataPath: "root",
    basePath: "root.url",
    baseId: "Device.url",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device.safety",
      path: "Device.safety",
      short: "Safety Characteristics of Device",
      definition:
        "Provides additional safety characteristics about a medical device.  For example devices containing latex.",
      min: 0,
      max: "*",
      base: { path: "Device.safety", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "rim", map: "NA" }],
    },
    dataPath: "root.safety[0]",
    parentDataPath: "root",
    basePath: "root.safety",
    baseId: "Device.safety",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Device",
      path: "Device",
      short: "Item used in healthcare",
      definition:
        "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
      min: 0,
      max: "*",
      base: { path: "Device", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "rim", map: "Device" },
        { identity: "w5", map: "administrative.device" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "Device",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
