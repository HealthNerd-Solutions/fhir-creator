const data = [
  {
    element: {
      id: "TestReport.meta",
      path: "TestReport.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "TestReport.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.implicitRules",
      path: "TestReport.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "TestReport.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.language",
      path: "TestReport.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "TestReport.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "TestReport.contained",
      path: "TestReport.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/TestReport",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "TestReport.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.name",
      path: "TestReport.name",
      short: "Informal name of the executed TestScript",
      definition:
        "A free text natural language name identifying the executed TestScript.",
      comment: "Not expected to be globally unique.",
      min: 0,
      max: "1",
      base: { path: "TestReport.name", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "objimpl", map: "BaseConformance.name" }],
    },
    dataPath: "root.name",
    parentDataPath: "root",
    basePath: "root.name",
    baseId: "TestReport.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.status",
      path: "TestReport.status",
      short: "completed | in-progress | waiting | stopped | entered-in-error",
      definition: "The current state of this test report.",
      comment:
        "The status represents where the execution is currently within the test script execution life cycle.\n\nThis element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.",
      min: 1,
      max: "1",
      base: { path: "TestReport.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labelled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TestReportStatus",
          },
        ],
        strength: "required",
        description: "The current status of the test script execution.",
        valueSet: "http://hl7.org/fhir/ValueSet/report-status-codes|4.3.0",
      },
      mapping: [{ identity: "w5", map: "FiveWs.status" }],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "TestReport.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/report-status-codes",
        code: "completed",
        display: "Completed",
      },
      {
        system: "http://hl7.org/fhir/report-status-codes",
        code: "in-progress",
        display: "In Progress",
      },
      {
        system: "http://hl7.org/fhir/report-status-codes",
        code: "waiting",
        display: "Waiting",
      },
      {
        system: "http://hl7.org/fhir/report-status-codes",
        code: "stopped",
        display: "Stopped",
      },
      {
        system: "http://hl7.org/fhir/report-status-codes",
        code: "entered-in-error",
        display: "Entered In Error",
      },
    ],
  },
  {
    element: {
      id: "TestReport.result",
      path: "TestReport.result",
      short: "pass | fail | pending",
      definition: "The overall result from the execution of the TestScript.",
      comment:
        "The pass and fail result represents a completed test script execution. The pending result represents a test script execution that has not yet started or is currently in progress.",
      min: 1,
      max: "1",
      base: { path: "TestReport.result", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TestReportResult",
          },
        ],
        strength: "required",
        description: "The overall execution result of the TestScript.",
        valueSet: "http://hl7.org/fhir/ValueSet/report-result-codes|4.3.0",
      },
    },
    dataPath: "root.result",
    parentDataPath: "root",
    basePath: "root.result",
    baseId: "TestReport.result",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/report-result-codes",
        code: "pass",
        display: "Pass",
      },
      {
        system: "http://hl7.org/fhir/report-result-codes",
        code: "fail",
        display: "Fail",
      },
      {
        system: "http://hl7.org/fhir/report-result-codes",
        code: "pending",
        display: "Pending",
      },
    ],
  },
  {
    element: {
      id: "TestReport.score",
      path: "TestReport.score",
      short:
        "The final score (percentage of tests passed) resulting from the execution of the TestScript",
      definition:
        "The final score (percentage of tests passed) resulting from the execution of the TestScript.",
      min: 0,
      max: "1",
      base: { path: "TestReport.score", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.score",
    parentDataPath: "root",
    basePath: "root.score",
    baseId: "TestReport.score",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.tester",
      path: "TestReport.tester",
      short:
        "Name of the tester producing this report (Organization or individual)",
      definition:
        "Name of the tester producing this report (Organization or individual).",
      comment:
        "Usually an organization, but may be an individual. This item SHOULD be populated unless the information is available from context.",
      requirements:
        'Helps establish the "authority/credibility" of the TestReport.  May also allow for contact.',
      min: 0,
      max: "1",
      base: { path: "TestReport.tester", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.tester",
    parentDataPath: "root",
    basePath: "root.tester",
    baseId: "TestReport.tester",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.issued",
      path: "TestReport.issued",
      short:
        "When the TestScript was executed and this TestReport was generated",
      definition:
        "When the TestScript was executed and this TestReport was generated.",
      comment: "Additional specific dates may be added as extensions.",
      min: 0,
      max: "1",
      base: { path: "TestReport.issued", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.recorded" },
        { identity: "objimpl", map: "BaseConformance.date" },
      ],
    },
    dataPath: "root.issued",
    parentDataPath: "root",
    basePath: "root.issued",
    baseId: "TestReport.issued",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.participant",
      path: "TestReport.participant",
      short:
        "A participant in the test execution, either the execution engine, a client, or a server",
      definition:
        "A participant in the test execution, either the execution engine, a client, or a server.",
      min: 0,
      max: "*",
      base: { path: "TestReport.participant", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.participant[0]",
    parentDataPath: "root",
    basePath: "root.participant",
    baseId: "TestReport.participant",
    isPrimitive: false,
    childPaths: [
      "root.participant.type",
      "root.participant.uri",
      "root.participant.display",
    ],
    value: "",
  },
  {
    element: {
      id: "TestReport.participant.type",
      path: "TestReport.participant.type",
      short: "test-engine | client | server",
      definition: "The type of participant.",
      min: 1,
      max: "1",
      base: { path: "TestReport.participant.type", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TestReportParticipantType",
          },
        ],
        strength: "required",
        description: "The type of participant.",
        valueSet: "http://hl7.org/fhir/ValueSet/report-participant-type|4.3.0",
      },
    },
    dataPath: "root.participant.type",
    parentDataPath: "root.participant[0]",
    basePath: "root.type",
    baseId: "TestReport.participant.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/report-participant-type",
        code: "test-engine",
        display: "Test Engine",
      },
      {
        system: "http://hl7.org/fhir/report-participant-type",
        code: "client",
        display: "Client",
      },
      {
        system: "http://hl7.org/fhir/report-participant-type",
        code: "server",
        display: "Server",
      },
    ],
  },
  {
    element: {
      id: "TestReport.participant.uri",
      path: "TestReport.participant.uri",
      short: "The uri of the participant. An absolute URL is preferred",
      definition: "The uri of the participant. An absolute URL is preferred.",
      min: 1,
      max: "1",
      base: { path: "TestReport.participant.uri", min: 1, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.participant.uri",
    parentDataPath: "root.participant[0]",
    basePath: "root.uri",
    baseId: "TestReport.participant.uri",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.participant.display",
      path: "TestReport.participant.display",
      short: "The display name of the participant",
      definition: "The display name of the participant.",
      min: 0,
      max: "1",
      base: { path: "TestReport.participant.display", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.participant.display",
    parentDataPath: "root.participant[0]",
    basePath: "root.display",
    baseId: "TestReport.participant.display",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.setup",
      path: "TestReport.setup",
      short:
        "The results of the series of required setup operations before the tests were executed",
      definition:
        "The results of the series of required setup operations before the tests were executed.",
      min: 0,
      max: "1",
      base: { path: "TestReport.setup", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.setup",
    parentDataPath: "root",
    basePath: "root.setup",
    baseId: "TestReport.setup",
    isPrimitive: false,
    childPaths: ["root.setup.action[0]"],
    value: "",
  },
  {
    element: {
      id: "TestReport.setup.action",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "SetupAction",
        },
      ],
      path: "TestReport.setup.action",
      short: "A setup operation or assert that was executed",
      definition: "Action would contain either an operation or an assertion.",
      comment:
        "An action should contain either an operation or an assertion but not both.  It can contain any number of variables.",
      min: 1,
      max: "*",
      base: { path: "TestReport.setup.action", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
        {
          key: "inv-1",
          severity: "error",
          human:
            "Setup action SHALL contain either an operation or assert but not both.",
          expression: "operation.exists() xor assert.exists()",
          xpath: "(f:operation or f:assert) and not(f:operation and f:assert)",
          source: "http://hl7.org/fhir/StructureDefinition/TestReport",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.setup.action[0]",
    parentDataPath: "root.setup",
    basePath: "root.action",
    baseId: "TestReport.setup.action",
    isPrimitive: false,
    childPaths: ["root.setup.action.operation", "root.setup.action.assert"],
    value: "",
  },
  {
    element: {
      id: "TestReport.setup.action.operation",
      path: "TestReport.setup.action.operation",
      short: "The operation to perform",
      definition: "The operation performed.",
      min: 0,
      max: "1",
      base: { path: "TestReport.setup.action.operation", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.setup.action.operation",
    parentDataPath: "root.setup.action[0]",
    basePath: "root.operation",
    baseId: "TestReport.setup.action.operation",
    isPrimitive: false,
    childPaths: [
      "root.setup.action.operation.result",
      "root.setup.action.operation.message",
      "root.setup.action.operation.detail",
    ],
    value: "",
  },
  {
    element: {
      id: "TestReport.setup.action.operation.result",
      path: "TestReport.setup.action.operation.result",
      short: "pass | skip | fail | warning | error",
      definition: "The result of this operation.",
      min: 1,
      max: "1",
      base: {
        path: "TestReport.setup.action.operation.result",
        min: 1,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TestReportActionResult",
          },
        ],
        strength: "required",
        description: "The result of the execution of an individual action.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/report-action-result-codes|4.3.0",
      },
    },
    dataPath: "root.setup.action.operation.result",
    parentDataPath: "root.setup.action.operation",
    basePath: "root.result",
    baseId: "TestReport.setup.action.operation.result",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "pass",
        display: "Pass",
      },
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "skip",
        display: "Skip",
      },
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "fail",
        display: "Fail",
      },
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "warning",
        display: "Warning",
      },
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "error",
        display: "Error",
      },
    ],
  },
  {
    element: {
      id: "TestReport.setup.action.operation.message",
      path: "TestReport.setup.action.operation.message",
      short: "A message associated with the result",
      definition: "An explanatory message associated with the result.",
      min: 0,
      max: "1",
      base: {
        path: "TestReport.setup.action.operation.message",
        min: 0,
        max: "1",
      },
      type: [{ code: "markdown" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.setup.action.operation.message",
    parentDataPath: "root.setup.action.operation",
    basePath: "root.message",
    baseId: "TestReport.setup.action.operation.message",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.setup.action.operation.detail",
      path: "TestReport.setup.action.operation.detail",
      short: "A link to further details on the result",
      definition: "A link to further details on the result.",
      min: 0,
      max: "1",
      base: {
        path: "TestReport.setup.action.operation.detail",
        min: 0,
        max: "1",
      },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.setup.action.operation.detail",
    parentDataPath: "root.setup.action.operation",
    basePath: "root.detail",
    baseId: "TestReport.setup.action.operation.detail",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.setup.action.assert",
      path: "TestReport.setup.action.assert",
      short: "The assertion to perform",
      definition:
        "The results of the assertion performed on the previous operations.",
      min: 0,
      max: "1",
      base: { path: "TestReport.setup.action.assert", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.setup.action.assert",
    parentDataPath: "root.setup.action[0]",
    basePath: "root.assert",
    baseId: "TestReport.setup.action.assert",
    isPrimitive: false,
    childPaths: [
      "root.setup.action.assert.result",
      "root.setup.action.assert.message",
      "root.setup.action.assert.detail",
    ],
    value: "",
  },
  {
    element: {
      id: "TestReport.setup.action.assert.result",
      path: "TestReport.setup.action.assert.result",
      short: "pass | skip | fail | warning | error",
      definition: "The result of this assertion.",
      min: 1,
      max: "1",
      base: { path: "TestReport.setup.action.assert.result", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TestReportActionResult",
          },
        ],
        strength: "required",
        description: "The result of the execution of an individual action.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/report-action-result-codes|4.3.0",
      },
    },
    dataPath: "root.setup.action.assert.result",
    parentDataPath: "root.setup.action.assert",
    basePath: "root.result",
    baseId: "TestReport.setup.action.assert.result",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "pass",
        display: "Pass",
      },
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "skip",
        display: "Skip",
      },
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "fail",
        display: "Fail",
      },
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "warning",
        display: "Warning",
      },
      {
        system: "http://hl7.org/fhir/report-action-result-codes",
        code: "error",
        display: "Error",
      },
    ],
  },
  {
    element: {
      id: "TestReport.setup.action.assert.message",
      path: "TestReport.setup.action.assert.message",
      short: "A message associated with the result",
      definition: "An explanatory message associated with the result.",
      min: 0,
      max: "1",
      base: {
        path: "TestReport.setup.action.assert.message",
        min: 0,
        max: "1",
      },
      type: [{ code: "markdown" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.setup.action.assert.message",
    parentDataPath: "root.setup.action.assert",
    basePath: "root.message",
    baseId: "TestReport.setup.action.assert.message",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.setup.action.assert.detail",
      path: "TestReport.setup.action.assert.detail",
      short: "A link to further details on the result",
      definition: "A link to further details on the result.",
      min: 0,
      max: "1",
      base: { path: "TestReport.setup.action.assert.detail", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.setup.action.assert.detail",
    parentDataPath: "root.setup.action.assert",
    basePath: "root.detail",
    baseId: "TestReport.setup.action.assert.detail",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.test",
      path: "TestReport.test",
      short: "A test executed from the test script",
      definition: "A test executed from the test script.",
      min: 0,
      max: "*",
      base: { path: "TestReport.test", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.test[0]",
    parentDataPath: "root",
    basePath: "root.test",
    baseId: "TestReport.test",
    isPrimitive: false,
    childPaths: [
      "root.test.name",
      "root.test.description",
      "root.test.action[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "TestReport.test.name",
      path: "TestReport.test.name",
      short: "Tracking/logging name of this test",
      definition:
        "The name of this test used for tracking/logging purposes by test engines.",
      min: 0,
      max: "1",
      base: { path: "TestReport.test.name", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.test.name",
    parentDataPath: "root.test[0]",
    basePath: "root.name",
    baseId: "TestReport.test.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.test.description",
      path: "TestReport.test.description",
      short: "Tracking/reporting short description of the test",
      definition:
        "A short description of the test used by test engines for tracking and reporting purposes.",
      min: 0,
      max: "1",
      base: { path: "TestReport.test.description", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.test.description",
    parentDataPath: "root.test[0]",
    basePath: "root.description",
    baseId: "TestReport.test.description",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.test.action",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "TestAction",
        },
      ],
      path: "TestReport.test.action",
      short: "A test operation or assert that was performed",
      definition: "Action would contain either an operation or an assertion.",
      comment:
        "An action should contain either an operation or an assertion but not both.  It can contain any number of variables.",
      min: 1,
      max: "*",
      base: { path: "TestReport.test.action", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
        {
          key: "inv-2",
          severity: "error",
          human:
            "Test action SHALL contain either an operation or assert but not both.",
          expression: "operation.exists() xor assert.exists()",
          xpath: "(f:operation or f:assert) and not(f:operation and f:assert)",
          source: "http://hl7.org/fhir/StructureDefinition/TestReport",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.test.action[0]",
    parentDataPath: "root.test[0]",
    basePath: "root.action",
    baseId: "TestReport.test.action",
    isPrimitive: false,
    childPaths: ["root.test.action.operation", "root.test.action.assert"],
    value: "",
  },
  {
    element: {
      id: "TestReport.test.action.assert",
      path: "TestReport.test.action.assert",
      short: "The assertion performed",
      definition:
        "The results of the assertion performed on the previous operations.",
      min: 0,
      max: "1",
      base: { path: "TestReport.test.action.assert", min: 0, max: "1" },
      contentReference: "#TestReport.setup.action.assert",
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.test.action.assert",
    parentDataPath: "root.test.action[0]",
    basePath: "root.assert",
    baseId: "TestReport.test.action.assert",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "TestReport.teardown",
      path: "TestReport.teardown",
      short: "The results of running the series of required clean up steps",
      definition:
        "The results of the series of operations required to clean up after all the tests were executed (successfully or otherwise).",
      min: 0,
      max: "1",
      base: { path: "TestReport.teardown", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.teardown",
    parentDataPath: "root",
    basePath: "root.teardown",
    baseId: "TestReport.teardown",
    isPrimitive: false,
    childPaths: ["root.teardown.action[0]"],
    value: "",
  },
  {
    element: {
      id: "TestReport.teardown.action",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "TeardownAction",
        },
      ],
      path: "TestReport.teardown.action",
      short: "One or more teardown operations performed",
      definition: "The teardown action will only contain an operation.",
      comment:
        "An action should contain either an operation or an assertion but not both.  It can contain any number of variables.",
      min: 1,
      max: "*",
      base: { path: "TestReport.teardown.action", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.teardown.action[0]",
    parentDataPath: "root.teardown",
    basePath: "root.action",
    baseId: "TestReport.teardown.action",
    isPrimitive: false,
    childPaths: ["root.teardown.action.operation"],
    value: "",
  },
  {
    element: {
      id: "TestReport",
      path: "TestReport",
      short: "Describes the results of a TestScript execution",
      definition:
        "A summary of information based on the results of executing a TestScript.",
      min: 0,
      max: "*",
      base: { path: "TestReport", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "rim", map: "n/a" },
        { identity: "objimpl", map: "BaseConformance" },
        { identity: "w5", map: "conformance.misc" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "TestReport",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
