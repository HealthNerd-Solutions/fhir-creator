const data = [
  {
    element: {
      id: "VisionPrescription.meta",
      path: "VisionPrescription.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "VisionPrescription.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.implicitRules",
      path: "VisionPrescription.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "VisionPrescription.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.language",
      path: "VisionPrescription.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "VisionPrescription.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "VisionPrescription.contained",
      path: "VisionPrescription.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/VisionPrescription",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "VisionPrescription.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.status",
      path: "VisionPrescription.status",
      short: "active | cancelled | draft | entered-in-error",
      definition: "The status of the resource instance.",
      comment:
        "This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.",
      requirements:
        "Need to track the status of the resource as 'draft' resources may undergo further edits while 'active' resources are immutable and may only have their status changed to 'cancelled'.",
      min: 1,
      max: "1",
      base: { path: "VisionPrescription.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labelled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "VisionStatus",
          },
        ],
        strength: "required",
        description: "A code specifying the state of the resource instance.",
        valueSet: "http://hl7.org/fhir/ValueSet/fm-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Request.status" },
        { identity: "w5", map: "FiveWs.status" },
        { identity: "rim", map: "Act.status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "VisionPrescription.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "cancelled",
        display: "Cancelled",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
    ],
  },
  {
    element: {
      id: "VisionPrescription.created",
      path: "VisionPrescription.created",
      short: "Response creation date",
      definition: "The date this resource was created.",
      requirements:
        "Need to record a timestamp for use by both the recipient and the issuer.",
      min: 1,
      max: "1",
      base: { path: "VisionPrescription.created", min: 1, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.created",
    parentDataPath: "root",
    basePath: "root.created",
    baseId: "VisionPrescription.created",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.encounter",
      path: "VisionPrescription.encounter",
      short: "Created during encounter / admission / stay",
      definition:
        "A reference to a resource that identifies the particular occurrence of contact between patient and health care provider during which the prescription was issued.",
      requirements:
        "Used in some jurisdictions to link clinical events to claim items.",
      min: 0,
      max: "1",
      base: { path: "VisionPrescription.encounter", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Encounter"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Request.context" },
        { identity: "w5", map: "FiveWs.context" },
        { identity: "v2", map: "PV1-19-Visit Number" },
        { identity: "rim", map: "componentOf.patientEncounter" },
      ],
    },
    dataPath: "root.encounter",
    parentDataPath: "root",
    basePath: "root.encounter",
    baseId: "VisionPrescription.encounter",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.dateWritten",
      path: "VisionPrescription.dateWritten",
      short: "When prescription was authorized",
      definition:
        "The date (and perhaps time) when the prescription was written.",
      comment:
        "Jurisdictions determine the valid lifetime of a prescription. Typically vision prescriptions are valid for two years from the date written.",
      requirements:
        "Need to record a timestamp for use by both the recipient and the issuer.",
      min: 1,
      max: "1",
      base: { path: "VisionPrescription.dateWritten", min: 1, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.authoredOn" },
        { identity: "w5", map: "FiveWs.recorded" },
        {
          identity: "v2",
          map: "RXE-32-Original Order Date/Time / ORC-9-Date/Time of Transaction",
        },
        { identity: "rim", map: "author.time" },
      ],
    },
    dataPath: "root.dateWritten",
    parentDataPath: "root",
    basePath: "root.dateWritten",
    baseId: "VisionPrescription.dateWritten",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification",
      path: "VisionPrescription.lensSpecification",
      short: "Vision lens authorization",
      definition:
        "Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals.",
      min: 1,
      max: "*",
      base: { path: "VisionPrescription.lensSpecification", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "rim", map: "component.supplyEvent" }],
    },
    dataPath: "root.lensSpecification[0]",
    parentDataPath: "root",
    basePath: "root.lensSpecification",
    baseId: "VisionPrescription.lensSpecification",
    isPrimitive: false,
    childPaths: [
      "root.lensSpecification.product",
      "root.lensSpecification.eye",
      "root.lensSpecification.sphere",
      "root.lensSpecification.cylinder",
      "root.lensSpecification.axis",
      "root.lensSpecification.prism[0]",
      "root.lensSpecification.add",
      "root.lensSpecification.power",
      "root.lensSpecification.backCurve",
      "root.lensSpecification.diameter",
      "root.lensSpecification.duration",
      "root.lensSpecification.color",
      "root.lensSpecification.brand",
      "root.lensSpecification.note[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.product",
      path: "VisionPrescription.lensSpecification.product",
      short: "Product to be supplied",
      definition:
        "Identifies the type of vision correction product which is required for the patient.",
      requirements: "Need to identify whether glasses or contacts.",
      min: 1,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.product",
        min: 1,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "VisionProduct",
          },
        ],
        strength: "example",
        description: "A coded concept describing the vision products.",
        valueSet: "http://hl7.org/fhir/ValueSet/vision-product",
      },
      mapping: [
        {
          identity: "v2",
          map: "RXE-2-Give Code / RXO-1-Requested Give Code / RXD-2-Dispense/Give Code",
        },
        { identity: "rim", map: "consumable.role" },
      ],
    },
    dataPath: "root.lensSpecification.product",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.product",
    baseId: "VisionPrescription.lensSpecification.product",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system:
          "http://terminology.hl7.org/CodeSystem/ex-visionprescriptionproduct",
        code: "lens",
        display: "Lens",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/ex-visionprescriptionproduct",
        code: "contact",
        display: "Contact Lens",
      },
    ],
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.eye",
      path: "VisionPrescription.lensSpecification.eye",
      short: "right | left",
      definition: "The eye for which the lens specification applies.",
      comment:
        "May also appear as OD (oculus dexter) for the right eye and OS (oculus siniter) for the left eye.",
      requirements:
        "Needed to identify which eye the lens specification applies to.",
      min: 1,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.eye",
        min: 1,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "VisionEyes",
          },
        ],
        strength: "required",
        description: "A coded concept listing the eye codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/vision-eye-codes|4.3.0",
      },
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.eye",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.eye",
    baseId: "VisionPrescription.lensSpecification.eye",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/vision-eye-codes",
        code: "right",
        display: "Right Eye",
      },
      {
        system: "http://hl7.org/fhir/vision-eye-codes",
        code: "left",
        display: "Left Eye",
      },
    ],
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.sphere",
      path: "VisionPrescription.lensSpecification.sphere",
      short: "Power of the lens",
      definition: "Lens power measured in dioptres (0.25 units).",
      comment:
        "The value is negative for near-sighted and positive for far sighted.\nOften insurance will not cover a lens with power between +75 and -75.",
      requirements: "Standard lens prescription measures.",
      min: 0,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.sphere",
        min: 0,
        max: "1",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.sphere",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.sphere",
    baseId: "VisionPrescription.lensSpecification.sphere",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.cylinder",
      path: "VisionPrescription.lensSpecification.cylinder",
      short: "Lens power for astigmatism",
      definition:
        "Power adjustment for astigmatism measured in dioptres (0.25 units).",
      requirements: "Standard lens prescription measures.",
      min: 0,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.cylinder",
        min: 0,
        max: "1",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.cylinder",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.cylinder",
    baseId: "VisionPrescription.lensSpecification.cylinder",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.axis",
      path: "VisionPrescription.lensSpecification.axis",
      short: "Lens meridian which contain no power for astigmatism",
      definition: "Adjustment for astigmatism measured in integer degrees.",
      comment: "The limits are +180 and -180 degrees.",
      requirements: "Standard lens prescription measures.",
      min: 0,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.axis",
        min: 0,
        max: "1",
      },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.axis",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.axis",
    baseId: "VisionPrescription.lensSpecification.axis",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.prism",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Prism",
        },
      ],
      path: "VisionPrescription.lensSpecification.prism",
      short: "Eye alignment compensation",
      definition: "Allows for adjustment on two axis.",
      requirements: "Standard lens prescription measures.",
      min: 0,
      max: "*",
      base: {
        path: "VisionPrescription.lensSpecification.prism",
        min: 0,
        max: "*",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.lensSpecification.prism[0]",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.prism",
    baseId: "VisionPrescription.lensSpecification.prism",
    isPrimitive: false,
    childPaths: [
      "root.lensSpecification.prism.amount",
      "root.lensSpecification.prism.base",
    ],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.prism.amount",
      path: "VisionPrescription.lensSpecification.prism.amount",
      short: "Amount of adjustment",
      definition:
        "Amount of prism to compensate for eye alignment in fractional units.",
      requirements: "Standard lens prescription measures.",
      min: 1,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.prism.amount",
        min: 1,
        max: "1",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.prism.amount",
    parentDataPath: "root.lensSpecification.prism[0]",
    basePath: "root.amount",
    baseId: "VisionPrescription.lensSpecification.prism.amount",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.prism.base",
      path: "VisionPrescription.lensSpecification.prism.base",
      short: "up | down | in | out",
      definition: "The relative base, or reference lens edge, for the prism.",
      requirements: "Standard lens prescription measures.",
      min: 1,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.prism.base",
        min: 1,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "VisionBase",
          },
        ],
        strength: "required",
        description: "A coded concept listing the base codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/vision-base-codes|4.3.0",
      },
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.prism.base",
    parentDataPath: "root.lensSpecification.prism[0]",
    basePath: "root.base",
    baseId: "VisionPrescription.lensSpecification.prism.base",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/vision-base-codes",
        code: "up",
        display: "Up",
      },
      {
        system: "http://hl7.org/fhir/vision-base-codes",
        code: "down",
        display: "Down",
      },
      {
        system: "http://hl7.org/fhir/vision-base-codes",
        code: "in",
        display: "In",
      },
      {
        system: "http://hl7.org/fhir/vision-base-codes",
        code: "out",
        display: "Out",
      },
    ],
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.add",
      path: "VisionPrescription.lensSpecification.add",
      short: "Added power for multifocal levels",
      definition:
        "Power adjustment for multifocal lenses measured in dioptres (0.25 units).",
      requirements: "Standard lens prescription measures.",
      min: 0,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.add",
        min: 0,
        max: "1",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.add",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.add",
    baseId: "VisionPrescription.lensSpecification.add",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.power",
      path: "VisionPrescription.lensSpecification.power",
      short: "Contact lens power",
      definition: "Contact lens power measured in dioptres (0.25 units).",
      requirements: "Standard contact lens prescription measures.",
      min: 0,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.power",
        min: 0,
        max: "1",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.power",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.power",
    baseId: "VisionPrescription.lensSpecification.power",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.backCurve",
      path: "VisionPrescription.lensSpecification.backCurve",
      short: "Contact lens back curvature",
      definition: "Back curvature measured in millimetres.",
      requirements: "Standard contact lens prescription measures.",
      min: 0,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.backCurve",
        min: 0,
        max: "1",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.backCurve",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.backCurve",
    baseId: "VisionPrescription.lensSpecification.backCurve",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.diameter",
      path: "VisionPrescription.lensSpecification.diameter",
      short: "Contact lens diameter",
      definition: "Contact lens diameter measured in millimetres.",
      requirements: "Standard contact lens prescription measures.",
      min: 0,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.diameter",
        min: 0,
        max: "1",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.diameter",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.diameter",
    baseId: "VisionPrescription.lensSpecification.diameter",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.color",
      path: "VisionPrescription.lensSpecification.color",
      short: "Color required",
      definition: "Special color or pattern.",
      requirements: "Standard contact lens prescription measures.",
      min: 0,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.color",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.color",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.color",
    baseId: "VisionPrescription.lensSpecification.color",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription.lensSpecification.brand",
      path: "VisionPrescription.lensSpecification.brand",
      short: "Brand required",
      definition: "Brand recommendations or restrictions.",
      requirements: "Standard lens prescription measures.",
      min: 0,
      max: "1",
      base: {
        path: "VisionPrescription.lensSpecification.brand",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.lensSpecification.brand",
    parentDataPath: "root.lensSpecification[0]",
    basePath: "root.brand",
    baseId: "VisionPrescription.lensSpecification.brand",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VisionPrescription",
      path: "VisionPrescription",
      short: "Prescription for vision correction products for a patient",
      definition:
        "An authorization for the provision of glasses and/or contact lenses to a patient.",
      min: 0,
      max: "*",
      base: { path: "VisionPrescription", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Request" },
        { identity: "rim", map: "CombinedVisionRequest" },
        { identity: "w5", map: "clinical.careprovision" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "VisionPrescription",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
