const data = [
  {
    element: {
      id: "PaymentReconciliation.meta",
      path: "PaymentReconciliation.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "PaymentReconciliation.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.implicitRules",
      path: "PaymentReconciliation.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "PaymentReconciliation.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.language",
      path: "PaymentReconciliation.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "PaymentReconciliation.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "PaymentReconciliation.contained",
      path: "PaymentReconciliation.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source:
            "http://hl7.org/fhir/StructureDefinition/PaymentReconciliation",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "PaymentReconciliation.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.status",
      path: "PaymentReconciliation.status",
      short: "active | cancelled | draft | entered-in-error",
      definition: "The status of the resource instance.",
      comment:
        "This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.",
      requirements:
        "Need to track the status of the resource as 'draft' resources may undergo further edits while 'active' resources are immutable and may only have their status changed to 'cancelled'.",
      min: 1,
      max: "1",
      base: { path: "PaymentReconciliation.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labelled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "PaymentReconciliationStatus",
          },
        ],
        strength: "required",
        description: "A code specifying the state of the resource instance.",
        valueSet: "http://hl7.org/fhir/ValueSet/fm-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Event.status" },
        { identity: "w5", map: "FiveWs.status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "PaymentReconciliation.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "cancelled",
        display: "Cancelled",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
    ],
  },
  {
    element: {
      id: "PaymentReconciliation.created",
      path: "PaymentReconciliation.created",
      short: "Creation date",
      definition: "The date when the resource was created.",
      requirements:
        "Need to record a timestamp for use by both the recipient and the issuer.",
      min: 1,
      max: "1",
      base: { path: "PaymentReconciliation.created", min: 1, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Event.occurrence[x]" },
        { identity: "w5", map: "FiveWs.recorded" },
      ],
    },
    dataPath: "root.created",
    parentDataPath: "root",
    basePath: "root.created",
    baseId: "PaymentReconciliation.created",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.request",
      path: "PaymentReconciliation.request",
      short: "Reference to requesting resource",
      definition: "Original request resource reference.",
      requirements: "Needed to allow the response to be linked to the request.",
      min: 0,
      max: "1",
      base: { path: "PaymentReconciliation.request", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Task"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.why[x]" },
        { identity: "cdanetv4", map: "A02|G01" },
      ],
    },
    dataPath: "root.request",
    parentDataPath: "root",
    basePath: "root.request",
    baseId: "PaymentReconciliation.request",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.outcome",
      path: "PaymentReconciliation.outcome",
      short: "queued | complete | error | partial",
      definition: "The outcome of a request for a reconciliation.",
      comment:
        "The resource may be used to indicate that: the request has been held (queued) for processing; that it has been processed and errors found (error); that no errors were found and that some of the adjudication has been undertaken (partial) or that all of the adjudication has been undertaken (complete).",
      requirements: "To advise the requestor of an overall processing outcome.",
      min: 0,
      max: "1",
      base: { path: "PaymentReconciliation.outcome", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "RemittanceOutcome",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The outcome of the processing.",
        valueSet: "http://hl7.org/fhir/ValueSet/remittance-outcome|4.3.0",
      },
    },
    dataPath: "root.outcome",
    parentDataPath: "root",
    basePath: "root.outcome",
    baseId: "PaymentReconciliation.outcome",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "queued",
        display: "Queued",
      },
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "complete",
        display: "Complete",
      },
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "error",
        display: "Error",
      },
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "partial",
        display: "Partial",
      },
    ],
  },
  {
    element: {
      id: "PaymentReconciliation.disposition",
      path: "PaymentReconciliation.disposition",
      short: "Disposition message",
      definition:
        "A human readable description of the status of the request for the reconciliation.",
      requirements: "Provided for user display.",
      min: 0,
      max: "1",
      base: { path: "PaymentReconciliation.disposition", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Event.note" }],
    },
    dataPath: "root.disposition",
    parentDataPath: "root",
    basePath: "root.disposition",
    baseId: "PaymentReconciliation.disposition",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.paymentDate",
      path: "PaymentReconciliation.paymentDate",
      short: "When payment issued",
      definition:
        "The date of payment as indicated on the financial instrument.",
      requirements: "To advise the payee when payment can be expected.",
      min: 1,
      max: "1",
      base: { path: "PaymentReconciliation.paymentDate", min: 1, max: "1" },
      type: [{ code: "date" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.paymentDate",
    parentDataPath: "root",
    basePath: "root.paymentDate",
    baseId: "PaymentReconciliation.paymentDate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.paymentIdentifier",
      path: "PaymentReconciliation.paymentIdentifier",
      short: "Business identifier for the payment",
      definition: "Issuer's unique identifier for the payment instrument.",
      comment: "For example: EFT number or check number.",
      requirements:
        "Enable the receiver to reconcile when payment is received.",
      min: 0,
      max: "1",
      base: {
        path: "PaymentReconciliation.paymentIdentifier",
        min: 0,
        max: "1",
      },
      type: [{ code: "Identifier" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.paymentIdentifier",
    parentDataPath: "root",
    basePath: "root.paymentIdentifier",
    baseId: "PaymentReconciliation.paymentIdentifier",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.detail",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Details",
        },
      ],
      path: "PaymentReconciliation.detail",
      short: "Settlement particulars",
      definition:
        "Distribution of the payment amount for a previously acknowledged payable.",
      requirements:
        "Needed to show how the payment amount is distributed across the payables.",
      min: 0,
      max: "*",
      base: { path: "PaymentReconciliation.detail", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.detail[0]",
    parentDataPath: "root",
    basePath: "root.detail",
    baseId: "PaymentReconciliation.detail",
    isPrimitive: false,
    childPaths: [
      "root.detail.identifier",
      "root.detail.predecessor",
      "root.detail.type",
      "root.detail.request",
      "root.detail.submitter",
      "root.detail.response",
      "root.detail.date",
      "root.detail.responsible",
      "root.detail.payee",
      "root.detail.amount",
    ],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.detail.predecessor",
      path: "PaymentReconciliation.detail.predecessor",
      short: "Business identifier of the prior payment detail",
      definition:
        "Unique identifier for the prior payment item for the referenced payable.",
      requirements: "Needed for reconciliation of payments.",
      min: 0,
      max: "1",
      base: {
        path: "PaymentReconciliation.detail.predecessor",
        min: 0,
        max: "1",
      },
      type: [{ code: "Identifier" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.detail.predecessor",
    parentDataPath: "root.detail[0]",
    basePath: "root.predecessor",
    baseId: "PaymentReconciliation.detail.predecessor",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.detail.type",
      path: "PaymentReconciliation.detail.type",
      short: "Category of payment",
      definition: "Code to indicate the nature of the payment.",
      comment: "For example: payment, adjustment, funds advance, etc.",
      requirements: "Needed to provide context for the amount.",
      min: 1,
      max: "1",
      base: { path: "PaymentReconciliation.detail.type", min: 1, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "PaymentType",
          },
        ],
        strength: "example",
        description: "The reason for the amount: payment, adjustment, advance.",
        valueSet: "http://hl7.org/fhir/ValueSet/payment-type",
      },
    },
    dataPath: "root.detail.type",
    parentDataPath: "root.detail[0]",
    basePath: "root.type",
    baseId: "PaymentReconciliation.detail.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/payment-type",
        code: "payment",
        display: "Payment",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/payment-type",
        code: "adjustment",
        display: "Adjustment",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/payment-type",
        code: "advance",
        display: "Advance",
      },
    ],
  },
  {
    element: {
      id: "PaymentReconciliation.detail.submitter",
      path: "PaymentReconciliation.detail.submitter",
      short: "Submitter of the request",
      definition:
        "The party which submitted the claim or financial transaction.",
      requirements: "Needed for audit and validation.",
      min: 0,
      max: "1",
      base: {
        path: "PaymentReconciliation.detail.submitter",
        min: 0,
        max: "1",
      },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.detail.submitter",
    parentDataPath: "root.detail[0]",
    basePath: "root.submitter",
    baseId: "PaymentReconciliation.detail.submitter",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.detail.date",
      path: "PaymentReconciliation.detail.date",
      short: "Date of commitment to pay",
      definition:
        "The date from the response resource containing a commitment to pay.",
      requirements: "Needed for audit and validation.",
      min: 0,
      max: "1",
      base: { path: "PaymentReconciliation.detail.date", min: 0, max: "1" },
      type: [{ code: "date" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.detail.date",
    parentDataPath: "root.detail[0]",
    basePath: "root.date",
    baseId: "PaymentReconciliation.detail.date",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.detail.payee",
      path: "PaymentReconciliation.detail.payee",
      short: "Recipient of the payment",
      definition: "The party which is receiving the payment.",
      requirements: "Needed for audit and validation.",
      min: 0,
      max: "1",
      base: { path: "PaymentReconciliation.detail.payee", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.detail.payee",
    parentDataPath: "root.detail[0]",
    basePath: "root.payee",
    baseId: "PaymentReconciliation.detail.payee",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.formCode",
      path: "PaymentReconciliation.formCode",
      short: "Printed form identifier",
      definition: "A code for the form to be used for printing the content.",
      comment: "May be needed to identify specific jurisdictional forms.",
      requirements:
        "Needed to specify the specific form used for producing output for this response.",
      min: 0,
      max: "1",
      base: { path: "PaymentReconciliation.formCode", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Forms",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "example",
        description: "The forms codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/forms",
      },
    },
    dataPath: "root.formCode",
    parentDataPath: "root",
    basePath: "root.formCode",
    baseId: "PaymentReconciliation.formCode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/forms-codes",
        code: "1",
        display: "Form #1",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/forms-codes",
        code: "2",
        display: "Form #1",
      },
    ],
  },
  {
    element: {
      id: "PaymentReconciliation.processNote",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Notes",
        },
      ],
      path: "PaymentReconciliation.processNote",
      short: "Note concerning processing",
      definition:
        "A note that describes or explains the processing in a human readable form.",
      requirements:
        "Provides the specific textual explanations associated with the processing.",
      min: 0,
      max: "*",
      base: { path: "PaymentReconciliation.processNote", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.processNote[0]",
    parentDataPath: "root",
    basePath: "root.processNote",
    baseId: "PaymentReconciliation.processNote",
    isPrimitive: false,
    childPaths: ["root.processNote.type", "root.processNote.text"],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation.processNote.type",
      path: "PaymentReconciliation.processNote.type",
      short: "display | print | printoper",
      definition: "The business purpose of the note text.",
      requirements: "To convey the expectation for when the text is used.",
      min: 0,
      max: "1",
      base: {
        path: "PaymentReconciliation.processNote.type",
        min: 0,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "NoteType",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The presentation types of notes.",
        valueSet: "http://hl7.org/fhir/ValueSet/note-type|4.3.0",
      },
    },
    dataPath: "root.processNote.type",
    parentDataPath: "root.processNote[0]",
    basePath: "root.type",
    baseId: "PaymentReconciliation.processNote.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/note-type",
        code: "display",
        display: "Display",
      },
      {
        system: "http://hl7.org/fhir/note-type",
        code: "print",
        display: "Print (Form)",
      },
      {
        system: "http://hl7.org/fhir/note-type",
        code: "printoper",
        display: "Print (Operator)",
      },
    ],
  },
  {
    element: {
      id: "PaymentReconciliation.processNote.text",
      path: "PaymentReconciliation.processNote.text",
      short: "Note explanatory text",
      definition:
        "The explanation or description associated with the processing.",
      requirements: "Required to provide human readable explanation.",
      min: 0,
      max: "1",
      base: {
        path: "PaymentReconciliation.processNote.text",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "cdanetv4", map: "G32" }],
    },
    dataPath: "root.processNote.text",
    parentDataPath: "root.processNote[0]",
    basePath: "root.text",
    baseId: "PaymentReconciliation.processNote.text",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "PaymentReconciliation",
      path: "PaymentReconciliation",
      short: "PaymentReconciliation resource",
      definition:
        "This resource provides the details including amount of a payment and allocates the payment items being paid.",
      min: 0,
      max: "*",
      base: { path: "PaymentReconciliation", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Event" },
        { identity: "w5", map: "financial.payment" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "PaymentReconciliation",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
