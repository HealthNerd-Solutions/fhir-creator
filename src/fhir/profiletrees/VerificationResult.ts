const data = [
  {
    element: {
      id: "VerificationResult.meta",
      path: "VerificationResult.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "VerificationResult.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.implicitRules",
      path: "VerificationResult.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "VerificationResult.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.language",
      path: "VerificationResult.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "VerificationResult.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "VerificationResult.contained",
      path: "VerificationResult.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/VerificationResult",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "VerificationResult.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.targetLocation",
      path: "VerificationResult.targetLocation",
      short: "The fhirpath location(s) within the resource that was validated",
      definition:
        "The fhirpath location(s) within the resource that was validated.",
      min: 0,
      max: "*",
      base: { path: "VerificationResult.targetLocation", min: 0, max: "*" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.targetLocation[0]",
    parentDataPath: "root",
    basePath: "root.targetLocation",
    baseId: "VerificationResult.targetLocation",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.need",
      path: "VerificationResult.need",
      short: "none | initial | periodic",
      definition:
        "The frequency with which the target must be validated (none; initial; periodic).",
      min: 0,
      max: "1",
      base: { path: "VerificationResult.need", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "need",
          },
        ],
        strength: "preferred",
        description: "The frequency with which the target must be validated.",
        valueSet: "http://hl7.org/fhir/ValueSet/verificationresult-need",
      },
    },
    dataPath: "root.need",
    parentDataPath: "root",
    basePath: "root.need",
    baseId: "VerificationResult.need",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/need",
        code: "none",
        display: "None",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/need",
        code: "initial",
        display: "Initial",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/need",
        code: "periodic",
        display: "Periodic",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.status",
      path: "VerificationResult.status",
      short:
        "attested | validated | in-process | req-revalid | val-fail | reval-fail",
      definition:
        "The validation status of the target (attested; validated; in process; requires revalidation; validation failed; revalidation failed).",
      min: 1,
      max: "1",
      base: { path: "VerificationResult.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "status",
          },
        ],
        strength: "required",
        description: "The validation status of the target.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-status|4.3.0",
      },
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "VerificationResult.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/verificationresult-status",
        code: "attested",
        display: "Attested",
      },
      {
        system: "http://hl7.org/fhir/verificationresult-status",
        code: "validated",
        display: "Validated",
      },
      {
        system: "http://hl7.org/fhir/verificationresult-status",
        code: "in-process",
        display: "In process",
      },
      {
        system: "http://hl7.org/fhir/verificationresult-status",
        code: "req-revalid",
        display: "Requires revalidation",
      },
      {
        system: "http://hl7.org/fhir/verificationresult-status",
        code: "val-fail",
        display: "Validation failed",
      },
      {
        system: "http://hl7.org/fhir/verificationresult-status",
        code: "reval-fail",
        display: "Re-Validation failed",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.statusDate",
      path: "VerificationResult.statusDate",
      short: "When the validation status was updated",
      definition: "When the validation status was updated.",
      min: 0,
      max: "1",
      base: { path: "VerificationResult.statusDate", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.statusDate",
    parentDataPath: "root",
    basePath: "root.statusDate",
    baseId: "VerificationResult.statusDate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.validationType",
      path: "VerificationResult.validationType",
      short: "nothing | primary | multiple",
      definition:
        "What the target is validated against (nothing; primary source; multiple sources).",
      min: 0,
      max: "1",
      base: { path: "VerificationResult.validationType", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "validation-type",
          },
        ],
        strength: "preferred",
        description: "What the target is validated against.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-validation-type",
      },
    },
    dataPath: "root.validationType",
    parentDataPath: "root",
    basePath: "root.validationType",
    baseId: "VerificationResult.validationType",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-type",
        code: "nothing",
        display: "Nothing",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-type",
        code: "primary",
        display: "Primary Source",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-type",
        code: "multiple",
        display: "Multiple Sources",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.validationProcess",
      path: "VerificationResult.validationProcess",
      short:
        "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context)",
      definition:
        "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context).",
      min: 0,
      max: "*",
      base: { path: "VerificationResult.validationProcess", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "validation-process",
          },
        ],
        strength: "example",
        description: "The primary process by which the target is validated.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-validation-process",
      },
    },
    dataPath: "root.validationProcess[0]",
    parentDataPath: "root",
    basePath: "root.validationProcess",
    baseId: "VerificationResult.validationProcess",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
        code: "edit-check",
        display: "edit check",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
        code: "valueset",
        display: "value set",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
        code: "primary",
        display: "primary source",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
        code: "multi",
        display: "multiple sources",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
        code: "standalone",
        display: "standalone",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-process",
        code: "in-context",
        display: "in context",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.lastPerformed",
      path: "VerificationResult.lastPerformed",
      short:
        "The date/time validation was last completed (including failed validations)",
      definition:
        "The date/time validation was last completed (including failed validations).",
      min: 0,
      max: "1",
      base: { path: "VerificationResult.lastPerformed", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.lastPerformed",
    parentDataPath: "root",
    basePath: "root.lastPerformed",
    baseId: "VerificationResult.lastPerformed",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.nextScheduled",
      path: "VerificationResult.nextScheduled",
      short: "The date when target is next validated, if appropriate",
      definition: "The date when target is next validated, if appropriate.",
      min: 0,
      max: "1",
      base: { path: "VerificationResult.nextScheduled", min: 0, max: "1" },
      type: [{ code: "date" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.nextScheduled",
    parentDataPath: "root",
    basePath: "root.nextScheduled",
    baseId: "VerificationResult.nextScheduled",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.failureAction",
      path: "VerificationResult.failureAction",
      short: "fatal | warn | rec-only | none",
      definition:
        "The result if validation fails (fatal; warning; record only; none).",
      min: 0,
      max: "1",
      base: { path: "VerificationResult.failureAction", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "failure-action",
          },
        ],
        strength: "preferred",
        description: "The result if validation fails.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-failure-action",
      },
    },
    dataPath: "root.failureAction",
    parentDataPath: "root",
    basePath: "root.failureAction",
    baseId: "VerificationResult.failureAction",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/failure-action",
        code: "fatal",
        display: "Fatal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/failure-action",
        code: "warn",
        display: "Warning",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/failure-action",
        code: "rec-only",
        display: "Record only",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/failure-action",
        code: "none",
        display: "None",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.primarySource",
      path: "VerificationResult.primarySource",
      short: "Information about the primary source(s) involved in validation",
      definition:
        "Information about the primary source(s) involved in validation.",
      min: 0,
      max: "*",
      base: { path: "VerificationResult.primarySource", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.primarySource[0]",
    parentDataPath: "root",
    basePath: "root.primarySource",
    baseId: "VerificationResult.primarySource",
    isPrimitive: false,
    childPaths: [
      "root.primarySource.who",
      "root.primarySource.type[0]",
      "root.primarySource.communicationMethod[0]",
      "root.primarySource.validationStatus",
      "root.primarySource.validationDate",
      "root.primarySource.canPushUpdates",
      "root.primarySource.pushTypeAvailable[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.primarySource.type",
      path: "VerificationResult.primarySource.type",
      short:
        "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source)",
      definition:
        "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source).",
      min: 0,
      max: "*",
      base: { path: "VerificationResult.primarySource.type", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "primary-source-type",
          },
        ],
        strength: "example",
        description: "Type of the validation primary source.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-primary-source-type",
      },
    },
    dataPath: "root.primarySource.type[0]",
    parentDataPath: "root.primarySource[0]",
    basePath: "root.type",
    baseId: "VerificationResult.primarySource.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
        code: "lic-board",
        display: "License Board",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
        code: "prim",
        display: "Primary Education",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
        code: "cont-ed",
        display: "Continuing Education",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
        code: "post-serv",
        display: "Postal Service",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
        code: "rel-own",
        display: "Relationship owner",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
        code: "reg-auth",
        display: "Registration Authority",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
        code: "legal",
        display: "Legal source",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
        code: "issuer",
        display: "Issuing source",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
        code: "auth-source",
        display: "Authoritative source",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.primarySource.communicationMethod",
      path: "VerificationResult.primarySource.communicationMethod",
      short: "Method for exchanging information with the primary source",
      definition:
        "Method for communicating with the primary source (manual; API; Push).",
      min: 0,
      max: "*",
      base: {
        path: "VerificationResult.primarySource.communicationMethod",
        min: 0,
        max: "*",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "communication-method",
          },
        ],
        strength: "example",
        description:
          "Method for communicating with the data source (manual; API; Push).",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-communication-method",
      },
    },
    dataPath: "root.primarySource.communicationMethod[0]",
    parentDataPath: "root.primarySource[0]",
    basePath: "root.communicationMethod",
    baseId: "VerificationResult.primarySource.communicationMethod",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system:
          "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
        code: "manual",
        display: "Manual",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
        code: "portal",
        display: "Portal",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
        code: "pull",
        display: "Pull",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
        code: "push",
        display: "Push",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.primarySource.validationStatus",
      path: "VerificationResult.primarySource.validationStatus",
      short: "successful | failed | unknown",
      definition:
        "Status of the validation of the target against the primary source (successful; failed; unknown).",
      min: 0,
      max: "1",
      base: {
        path: "VerificationResult.primarySource.validationStatus",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "validation-status",
          },
        ],
        strength: "preferred",
        description:
          "Status of the validation of the target against the primary source.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-validation-status",
      },
    },
    dataPath: "root.primarySource.validationStatus",
    parentDataPath: "root.primarySource[0]",
    basePath: "root.validationStatus",
    baseId: "VerificationResult.primarySource.validationStatus",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-status",
        code: "successful",
        display: "Successful",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-status",
        code: "failed",
        display: "Failed",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/validation-status",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.primarySource.validationDate",
      path: "VerificationResult.primarySource.validationDate",
      short: "When the target was validated against the primary source",
      definition: "When the target was validated against the primary source.",
      min: 0,
      max: "1",
      base: {
        path: "VerificationResult.primarySource.validationDate",
        min: 0,
        max: "1",
      },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.primarySource.validationDate",
    parentDataPath: "root.primarySource[0]",
    basePath: "root.validationDate",
    baseId: "VerificationResult.primarySource.validationDate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.primarySource.canPushUpdates",
      path: "VerificationResult.primarySource.canPushUpdates",
      short: "yes | no | undetermined",
      definition:
        "Ability of the primary source to push updates/alerts (yes; no; undetermined).",
      min: 0,
      max: "1",
      base: {
        path: "VerificationResult.primarySource.canPushUpdates",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "can-push-updates",
          },
        ],
        strength: "preferred",
        description: "Ability of the primary source to push updates/alerts.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-can-push-updates",
      },
    },
    dataPath: "root.primarySource.canPushUpdates",
    parentDataPath: "root.primarySource[0]",
    basePath: "root.canPushUpdates",
    baseId: "VerificationResult.primarySource.canPushUpdates",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/can-push-updates",
        code: "yes",
        display: "Yes",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/can-push-updates",
        code: "no",
        display: "No",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/can-push-updates",
        code: "undetermined",
        display: "Undetermined",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.primarySource.pushTypeAvailable",
      path: "VerificationResult.primarySource.pushTypeAvailable",
      short: "specific | any | source",
      definition:
        "Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source).",
      min: 0,
      max: "*",
      base: {
        path: "VerificationResult.primarySource.pushTypeAvailable",
        min: 0,
        max: "*",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "push-type-available",
          },
        ],
        strength: "preferred",
        description: "Type of alerts/updates the primary source can send.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-push-type-available",
      },
    },
    dataPath: "root.primarySource.pushTypeAvailable[0]",
    parentDataPath: "root.primarySource[0]",
    basePath: "root.pushTypeAvailable",
    baseId: "VerificationResult.primarySource.pushTypeAvailable",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/push-type-available",
        code: "specific",
        display: "Specific requested changes",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/push-type-available",
        code: "any",
        display: "Any changes",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/push-type-available",
        code: "source",
        display: "As defined by source",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.attestation",
      path: "VerificationResult.attestation",
      short: "Information about the entity attesting to information",
      definition: "Information about the entity attesting to information.",
      min: 0,
      max: "1",
      base: { path: "VerificationResult.attestation", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.attestation",
    parentDataPath: "root",
    basePath: "root.attestation",
    baseId: "VerificationResult.attestation",
    isPrimitive: false,
    childPaths: [
      "root.attestation.who",
      "root.attestation.onBehalfOf",
      "root.attestation.communicationMethod",
      "root.attestation.date",
      "root.attestation.sourceIdentityCertificate",
      "root.attestation.proxyIdentityCertificate",
      "root.attestation.proxySignature",
      "root.attestation.sourceSignature",
    ],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.attestation.onBehalfOf",
      path: "VerificationResult.attestation.onBehalfOf",
      short:
        "When the who is asserting on behalf of another (organization or individual)",
      definition:
        "When the who is asserting on behalf of another (organization or individual).",
      min: 0,
      max: "1",
      base: {
        path: "VerificationResult.attestation.onBehalfOf",
        min: 0,
        max: "1",
      },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Organization",
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.attestation.onBehalfOf",
    parentDataPath: "root.attestation",
    basePath: "root.onBehalfOf",
    baseId: "VerificationResult.attestation.onBehalfOf",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.attestation.communicationMethod",
      path: "VerificationResult.attestation.communicationMethod",
      short: "The method by which attested information was submitted/retrieved",
      definition:
        "The method by which attested information was submitted/retrieved (manual; API; Push).",
      min: 0,
      max: "1",
      base: {
        path: "VerificationResult.attestation.communicationMethod",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "communication-method",
          },
        ],
        strength: "example",
        description:
          "Method for communicating with the data source (manual; API; Push).",
        valueSet:
          "http://hl7.org/fhir/ValueSet/verificationresult-communication-method",
      },
    },
    dataPath: "root.attestation.communicationMethod",
    parentDataPath: "root.attestation",
    basePath: "root.communicationMethod",
    baseId: "VerificationResult.attestation.communicationMethod",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system:
          "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
        code: "manual",
        display: "Manual",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
        code: "portal",
        display: "Portal",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
        code: "pull",
        display: "Pull",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
        code: "push",
        display: "Push",
      },
    ],
  },
  {
    element: {
      id: "VerificationResult.attestation.date",
      path: "VerificationResult.attestation.date",
      short: "The date the information was attested to",
      definition: "The date the information was attested to.",
      min: 0,
      max: "1",
      base: { path: "VerificationResult.attestation.date", min: 0, max: "1" },
      type: [{ code: "date" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.attestation.date",
    parentDataPath: "root.attestation",
    basePath: "root.date",
    baseId: "VerificationResult.attestation.date",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.attestation.sourceIdentityCertificate",
      path: "VerificationResult.attestation.sourceIdentityCertificate",
      short:
        "A digital identity certificate associated with the attestation source",
      definition:
        "A digital identity certificate associated with the attestation source.",
      min: 0,
      max: "1",
      base: {
        path: "VerificationResult.attestation.sourceIdentityCertificate",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.attestation.sourceIdentityCertificate",
    parentDataPath: "root.attestation",
    basePath: "root.sourceIdentityCertificate",
    baseId: "VerificationResult.attestation.sourceIdentityCertificate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.attestation.proxyIdentityCertificate",
      path: "VerificationResult.attestation.proxyIdentityCertificate",
      short:
        "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source",
      definition:
        "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source.",
      min: 0,
      max: "1",
      base: {
        path: "VerificationResult.attestation.proxyIdentityCertificate",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.attestation.proxyIdentityCertificate",
    parentDataPath: "root.attestation",
    basePath: "root.proxyIdentityCertificate",
    baseId: "VerificationResult.attestation.proxyIdentityCertificate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.attestation.sourceSignature",
      path: "VerificationResult.attestation.sourceSignature",
      short: "Attester signature",
      definition:
        "Signed assertion by the attestation source that they have attested to the information.",
      min: 0,
      max: "1",
      base: {
        path: "VerificationResult.attestation.sourceSignature",
        min: 0,
        max: "1",
      },
      type: [{ code: "Signature" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.attestation.sourceSignature",
    parentDataPath: "root.attestation",
    basePath: "root.sourceSignature",
    baseId: "VerificationResult.attestation.sourceSignature",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.validator",
      path: "VerificationResult.validator",
      short: "Information about the entity validating information",
      definition: "Information about the entity validating information.",
      min: 0,
      max: "*",
      base: { path: "VerificationResult.validator", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.validator[0]",
    parentDataPath: "root",
    basePath: "root.validator",
    baseId: "VerificationResult.validator",
    isPrimitive: false,
    childPaths: [
      "root.validator.organization",
      "root.validator.identityCertificate",
      "root.validator.attestationSignature",
    ],
    value: "",
  },
  {
    element: {
      id: "VerificationResult.validator.identityCertificate",
      path: "VerificationResult.validator.identityCertificate",
      short: "A digital identity certificate associated with the validator",
      definition:
        "A digital identity certificate associated with the validator.",
      min: 0,
      max: "1",
      base: {
        path: "VerificationResult.validator.identityCertificate",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.validator.identityCertificate",
    parentDataPath: "root.validator[0]",
    basePath: "root.identityCertificate",
    baseId: "VerificationResult.validator.identityCertificate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "VerificationResult",
      path: "VerificationResult",
      short:
        "Describes validation requirements, source(s), status and dates for one or more elements",
      definition:
        "Describes validation requirements, source(s), status and dates for one or more elements.",
      min: 0,
      max: "*",
      base: { path: "VerificationResult", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "w5", map: "administrative.entity" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "VerificationResult",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
