const data = [
  {
    element: {
      id: "AdverseEvent.meta",
      path: "AdverseEvent.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "AdverseEvent.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.implicitRules",
      path: "AdverseEvent.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "AdverseEvent.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.language",
      path: "AdverseEvent.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "AdverseEvent.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "AdverseEvent.contained",
      path: "AdverseEvent.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/AdverseEvent",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "AdverseEvent.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.actuality",
      path: "AdverseEvent.actuality",
      short: "actual | potential",
      definition:
        "Whether the event actually happened, or just had the potential to. Note that this is independent of whether anyone was affected or harmed or how severely.",
      min: 1,
      max: "1",
      base: { path: "AdverseEvent.actuality", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because it has a potential code that indicates the adverse event did not actually happen.",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdverseEventActuality",
          },
        ],
        strength: "required",
        description:
          "Overall nature of the adverse event, e.g. real or potential.",
        valueSet: "http://hl7.org/fhir/ValueSet/adverse-event-actuality|4.3.0",
      },
      mapping: [{ identity: "w5", map: "FiveWs.class" }],
    },
    dataPath: "root.actuality",
    parentDataPath: "root",
    basePath: "root.actuality",
    baseId: "AdverseEvent.actuality",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/adverse-event-actuality",
        code: "actual",
        display: "Adverse Event",
      },
      {
        system: "http://hl7.org/fhir/adverse-event-actuality",
        code: "potential",
        display: "Potential Adverse Event",
      },
    ],
  },
  {
    element: {
      id: "AdverseEvent.category",
      path: "AdverseEvent.category",
      short:
        "product-problem | product-quality | product-use-error | wrong-dose | incorrect-prescribing-information | wrong-technique | wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time | expired-drug | medical-device-use-error | problem-different-manufacturer | unsafe-physical-environment",
      definition:
        "The overall type of event, intended for search and filtering purposes.",
      min: 0,
      max: "*",
      base: { path: "AdverseEvent.category", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdverseEventCategory",
          },
        ],
        strength: "extensible",
        description:
          "Overall categorization of the event, e.g. product-related or situational.",
        valueSet: "http://hl7.org/fhir/ValueSet/adverse-event-category",
      },
      mapping: [{ identity: "w5", map: "FiveWs.class" }],
    },
    dataPath: "root.category[0]",
    parentDataPath: "root",
    basePath: "root.category",
    baseId: "AdverseEvent.category",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-category",
        code: "wrong-patient",
        display: "Wrong Patient",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-category",
        code: "procedure-mishap",
        display: "Procedure Mishap",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-category",
        code: "medication-mishap",
        display: "Medication Mishap",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-category",
        code: "device",
        display: "Device",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-category",
        code: "unsafe-physical-environment",
        display: "Unsafe Physical Environment",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-category",
        code: "hospital-aquired-infection",
        display: "Hospital Acquired Infection",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-category",
        code: "wrong-body-site",
        display: "Wrong Body Site",
      },
    ],
  },
  {
    element: {
      id: "AdverseEvent.subject",
      path: "AdverseEvent.subject",
      short: "Subject impacted by event",
      definition: "This subject or group impacted by the event.",
      comment:
        "If AdverseEvent.resultingCondition differs among members of the group, then use Patient as the subject.",
      requirements:
        "Allows for exposure of biohazard (such as legionella) to a group of individuals in a hospital.",
      alias: ["patient"],
      min: 1,
      max: "1",
      base: { path: "AdverseEvent.subject", min: 1, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Patient",
            "http://hl7.org/fhir/StructureDefinition/Group",
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/RelatedPerson",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "w5", map: "FiveWs.who" }],
    },
    dataPath: "root.subject",
    parentDataPath: "root",
    basePath: "root.subject",
    baseId: "AdverseEvent.subject",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.date",
      path: "AdverseEvent.date",
      short: "When the event occurred",
      definition:
        "The date (and perhaps time) when the adverse event occurred.",
      min: 0,
      max: "1",
      base: { path: "AdverseEvent.date", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "w5", map: "FiveWs.init" }],
    },
    dataPath: "root.date",
    parentDataPath: "root",
    basePath: "root.date",
    baseId: "AdverseEvent.date",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.detected",
      path: "AdverseEvent.detected",
      short: "When the event was detected",
      definition:
        "Estimated or actual date the AdverseEvent began, in the opinion of the reporter.",
      min: 0,
      max: "1",
      base: { path: "AdverseEvent.detected", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.detected",
    parentDataPath: "root",
    basePath: "root.detected",
    baseId: "AdverseEvent.detected",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.recordedDate",
      path: "AdverseEvent.recordedDate",
      short: "When the event was recorded",
      definition:
        "The date on which the existence of the AdverseEvent was first recorded.",
      comment:
        "The recordedDate represents the date when this particular AdverseEvent record was created in the system, not the date of the most recent update.  The date of the last record modification can be retrieved from the resource metadata.",
      min: 0,
      max: "1",
      base: { path: "AdverseEvent.recordedDate", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "w5", map: "FiveWs.recorded" }],
    },
    dataPath: "root.recordedDate",
    parentDataPath: "root",
    basePath: "root.recordedDate",
    baseId: "AdverseEvent.recordedDate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.location",
      path: "AdverseEvent.location",
      short: "Location where adverse event occurred",
      definition: "The information about where the adverse event occurred.",
      min: 0,
      max: "1",
      base: { path: "AdverseEvent.location", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Location"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.location",
    parentDataPath: "root",
    basePath: "root.location",
    baseId: "AdverseEvent.location",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.seriousness",
      path: "AdverseEvent.seriousness",
      short: "Seriousness of the event",
      definition: "Assessment whether this event was of real importance.",
      min: 0,
      max: "1",
      base: { path: "AdverseEvent.seriousness", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdverseEventSeriousness",
          },
        ],
        strength: "example",
        description: "Overall seriousness of this event for the patient.",
        valueSet: "http://hl7.org/fhir/ValueSet/adverse-event-seriousness",
      },
    },
    dataPath: "root.seriousness",
    parentDataPath: "root",
    basePath: "root.seriousness",
    baseId: "AdverseEvent.seriousness",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
        code: "non-serious",
        display: "Non-serious",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
        code: "serious",
        display: "Serious",
      },
    ],
  },
  {
    element: {
      id: "AdverseEvent.severity",
      path: "AdverseEvent.severity",
      short: "mild | moderate | severe",
      definition:
        "Describes the severity of the adverse event, in relation to the subject. Contrast to AdverseEvent.seriousness - a severe rash might not be serious, but a mild heart problem is.",
      min: 0,
      max: "1",
      base: { path: "AdverseEvent.severity", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdverseEventSeverity",
          },
        ],
        strength: "required",
        description:
          "The severity of the adverse event itself, in direct relation to the subject.",
        valueSet: "http://hl7.org/fhir/ValueSet/adverse-event-severity|4.3.0",
      },
    },
    dataPath: "root.severity",
    parentDataPath: "root",
    basePath: "root.severity",
    baseId: "AdverseEvent.severity",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-severity",
        code: "mild",
        display: "Mild",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-severity",
        code: "moderate",
        display: "Moderate",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-severity",
        code: "severe",
        display: "Severe",
      },
    ],
  },
  {
    element: {
      id: "AdverseEvent.outcome",
      path: "AdverseEvent.outcome",
      short:
        "resolved | recovering | ongoing | resolvedWithSequelae | fatal | unknown",
      definition: "Describes the type of outcome from the adverse event.",
      min: 0,
      max: "1",
      base: { path: "AdverseEvent.outcome", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdverseEventOutcome",
          },
        ],
        strength: "required",
        description: "TODO (and should this be required?).",
        valueSet: "http://hl7.org/fhir/ValueSet/adverse-event-outcome|4.3.0",
      },
    },
    dataPath: "root.outcome",
    parentDataPath: "root",
    basePath: "root.outcome",
    baseId: "AdverseEvent.outcome",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
        code: "resolved",
        display: "Resolved",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
        code: "recovering",
        display: "Recovering",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
        code: "ongoing",
        display: "Ongoing",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
        code: "resolvedWithSequelae",
        display: "Resolved with Sequelae",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
        code: "fatal",
        display: "Fatal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-outcome",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "AdverseEvent.contributor",
      path: "AdverseEvent.contributor",
      short:
        "Who  was involved in the adverse event or the potential adverse event",
      definition:
        "Parties that may or should contribute or have contributed information to the adverse event, which can consist of one or more activities.  Such information includes information leading to the decision to perform the activity and how to perform the activity (e.g. consultant), information that the activity itself seeks to reveal (e.g. informant of clinical history), or information about what activity was performed (e.g. informant witness).",
      min: 0,
      max: "*",
      base: { path: "AdverseEvent.contributor", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
            "http://hl7.org/fhir/StructureDefinition/Device",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.contributor[0]",
    parentDataPath: "root",
    basePath: "root.contributor",
    baseId: "AdverseEvent.contributor",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.suspectEntity",
      path: "AdverseEvent.suspectEntity",
      short: "The suspected agent causing the adverse event",
      definition:
        "Describes the entity that is suspected to have caused the adverse event.",
      min: 0,
      max: "*",
      base: { path: "AdverseEvent.suspectEntity", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.suspectEntity[0]",
    parentDataPath: "root",
    basePath: "root.suspectEntity",
    baseId: "AdverseEvent.suspectEntity",
    isPrimitive: false,
    childPaths: [
      "root.suspectEntity.instance",
      "root.suspectEntity.causality[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.suspectEntity.causality",
      path: "AdverseEvent.suspectEntity.causality",
      short: "Information on the possible cause of the event",
      definition: "Information on the possible cause of the event.",
      min: 0,
      max: "*",
      base: { path: "AdverseEvent.suspectEntity.causality", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.suspectEntity.causality[0]",
    parentDataPath: "root.suspectEntity[0]",
    basePath: "root.causality",
    baseId: "AdverseEvent.suspectEntity.causality",
    isPrimitive: false,
    childPaths: [
      "root.suspectEntity.causality.assessment",
      "root.suspectEntity.causality.productRelatedness",
      "root.suspectEntity.causality.author",
      "root.suspectEntity.causality.method",
    ],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.suspectEntity.causality.assessment",
      path: "AdverseEvent.suspectEntity.causality.assessment",
      short: "Assessment of if the entity caused the event",
      definition: "Assessment of if the entity caused the event.",
      min: 0,
      max: "1",
      base: {
        path: "AdverseEvent.suspectEntity.causality.assessment",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdverseEventCausalityAssessment",
          },
        ],
        strength: "example",
        description:
          "Codes for the assessment of whether the entity caused the event.",
        valueSet: "http://hl7.org/fhir/ValueSet/adverse-event-causality-assess",
      },
    },
    dataPath: "root.suspectEntity.causality.assessment",
    parentDataPath: "root.suspectEntity.causality[0]",
    basePath: "root.assessment",
    baseId: "AdverseEvent.suspectEntity.causality.assessment",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-causality-assess",
        code: "certain",
        display: "Certain",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-causality-assess",
        code: "probably-likely",
        display: "Probably/Likely",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-causality-assess",
        code: "possible",
        display: "Possible",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-causality-assess",
        code: "unlikely",
        display: "Unlikely",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-causality-assess",
        code: "conditional-classified",
        display: "Conditional/Classified",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-causality-assess",
        code: "unassessable-unclassifiable",
        display: "Unassessable/Unclassifiable",
      },
    ],
  },
  {
    element: {
      id: "AdverseEvent.suspectEntity.causality.productRelatedness",
      path: "AdverseEvent.suspectEntity.causality.productRelatedness",
      short: "AdverseEvent.suspectEntity.causalityProductRelatedness",
      definition: "AdverseEvent.suspectEntity.causalityProductRelatedness.",
      min: 0,
      max: "1",
      base: {
        path: "AdverseEvent.suspectEntity.causality.productRelatedness",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.suspectEntity.causality.productRelatedness",
    parentDataPath: "root.suspectEntity.causality[0]",
    basePath: "root.productRelatedness",
    baseId: "AdverseEvent.suspectEntity.causality.productRelatedness",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent.suspectEntity.causality.method",
      path: "AdverseEvent.suspectEntity.causality.method",
      short: "ProbabilityScale | Bayesian | Checklist",
      definition: "ProbabilityScale | Bayesian | Checklist.",
      min: 0,
      max: "1",
      base: {
        path: "AdverseEvent.suspectEntity.causality.method",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdverseEventCausalityMethod",
          },
        ],
        strength: "example",
        description: "TODO.",
        valueSet: "http://hl7.org/fhir/ValueSet/adverse-event-causality-method",
      },
    },
    dataPath: "root.suspectEntity.causality.method",
    parentDataPath: "root.suspectEntity.causality[0]",
    basePath: "root.method",
    baseId: "AdverseEvent.suspectEntity.causality.method",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-causality-method",
        code: "probability-scale",
        display: "Probability Scale",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-causality-method",
        code: "bayesian",
        display: "Bayesian",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/adverse-event-causality-method",
        code: "checklist",
        display: "Checklist",
      },
    ],
  },
  {
    element: {
      id: "AdverseEvent.referenceDocument",
      path: "AdverseEvent.referenceDocument",
      short: "AdverseEvent.referenceDocument",
      definition: "AdverseEvent.referenceDocument.",
      min: 0,
      max: "*",
      base: { path: "AdverseEvent.referenceDocument", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/DocumentReference",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.referenceDocument[0]",
    parentDataPath: "root",
    basePath: "root.referenceDocument",
    baseId: "AdverseEvent.referenceDocument",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "AdverseEvent",
      path: "AdverseEvent",
      short:
        "Medical care, research study or other healthcare event causing physical injury",
      definition:
        "Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.",
      alias: ["AE"],
      min: 0,
      max: "*",
      base: { path: "AdverseEvent", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "w5", map: "clinical.general" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "AdverseEvent",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
