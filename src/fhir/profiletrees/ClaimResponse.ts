const data = [
  {
    element: {
      id: "ClaimResponse.meta",
      path: "ClaimResponse.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "ClaimResponse.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.implicitRules",
      path: "ClaimResponse.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "ClaimResponse.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.language",
      path: "ClaimResponse.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "ClaimResponse.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "ClaimResponse.contained",
      path: "ClaimResponse.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/ClaimResponse",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "ClaimResponse.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.status",
      path: "ClaimResponse.status",
      short: "active | cancelled | draft | entered-in-error",
      definition: "The status of the resource instance.",
      comment:
        "This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.",
      requirements:
        "Need to track the status of the resource as 'draft' resources may undergo further edits while 'active' resources are immutable and may only have their status changed to 'cancelled'.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ClaimResponseStatus",
          },
        ],
        strength: "required",
        description: "A code specifying the state of the resource instance.",
        valueSet: "http://hl7.org/fhir/ValueSet/fm-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Event.status" },
        { identity: "w5", map: "FiveWs.status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "ClaimResponse.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "cancelled",
        display: "Cancelled",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.type",
      path: "ClaimResponse.type",
      short: "More granular claim type",
      definition:
        "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
      comment:
        "This may contain the local bill type codes, for example the US UB-04 bill type code or the CMS bill type.",
      requirements:
        "Some jurisdictions need a finer grained claim type for routing and adjudication.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.type", min: 1, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ClaimType",
          },
        ],
        strength: "extensible",
        description: "The type or discipline-style of the claim.",
        valueSet: "http://hl7.org/fhir/ValueSet/claim-type",
      },
      mapping: [{ identity: "w5", map: "FiveWs.class" }],
    },
    dataPath: "root.type",
    parentDataPath: "root",
    basePath: "root.type",
    baseId: "ClaimResponse.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/claim-type",
        code: "institutional",
        display: "Institutional",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/claim-type",
        code: "oral",
        display: "Oral",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/claim-type",
        code: "pharmacy",
        display: "Pharmacy",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/claim-type",
        code: "professional",
        display: "Professional",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/claim-type",
        code: "vision",
        display: "Vision",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.subType",
      path: "ClaimResponse.subType",
      short: "More granular claim type",
      definition:
        "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
      comment:
        "This may contain the local bill type codes, for example the US UB-04 bill type code or the CMS bill type.",
      requirements:
        "Some jurisdictions need a finer grained claim type for routing and adjudication.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.subType", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ClaimSubType",
          },
        ],
        strength: "example",
        description: "A more granular claim typecode.",
        valueSet: "http://hl7.org/fhir/ValueSet/claim-subtype",
      },
      mapping: [{ identity: "w5", map: "FiveWs.class" }],
    },
    dataPath: "root.subType",
    parentDataPath: "root",
    basePath: "root.subType",
    baseId: "ClaimResponse.subType",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-claimsubtype",
        code: "ortho",
        display: "Orthodontic Claim",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-claimsubtype",
        code: "emergency",
        display: "Emergency Claim",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.use",
      path: "ClaimResponse.use",
      short: "claim | preauthorization | predetermination",
      definition:
        "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.",
      requirements:
        "This element is required to understand the nature of the request for adjudication.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.use", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Use",
          },
        ],
        strength: "required",
        description: "Claim, preauthorization, predetermination.",
        valueSet: "http://hl7.org/fhir/ValueSet/claim-use|4.3.0",
      },
      mapping: [{ identity: "w5", map: "FiveWs.class" }],
    },
    dataPath: "root.use",
    parentDataPath: "root",
    basePath: "root.use",
    baseId: "ClaimResponse.use",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/claim-use",
        code: "claim",
        display: "Claim",
      },
      {
        system: "http://hl7.org/fhir/claim-use",
        code: "preauthorization",
        display: "Preauthorization",
      },
      {
        system: "http://hl7.org/fhir/claim-use",
        code: "predetermination",
        display: "Predetermination",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.created",
      path: "ClaimResponse.created",
      short: "Response creation date",
      definition: "The date this resource was created.",
      requirements:
        "Need to record a timestamp for use by both the recipient and the issuer.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.created", min: 1, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Event.occurrence[x]" },
        { identity: "w5", map: "FiveWs.recorded" },
      ],
    },
    dataPath: "root.created",
    parentDataPath: "root",
    basePath: "root.created",
    baseId: "ClaimResponse.created",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.requestor",
      path: "ClaimResponse.requestor",
      short: "Party responsible for the claim",
      definition:
        "The provider which is responsible for the claim, predetermination or preauthorization.",
      comment:
        "Typically this field would be 1..1 where this party is responsible for the claim but not necessarily professionally responsible for the provision of the individual products and services listed below.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.requestor", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "w5", map: "FiveWs.source" }],
    },
    dataPath: "root.requestor",
    parentDataPath: "root",
    basePath: "root.requestor",
    baseId: "ClaimResponse.requestor",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.outcome",
      path: "ClaimResponse.outcome",
      short: "queued | complete | error | partial",
      definition:
        "The outcome of the claim, predetermination, or preauthorization processing.",
      comment:
        "The resource may be used to indicate that: the request has been held (queued) for processing; that it has been processed and errors found (error); that no errors were found and that some of the adjudication has been undertaken (partial) or that all of the adjudication has been undertaken (complete).",
      requirements: "To advise the requestor of an overall processing outcome.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.outcome", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "RemittanceOutcome",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The result of the claim processing.",
        valueSet: "http://hl7.org/fhir/ValueSet/remittance-outcome|4.3.0",
      },
    },
    dataPath: "root.outcome",
    parentDataPath: "root",
    basePath: "root.outcome",
    baseId: "ClaimResponse.outcome",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "queued",
        display: "Queued",
      },
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "complete",
        display: "Complete",
      },
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "error",
        display: "Error",
      },
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "partial",
        display: "Partial",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.disposition",
      path: "ClaimResponse.disposition",
      short: "Disposition Message",
      definition:
        "A human readable description of the status of the adjudication.",
      requirements: "Provided for user display.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.disposition", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Event.note" }],
    },
    dataPath: "root.disposition",
    parentDataPath: "root",
    basePath: "root.disposition",
    baseId: "ClaimResponse.disposition",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.preAuthRef",
      path: "ClaimResponse.preAuthRef",
      short: "Preauthorization reference",
      definition:
        "Reference from the Insurer which is used in later communications which refers to this adjudication.",
      comment: "This value is only present on preauthorization adjudications.",
      requirements:
        "On subsequent claims, the insurer may require the provider to quote this value.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.preAuthRef", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.preAuthRef",
    parentDataPath: "root",
    basePath: "root.preAuthRef",
    baseId: "ClaimResponse.preAuthRef",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.payeeType",
      path: "ClaimResponse.payeeType",
      short: "Party to be paid any benefits payable",
      definition:
        "Type of Party to be reimbursed: subscriber, provider, other.",
      requirements:
        "Need to know who should receive payment with the most common situations being the Provider (assignment of benefits) or the Subscriber.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.payeeType", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "PayeeType",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "example",
        description: "A code for the party to be reimbursed.",
        valueSet: "http://hl7.org/fhir/ValueSet/payeetype",
      },
    },
    dataPath: "root.payeeType",
    parentDataPath: "root",
    basePath: "root.payeeType",
    baseId: "ClaimResponse.payeeType",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/payeetype",
        code: "subscriber",
        display: "Subscriber",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/payeetype",
        code: "provider",
        display: "Provider",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/payeetype",
        code: "other",
        display: "Other",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.item",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Item",
        },
      ],
      path: "ClaimResponse.item",
      short: "Adjudication for claim line items",
      definition:
        "A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.",
      requirements: "The adjudication for items provided on the claim.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.item", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item[0]",
    parentDataPath: "root",
    basePath: "root.item",
    baseId: "ClaimResponse.item",
    isPrimitive: false,
    childPaths: [
      "root.item.itemSequence",
      "root.item.noteNumber[0]",
      "root.item.adjudication[0]",
      "root.item.detail[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.itemSequence",
      path: "ClaimResponse.item.itemSequence",
      short: "Claim item instance identifier",
      definition: "A number to uniquely reference the claim item entries.",
      requirements:
        "Necessary to provide a mechanism to link the adjudication result to the submitted claim item.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.item.itemSequence", min: 1, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.itemSequence",
    parentDataPath: "root.item[0]",
    basePath: "root.itemSequence",
    baseId: "ClaimResponse.item.itemSequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.noteNumber",
      path: "ClaimResponse.item.noteNumber",
      short: "Applicable note numbers",
      definition:
        "The numbers associated with notes below which apply to the adjudication of this item.",
      requirements:
        "Provides a condensed manner for associating human readable descriptive explanations for adjudications on the line item.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.item.noteNumber", min: 0, max: "*" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.noteNumber[0]",
    parentDataPath: "root.item[0]",
    basePath: "root.noteNumber",
    baseId: "ClaimResponse.item.noteNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.adjudication",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Adjudication",
        },
      ],
      path: "ClaimResponse.item.adjudication",
      short: "Adjudication details",
      definition:
        "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
      requirements:
        "The adjudication results conveys the insurer's assessment of the item provided in the claim under the terms of the patient's insurance coverage.",
      min: 1,
      max: "*",
      base: { path: "ClaimResponse.item.adjudication", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.adjudication[0]",
    parentDataPath: "root.item[0]",
    basePath: "root.adjudication",
    baseId: "ClaimResponse.item.adjudication",
    isPrimitive: false,
    childPaths: [
      "root.item.adjudication.category",
      "root.item.adjudication.reason",
      "root.item.adjudication.amount",
      "root.item.adjudication.value",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.adjudication.category",
      path: "ClaimResponse.item.adjudication.category",
      short: "Type of adjudication information",
      definition:
        "A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.",
      comment:
        "For example codes indicating: Co-Pay, deductible, eligible, benefit, tax, etc.",
      requirements:
        "Needed to enable understanding of the context of the other information in the adjudication.",
      min: 1,
      max: "1",
      base: {
        path: "ClaimResponse.item.adjudication.category",
        min: 1,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Adjudication",
          },
        ],
        strength: "example",
        description: "The adjudication codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/adjudication",
      },
    },
    dataPath: "root.item.adjudication.category",
    parentDataPath: "root.item.adjudication[0]",
    basePath: "root.category",
    baseId: "ClaimResponse.item.adjudication.category",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "submitted",
        display: "Submitted Amount",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "copay",
        display: "CoPay",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "eligible",
        display: "Eligible Amount",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "deductible",
        display: "Deductible",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "unallocdeduct",
        display: "Unallocated Deductible",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "eligpercent",
        display: "Eligible %",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "tax",
        display: "Tax",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "benefit",
        display: "Benefit Amount",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.item.adjudication.reason",
      path: "ClaimResponse.item.adjudication.reason",
      short: "Explanation of adjudication outcome",
      definition:
        "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
      comment:
        "For example may indicate that the funds for this benefit type have been exhausted.",
      requirements:
        "To support understanding of variance from adjudication expectations.",
      min: 0,
      max: "1",
      base: {
        path: "ClaimResponse.item.adjudication.reason",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdjudicationReason",
          },
        ],
        strength: "example",
        description: "The adjudication reason codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/adjudication-reason",
      },
    },
    dataPath: "root.item.adjudication.reason",
    parentDataPath: "root.item.adjudication[0]",
    basePath: "root.reason",
    baseId: "ClaimResponse.item.adjudication.reason",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication-reason",
        code: "ar001",
        display: "Not covered",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication-reason",
        code: "ar002",
        display: "Plan Limit Reached",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.item.adjudication.value",
      path: "ClaimResponse.item.adjudication.value",
      short: "Non-monetary value",
      definition:
        "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
      comment: "For example: eligible percentage or co-payment percentage.",
      requirements:
        "Some adjudication categories convey a percentage or a fixed value.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.item.adjudication.value", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.adjudication.value",
    parentDataPath: "root.item.adjudication[0]",
    basePath: "root.value",
    baseId: "ClaimResponse.item.adjudication.value",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.detail",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "ItemDetail",
        },
      ],
      path: "ClaimResponse.item.detail",
      short: "Adjudication for claim details",
      definition:
        "A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
      requirements: "The adjudication for details provided on the claim.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.item.detail", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.detail[0]",
    parentDataPath: "root.item[0]",
    basePath: "root.detail",
    baseId: "ClaimResponse.item.detail",
    isPrimitive: false,
    childPaths: [
      "root.item.detail.detailSequence",
      "root.item.detail.noteNumber[0]",
      "root.item.detail.adjudication[0]",
      "root.item.detail.subDetail[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.detail.detailSequence",
      path: "ClaimResponse.item.detail.detailSequence",
      short: "Claim detail instance identifier",
      definition: "A number to uniquely reference the claim detail entry.",
      requirements:
        "Necessary to provide a mechanism to link the adjudication result to the submitted claim detail.",
      min: 1,
      max: "1",
      base: {
        path: "ClaimResponse.item.detail.detailSequence",
        min: 1,
        max: "1",
      },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.detail.detailSequence",
    parentDataPath: "root.item.detail[0]",
    basePath: "root.detailSequence",
    baseId: "ClaimResponse.item.detail.detailSequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.detail.noteNumber",
      path: "ClaimResponse.item.detail.noteNumber",
      short: "Applicable note numbers",
      definition:
        "The numbers associated with notes below which apply to the adjudication of this item.",
      requirements:
        "Provides a condensed manner for associating human readable descriptive explanations for adjudications on the line item.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.item.detail.noteNumber", min: 0, max: "*" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.detail.noteNumber[0]",
    parentDataPath: "root.item.detail[0]",
    basePath: "root.noteNumber",
    baseId: "ClaimResponse.item.detail.noteNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.detail.subDetail",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "SubDetail",
        },
      ],
      path: "ClaimResponse.item.detail.subDetail",
      short: "Adjudication for claim sub-details",
      definition: "A sub-detail adjudication of a simple product or service.",
      requirements: "The adjudication for sub-details provided on the claim.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.item.detail.subDetail", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.detail.subDetail[0]",
    parentDataPath: "root.item.detail[0]",
    basePath: "root.subDetail",
    baseId: "ClaimResponse.item.detail.subDetail",
    isPrimitive: false,
    childPaths: [
      "root.item.detail.subDetail.subDetailSequence",
      "root.item.detail.subDetail.noteNumber[0]",
      "root.item.detail.subDetail.adjudication[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.detail.subDetail.subDetailSequence",
      path: "ClaimResponse.item.detail.subDetail.subDetailSequence",
      short: "Claim sub-detail instance identifier",
      definition: "A number to uniquely reference the claim sub-detail entry.",
      requirements:
        "Necessary to provide a mechanism to link the adjudication result to the submitted claim sub-detail.",
      min: 1,
      max: "1",
      base: {
        path: "ClaimResponse.item.detail.subDetail.subDetailSequence",
        min: 1,
        max: "1",
      },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.detail.subDetail.subDetailSequence",
    parentDataPath: "root.item.detail.subDetail[0]",
    basePath: "root.subDetailSequence",
    baseId: "ClaimResponse.item.detail.subDetail.subDetailSequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.item.detail.subDetail.noteNumber",
      path: "ClaimResponse.item.detail.subDetail.noteNumber",
      short: "Applicable note numbers",
      definition:
        "The numbers associated with notes below which apply to the adjudication of this item.",
      requirements:
        "Provides a condensed manner for associating human readable descriptive explanations for adjudications on the line item.",
      min: 0,
      max: "*",
      base: {
        path: "ClaimResponse.item.detail.subDetail.noteNumber",
        min: 0,
        max: "*",
      },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.item.detail.subDetail.noteNumber[0]",
    parentDataPath: "root.item.detail.subDetail[0]",
    basePath: "root.noteNumber",
    baseId: "ClaimResponse.item.detail.subDetail.noteNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "AddedItem",
        },
      ],
      path: "ClaimResponse.addItem",
      short: "Insurer added line items",
      definition:
        "The first-tier service adjudications for payor added product or service lines.",
      requirements:
        "Insurers may redefine the provided product or service or may package and/or decompose groups of products and services. The addItems allows the insurer to provide their line item list with linkage to the submitted items/details/sub-details. In a preauthorization the insurer may use the addItem structure to provide additional information on authorized products and services.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.addItem", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem[0]",
    parentDataPath: "root",
    basePath: "root.addItem",
    baseId: "ClaimResponse.addItem",
    isPrimitive: false,
    childPaths: [
      "root.addItem.itemSequence[0]",
      "root.addItem.detailSequence[0]",
      "root.addItem.subdetailSequence[0]",
      "root.addItem.provider[0]",
      "root.addItem.productOrService",
      "root.addItem.modifier[0]",
      "root.addItem.programCode[0]",
      "root.addItem.serviced[x]",
      "root.addItem.location[x]",
      "root.addItem.quantity",
      "root.addItem.unitPrice",
      "root.addItem.factor",
      "root.addItem.net",
      "root.addItem.bodySite",
      "root.addItem.subSite[0]",
      "root.addItem.noteNumber[0]",
      "root.addItem.adjudication[0]",
      "root.addItem.detail[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.itemSequence",
      path: "ClaimResponse.addItem.itemSequence",
      short: "Item sequence number",
      definition: "Claim items which this service line is intended to replace.",
      requirements: "Provides references to the claim items.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.addItem.itemSequence", min: 0, max: "*" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.itemSequence[0]",
    parentDataPath: "root.addItem[0]",
    basePath: "root.itemSequence",
    baseId: "ClaimResponse.addItem.itemSequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.detailSequence",
      path: "ClaimResponse.addItem.detailSequence",
      short: "Detail sequence number",
      definition:
        "The sequence number of the details within the claim item which this line is intended to replace.",
      requirements:
        "Provides references to the claim details within the claim item.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.addItem.detailSequence", min: 0, max: "*" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.detailSequence[0]",
    parentDataPath: "root.addItem[0]",
    basePath: "root.detailSequence",
    baseId: "ClaimResponse.addItem.detailSequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.subdetailSequence",
      path: "ClaimResponse.addItem.subdetailSequence",
      short: "Subdetail sequence number",
      definition:
        "The sequence number of the sub-details within the details within the claim item which this line is intended to replace.",
      requirements:
        "Provides references to the claim sub-details within the claim detail.",
      min: 0,
      max: "*",
      base: {
        path: "ClaimResponse.addItem.subdetailSequence",
        min: 0,
        max: "*",
      },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.subdetailSequence[0]",
    parentDataPath: "root.addItem[0]",
    basePath: "root.subdetailSequence",
    baseId: "ClaimResponse.addItem.subdetailSequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.productOrService",
      path: "ClaimResponse.addItem.productOrService",
      short: "Billing, service, product, or drug code",
      definition:
        "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
      comment:
        "If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.",
      requirements: "Necessary to state what was provided or done.",
      min: 1,
      max: "1",
      base: {
        path: "ClaimResponse.addItem.productOrService",
        min: 1,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ServiceProduct",
          },
        ],
        strength: "example",
        description: "Allowable service and product codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/service-uscls",
      },
    },
    dataPath: "root.addItem.productOrService",
    parentDataPath: "root.addItem[0]",
    basePath: "root.productOrService",
    baseId: "ClaimResponse.addItem.productOrService",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1101",
        display: "Exam, comp, primary",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1102",
        display: "Exam, comp, mixed",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1103",
        display: "Exam, comp, permanent",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1201",
        display: "Exam, recall",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1205",
        display: "Exam, emergency",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2101",
        display: "Radiograph, series (12)",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2102",
        display: "Radiograph, series (16)",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2141",
        display: "Radiograph, bitewing",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2601",
        display: "Radiograph, panoramic",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11101",
        display: "Polishing, 1 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11102",
        display: "Polishing, 2 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11103",
        display: "Polishing, 3 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11104",
        display: "Polishing, 4 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "21211",
        display: "Amalgam, 1 surface",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "21212",
        display: "Amalgam, 2 surface",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "27211",
        display: "Crown, PFM",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "67211",
        display: "Maryland Bridge",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99111",
        display: "Lab, commercial",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99333",
        display: "Lab, in office",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99555",
        display: "Expense",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.modifier",
      path: "ClaimResponse.addItem.modifier",
      short: "Service/Product billing modifiers",
      definition:
        "Item typification or modifiers codes to convey additional context for the product or service.",
      comment:
        "For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.",
      requirements:
        "To support inclusion of the item for adjudication or to charge an elevated fee.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.addItem.modifier", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Modifiers",
          },
        ],
        strength: "example",
        description:
          "Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen.",
        valueSet: "http://hl7.org/fhir/ValueSet/claim-modifiers",
      },
      mapping: [{ identity: "rim", map: "24.C, 24.D mods" }],
    },
    dataPath: "root.addItem.modifier[0]",
    parentDataPath: "root.addItem[0]",
    basePath: "root.modifier",
    baseId: "ClaimResponse.addItem.modifier",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "a",
        display: "Repair of prior service or installation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "b",
        display: "Temporary service or installation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "c",
        display: "TMJ treatment",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "e",
        display: "Implant or associated with an implant",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "rooh",
        display: "Rush or Outside of office hours",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "x",
        display: "None",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.programCode",
      path: "ClaimResponse.addItem.programCode",
      short: "Program the product or service is provided under",
      definition: "Identifies the program under which this may be recovered.",
      comment:
        "For example: Neonatal program, child dental program or drug users recovery program.",
      requirements:
        "Commonly used in in the identification of publicly provided program focused on population segments or disease classifications.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.addItem.programCode", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ProgramCode",
          },
        ],
        strength: "example",
        description: "Program specific reason codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/ex-program-code",
      },
      mapping: [{ identity: "rim", map: "24.H" }],
    },
    dataPath: "root.addItem.programCode[0]",
    parentDataPath: "root.addItem[0]",
    basePath: "root.programCode",
    baseId: "ClaimResponse.addItem.programCode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-programcode",
        code: "as",
        display: "Child Asthma",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-programcode",
        code: "hd",
        display: "Hemodialysis",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-programcode",
        code: "auscr",
        display: "Autism Screening",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-programcode",
        code: "none",
        display: "None",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.location[x]",
      path: "ClaimResponse.addItem.location[x]",
      short: "Place of service or where product was supplied",
      definition: "Where the product or service was provided.",
      requirements:
        "The location can alter whether the item was acceptable for insurance purposes or impact the determination of the benefit amount.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.addItem.location[x]", min: 0, max: "1" },
      type: [
        { code: "CodeableConcept" },
        { code: "Address" },
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Location"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ServicePlace",
          },
        ],
        strength: "example",
        description: "Place of service: pharmacy, school, prison, etc.",
        valueSet: "http://hl7.org/fhir/ValueSet/service-place",
      },
      mapping: [
        { identity: "w5", map: "FiveWs.where[x]" },
        { identity: "rim", map: "24.B" },
      ],
    },
    dataPath: "root.addItem.location[x]",
    parentDataPath: "root.addItem[0]",
    basePath: "root.location[x]",
    baseId: "ClaimResponse.addItem.location[x]",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "01",
        display: "Pharmacy",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "03",
        display: "School",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "04",
        display: "Homeless Shelter",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "05",
        display: "Indian Health Service Free-standing Facility",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "06",
        display: "Indian Health Service Provider-based Facility",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "07",
        display: "Tribal 638 Free-Standing Facility",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "08",
        display: "Tribal 638 Provider-Based Facility",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "09",
        display: "Prison/Correctional Facility",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "11",
        display: "Office",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "12",
        display: "Home",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "13",
        display: "Assisted Living Fa",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "14",
        display: "Group Home",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "15",
        display: "Mobile Unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "19",
        display: "Off Campus-Outpatient Hospital",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "20",
        display: "Urgent Care Facility",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "21",
        display: "Inpatient Hospital",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
        code: "41",
        display: "Ambulance—Land",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.unitPrice",
      path: "ClaimResponse.addItem.unitPrice",
      short: "Fee, charge or cost per item",
      definition:
        "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
      requirements:
        "The amount charged to the patient by the provider for a single unit.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.addItem.unitPrice", min: 0, max: "1" },
      type: [{ code: "Money" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.unitPrice",
    parentDataPath: "root.addItem[0]",
    basePath: "root.unitPrice",
    baseId: "ClaimResponse.addItem.unitPrice",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.factor",
      path: "ClaimResponse.addItem.factor",
      short: "Price scaling factor",
      definition:
        "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
      comment:
        "To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10).",
      requirements:
        "When discounts are provided to a patient (example: Senior's discount) then this must be documented for adjudication.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.addItem.factor", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.factor",
    parentDataPath: "root.addItem[0]",
    basePath: "root.factor",
    baseId: "ClaimResponse.addItem.factor",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.bodySite",
      path: "ClaimResponse.addItem.bodySite",
      short: "Anatomical location",
      definition: "Physical service site on the patient (limb, tooth, etc.).",
      comment:
        "For example: Providing a tooth code allows an insurer to identify a provider performing a filling on a tooth that was previously removed.",
      requirements: "Allows insurer to validate specific procedures.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.addItem.bodySite", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "OralSites",
          },
        ],
        strength: "example",
        description: "The code for the teeth, quadrant, sextant and arch.",
        valueSet: "http://hl7.org/fhir/ValueSet/tooth",
      },
    },
    dataPath: "root.addItem.bodySite",
    parentDataPath: "root.addItem[0]",
    basePath: "root.bodySite",
    baseId: "ClaimResponse.addItem.bodySite",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "0",
        display: "Oral cavity",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "1",
        display: "1",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "2",
        display: "2",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "3",
        display: "3",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "4",
        display: "4",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "5",
        display: "5",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "6",
        display: "6",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "7",
        display: "7",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "8",
        display: "8",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "11",
        display: "11",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "12",
        display: "12",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "13",
        display: "13",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "14",
        display: "14",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "15",
        display: "15",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "16",
        display: "16",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "17",
        display: "17",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "18",
        display: "18",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "21",
        display: "21",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "22",
        display: "22",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "23",
        display: "23",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "24",
        display: "24",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "25",
        display: "25",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "26",
        display: "26",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "27",
        display: "27",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "28",
        display: "28",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "31",
        display: "31",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "32",
        display: "32",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "33",
        display: "33",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "34",
        display: "34",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "35",
        display: "35",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "36",
        display: "36",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "37",
        display: "37",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "38",
        display: "38",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "41",
        display: "41",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "42",
        display: "42",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "43",
        display: "43",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "44",
        display: "44",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "45",
        display: "45",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "46",
        display: "46",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "47",
        display: "47",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-tooth",
        code: "48",
        display: "48",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.subSite",
      path: "ClaimResponse.addItem.subSite",
      short: "Anatomical sub-location",
      definition:
        "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
      requirements: "Allows insurer to validate specific procedures.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.addItem.subSite", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Surface",
          },
        ],
        strength: "example",
        description: "The code for the tooth surface and surface combinations.",
        valueSet: "http://hl7.org/fhir/ValueSet/surface",
      },
    },
    dataPath: "root.addItem.subSite[0]",
    parentDataPath: "root.addItem[0]",
    basePath: "root.subSite",
    baseId: "ClaimResponse.addItem.subSite",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "M",
        display: "Mesial",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "O",
        display: "Occlusal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "I",
        display: "Incisal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "D",
        display: "Distal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "B",
        display: "Buccal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "V",
        display: "Ventral",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "L",
        display: "Lingual",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "MO",
        display: "Mesioclusal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "DO",
        display: "Distoclusal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "DI",
        display: "Distoincisal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/FDI-surface",
        code: "MOD",
        display: "Mesioclusodistal",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.noteNumber",
      path: "ClaimResponse.addItem.noteNumber",
      short: "Applicable note numbers",
      definition:
        "The numbers associated with notes below which apply to the adjudication of this item.",
      requirements:
        "Provides a condensed manner for associating human readable descriptive explanations for adjudications on the line item.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.addItem.noteNumber", min: 0, max: "*" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.noteNumber[0]",
    parentDataPath: "root.addItem[0]",
    basePath: "root.noteNumber",
    baseId: "ClaimResponse.addItem.noteNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "AddedItemDetail",
        },
      ],
      path: "ClaimResponse.addItem.detail",
      short: "Insurer added line details",
      definition:
        "The second-tier service adjudications for payor added services.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.addItem.detail", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.detail[0]",
    parentDataPath: "root.addItem[0]",
    basePath: "root.detail",
    baseId: "ClaimResponse.addItem.detail",
    isPrimitive: false,
    childPaths: [
      "root.addItem.detail.productOrService",
      "root.addItem.detail.modifier[0]",
      "root.addItem.detail.quantity",
      "root.addItem.detail.unitPrice",
      "root.addItem.detail.factor",
      "root.addItem.detail.net",
      "root.addItem.detail.noteNumber[0]",
      "root.addItem.detail.adjudication[0]",
      "root.addItem.detail.subDetail[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.productOrService",
      path: "ClaimResponse.addItem.detail.productOrService",
      short: "Billing, service, product, or drug code",
      definition:
        "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
      comment:
        "If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.",
      requirements: "Necessary to state what was provided or done.",
      min: 1,
      max: "1",
      base: {
        path: "ClaimResponse.addItem.detail.productOrService",
        min: 1,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ServiceProduct",
          },
        ],
        strength: "example",
        description: "Allowable service and product codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/service-uscls",
      },
    },
    dataPath: "root.addItem.detail.productOrService",
    parentDataPath: "root.addItem.detail[0]",
    basePath: "root.productOrService",
    baseId: "ClaimResponse.addItem.detail.productOrService",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1101",
        display: "Exam, comp, primary",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1102",
        display: "Exam, comp, mixed",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1103",
        display: "Exam, comp, permanent",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1201",
        display: "Exam, recall",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1205",
        display: "Exam, emergency",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2101",
        display: "Radiograph, series (12)",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2102",
        display: "Radiograph, series (16)",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2141",
        display: "Radiograph, bitewing",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2601",
        display: "Radiograph, panoramic",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11101",
        display: "Polishing, 1 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11102",
        display: "Polishing, 2 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11103",
        display: "Polishing, 3 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11104",
        display: "Polishing, 4 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "21211",
        display: "Amalgam, 1 surface",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "21212",
        display: "Amalgam, 2 surface",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "27211",
        display: "Crown, PFM",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "67211",
        display: "Maryland Bridge",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99111",
        display: "Lab, commercial",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99333",
        display: "Lab, in office",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99555",
        display: "Expense",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.modifier",
      path: "ClaimResponse.addItem.detail.modifier",
      short: "Service/Product billing modifiers",
      definition:
        "Item typification or modifiers codes to convey additional context for the product or service.",
      comment:
        "For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.",
      requirements:
        "To support inclusion of the item for adjudication or to charge an elevated fee.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.addItem.detail.modifier", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Modifiers",
          },
        ],
        strength: "example",
        description:
          "Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen.",
        valueSet: "http://hl7.org/fhir/ValueSet/claim-modifiers",
      },
      mapping: [{ identity: "rim", map: "24.C, 24.D mods" }],
    },
    dataPath: "root.addItem.detail.modifier[0]",
    parentDataPath: "root.addItem.detail[0]",
    basePath: "root.modifier",
    baseId: "ClaimResponse.addItem.detail.modifier",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "a",
        display: "Repair of prior service or installation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "b",
        display: "Temporary service or installation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "c",
        display: "TMJ treatment",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "e",
        display: "Implant or associated with an implant",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "rooh",
        display: "Rush or Outside of office hours",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "x",
        display: "None",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.unitPrice",
      path: "ClaimResponse.addItem.detail.unitPrice",
      short: "Fee, charge or cost per item",
      definition:
        "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
      requirements:
        "The amount charged to the patient by the provider for a single unit.",
      min: 0,
      max: "1",
      base: {
        path: "ClaimResponse.addItem.detail.unitPrice",
        min: 0,
        max: "1",
      },
      type: [{ code: "Money" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.detail.unitPrice",
    parentDataPath: "root.addItem.detail[0]",
    basePath: "root.unitPrice",
    baseId: "ClaimResponse.addItem.detail.unitPrice",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.factor",
      path: "ClaimResponse.addItem.detail.factor",
      short: "Price scaling factor",
      definition:
        "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
      comment:
        "To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10).",
      requirements:
        "When discounts are provided to a patient (example: Senior's discount) then this must be documented for adjudication.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.addItem.detail.factor", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.detail.factor",
    parentDataPath: "root.addItem.detail[0]",
    basePath: "root.factor",
    baseId: "ClaimResponse.addItem.detail.factor",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.noteNumber",
      path: "ClaimResponse.addItem.detail.noteNumber",
      short: "Applicable note numbers",
      definition:
        "The numbers associated with notes below which apply to the adjudication of this item.",
      requirements:
        "Provides a condensed manner for associating human readable descriptive explanations for adjudications on the line item.",
      min: 0,
      max: "*",
      base: {
        path: "ClaimResponse.addItem.detail.noteNumber",
        min: 0,
        max: "*",
      },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.detail.noteNumber[0]",
    parentDataPath: "root.addItem.detail[0]",
    basePath: "root.noteNumber",
    baseId: "ClaimResponse.addItem.detail.noteNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.subDetail",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "AddedItemSubDetail",
        },
      ],
      path: "ClaimResponse.addItem.detail.subDetail",
      short: "Insurer added line items",
      definition:
        "The third-tier service adjudications for payor added services.",
      min: 0,
      max: "*",
      base: {
        path: "ClaimResponse.addItem.detail.subDetail",
        min: 0,
        max: "*",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.detail.subDetail[0]",
    parentDataPath: "root.addItem.detail[0]",
    basePath: "root.subDetail",
    baseId: "ClaimResponse.addItem.detail.subDetail",
    isPrimitive: false,
    childPaths: [
      "root.addItem.detail.subDetail.productOrService",
      "root.addItem.detail.subDetail.modifier[0]",
      "root.addItem.detail.subDetail.quantity",
      "root.addItem.detail.subDetail.unitPrice",
      "root.addItem.detail.subDetail.factor",
      "root.addItem.detail.subDetail.net",
      "root.addItem.detail.subDetail.noteNumber[0]",
      "root.addItem.detail.subDetail.adjudication[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.subDetail.productOrService",
      path: "ClaimResponse.addItem.detail.subDetail.productOrService",
      short: "Billing, service, product, or drug code",
      definition:
        "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
      comment:
        "If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.",
      requirements: "Necessary to state what was provided or done.",
      min: 1,
      max: "1",
      base: {
        path: "ClaimResponse.addItem.detail.subDetail.productOrService",
        min: 1,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ServiceProduct",
          },
        ],
        strength: "example",
        description: "Allowable service and product codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/service-uscls",
      },
    },
    dataPath: "root.addItem.detail.subDetail.productOrService",
    parentDataPath: "root.addItem.detail.subDetail[0]",
    basePath: "root.productOrService",
    baseId: "ClaimResponse.addItem.detail.subDetail.productOrService",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1101",
        display: "Exam, comp, primary",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1102",
        display: "Exam, comp, mixed",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1103",
        display: "Exam, comp, permanent",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1201",
        display: "Exam, recall",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1205",
        display: "Exam, emergency",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2101",
        display: "Radiograph, series (12)",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2102",
        display: "Radiograph, series (16)",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2141",
        display: "Radiograph, bitewing",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2601",
        display: "Radiograph, panoramic",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11101",
        display: "Polishing, 1 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11102",
        display: "Polishing, 2 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11103",
        display: "Polishing, 3 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11104",
        display: "Polishing, 4 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "21211",
        display: "Amalgam, 1 surface",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "21212",
        display: "Amalgam, 2 surface",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "27211",
        display: "Crown, PFM",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "67211",
        display: "Maryland Bridge",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99111",
        display: "Lab, commercial",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99333",
        display: "Lab, in office",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99555",
        display: "Expense",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.subDetail.modifier",
      path: "ClaimResponse.addItem.detail.subDetail.modifier",
      short: "Service/Product billing modifiers",
      definition:
        "Item typification or modifiers codes to convey additional context for the product or service.",
      comment:
        "For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.",
      requirements:
        "To support inclusion of the item for adjudication or to charge an elevated fee.",
      min: 0,
      max: "*",
      base: {
        path: "ClaimResponse.addItem.detail.subDetail.modifier",
        min: 0,
        max: "*",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Modifiers",
          },
        ],
        strength: "example",
        description:
          "Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen.",
        valueSet: "http://hl7.org/fhir/ValueSet/claim-modifiers",
      },
      mapping: [{ identity: "rim", map: "24.C, 24.D mods" }],
    },
    dataPath: "root.addItem.detail.subDetail.modifier[0]",
    parentDataPath: "root.addItem.detail.subDetail[0]",
    basePath: "root.modifier",
    baseId: "ClaimResponse.addItem.detail.subDetail.modifier",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "a",
        display: "Repair of prior service or installation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "b",
        display: "Temporary service or installation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "c",
        display: "TMJ treatment",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "e",
        display: "Implant or associated with an implant",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "rooh",
        display: "Rush or Outside of office hours",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "x",
        display: "None",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.subDetail.unitPrice",
      path: "ClaimResponse.addItem.detail.subDetail.unitPrice",
      short: "Fee, charge or cost per item",
      definition:
        "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
      requirements:
        "The amount charged to the patient by the provider for a single unit.",
      min: 0,
      max: "1",
      base: {
        path: "ClaimResponse.addItem.detail.subDetail.unitPrice",
        min: 0,
        max: "1",
      },
      type: [{ code: "Money" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.detail.subDetail.unitPrice",
    parentDataPath: "root.addItem.detail.subDetail[0]",
    basePath: "root.unitPrice",
    baseId: "ClaimResponse.addItem.detail.subDetail.unitPrice",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.subDetail.factor",
      path: "ClaimResponse.addItem.detail.subDetail.factor",
      short: "Price scaling factor",
      definition:
        "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
      comment:
        "To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10).",
      requirements:
        "When discounts are provided to a patient (example: Senior's discount) then this must be documented for adjudication.",
      min: 0,
      max: "1",
      base: {
        path: "ClaimResponse.addItem.detail.subDetail.factor",
        min: 0,
        max: "1",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.detail.subDetail.factor",
    parentDataPath: "root.addItem.detail.subDetail[0]",
    basePath: "root.factor",
    baseId: "ClaimResponse.addItem.detail.subDetail.factor",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.addItem.detail.subDetail.noteNumber",
      path: "ClaimResponse.addItem.detail.subDetail.noteNumber",
      short: "Applicable note numbers",
      definition:
        "The numbers associated with notes below which apply to the adjudication of this item.",
      requirements:
        "Provides a condensed manner for associating human readable descriptive explanations for adjudications on the line item.",
      min: 0,
      max: "*",
      base: {
        path: "ClaimResponse.addItem.detail.subDetail.noteNumber",
        min: 0,
        max: "*",
      },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.addItem.detail.subDetail.noteNumber[0]",
    parentDataPath: "root.addItem.detail.subDetail[0]",
    basePath: "root.noteNumber",
    baseId: "ClaimResponse.addItem.detail.subDetail.noteNumber",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.adjudication",
      path: "ClaimResponse.adjudication",
      short: "Header-level adjudication",
      definition:
        "The adjudication results which are presented at the header level rather than at the line-item or add-item levels.",
      requirements:
        "Some insurers will receive line-items but provide the adjudication only at a summary or header-level.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.adjudication", min: 0, max: "*" },
      contentReference: "#ClaimResponse.item.adjudication",
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.adjudication[0]",
    parentDataPath: "root",
    basePath: "root.adjudication",
    baseId: "ClaimResponse.adjudication",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.total",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Total",
        },
      ],
      path: "ClaimResponse.total",
      short: "Adjudication totals",
      definition: "Categorized monetary totals for the adjudication.",
      comment: "Totals for amounts submitted, co-pays, benefits payable etc.",
      requirements:
        "To provide the requestor with financial totals by category for the adjudication.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.total", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.total[0]",
    parentDataPath: "root",
    basePath: "root.total",
    baseId: "ClaimResponse.total",
    isPrimitive: false,
    childPaths: ["root.total.category", "root.total.amount"],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.total.category",
      path: "ClaimResponse.total.category",
      short: "Type of adjudication information",
      definition:
        "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
      comment:
        "For example codes indicating: Co-Pay, deductible, eligible, benefit, tax, etc.",
      requirements: "Needed to convey the type of total provided.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.total.category", min: 1, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Adjudication",
          },
        ],
        strength: "example",
        description: "The adjudication codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/adjudication",
      },
    },
    dataPath: "root.total.category",
    parentDataPath: "root.total[0]",
    basePath: "root.category",
    baseId: "ClaimResponse.total.category",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "submitted",
        display: "Submitted Amount",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "copay",
        display: "CoPay",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "eligible",
        display: "Eligible Amount",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "deductible",
        display: "Deductible",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "unallocdeduct",
        display: "Unallocated Deductible",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "eligpercent",
        display: "Eligible %",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "tax",
        display: "Tax",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
        code: "benefit",
        display: "Benefit Amount",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.payment",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Payment",
        },
      ],
      path: "ClaimResponse.payment",
      short: "Payment Details",
      definition: "Payment details for the adjudication of the claim.",
      requirements:
        "Needed to convey references to the financial instrument that has been used if payment has been made.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.payment", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.payment",
    parentDataPath: "root",
    basePath: "root.payment",
    baseId: "ClaimResponse.payment",
    isPrimitive: false,
    childPaths: [
      "root.payment.type",
      "root.payment.adjustment",
      "root.payment.adjustmentReason",
      "root.payment.date",
      "root.payment.amount",
      "root.payment.identifier",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.payment.type",
      path: "ClaimResponse.payment.type",
      short: "Partial or complete payment",
      definition:
        "Whether this represents partial or complete payment of the benefits payable.",
      requirements:
        "To advise the requestor when the insurer believes all payments to have been completed.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.payment.type", min: 1, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "PaymentType",
          },
        ],
        strength: "example",
        description: "The type (partial, complete) of the payment.",
        valueSet: "http://hl7.org/fhir/ValueSet/ex-paymenttype",
      },
    },
    dataPath: "root.payment.type",
    parentDataPath: "root.payment",
    basePath: "root.type",
    baseId: "ClaimResponse.payment.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-paymenttype",
        code: "complete",
        display: "Complete",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-paymenttype",
        code: "partial",
        display: "Partial",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.payment.adjustmentReason",
      path: "ClaimResponse.payment.adjustmentReason",
      short: "Explanation for the adjustment",
      definition: "Reason for the payment adjustment.",
      requirements: "Needed to clarify the monetary adjustment.",
      min: 0,
      max: "1",
      base: {
        path: "ClaimResponse.payment.adjustmentReason",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "PaymentAdjustmentReason",
          },
        ],
        strength: "example",
        description: "Payment Adjustment reason codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/payment-adjustment-reason",
      },
    },
    dataPath: "root.payment.adjustmentReason",
    parentDataPath: "root.payment",
    basePath: "root.adjustmentReason",
    baseId: "ClaimResponse.payment.adjustmentReason",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system:
          "http://terminology.hl7.org/CodeSystem/payment-adjustment-reason",
        code: "a001",
        display: "Prior Payment Reversal",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/payment-adjustment-reason",
        code: "a002",
        display: "Prior Overpayment",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.payment.date",
      path: "ClaimResponse.payment.date",
      short: "Expected date of payment",
      definition:
        "Estimated date the payment will be issued or the actual issue date of payment.",
      requirements: "To advise the payee when payment can be expected.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.payment.date", min: 0, max: "1" },
      type: [{ code: "date" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.payment.date",
    parentDataPath: "root.payment",
    basePath: "root.date",
    baseId: "ClaimResponse.payment.date",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.payment.identifier",
      path: "ClaimResponse.payment.identifier",
      short: "Business identifier for the payment",
      definition: "Issuer's unique identifier for the payment instrument.",
      comment: "For example: EFT number or check number.",
      requirements: "Enable the receiver to reconcile when payment received.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.payment.identifier", min: 0, max: "1" },
      type: [{ code: "Identifier" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.payment.identifier",
    parentDataPath: "root.payment",
    basePath: "root.identifier",
    baseId: "ClaimResponse.payment.identifier",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.fundsReserve",
      path: "ClaimResponse.fundsReserve",
      short: "Funds reserved status",
      definition:
        "A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.",
      comment:
        "Fund would be release by a future claim quoting the preAuthRef of this response. Examples of values include: provider, patient, none.",
      requirements:
        "Needed to advise the submitting provider on whether the rquest for reservation of funds has been honored.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.fundsReserve", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "FundsReserve",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "example",
        description:
          "For whom funds are to be reserved: (Patient, Provider, None).",
        valueSet: "http://hl7.org/fhir/ValueSet/fundsreserve",
      },
    },
    dataPath: "root.fundsReserve",
    parentDataPath: "root",
    basePath: "root.fundsReserve",
    baseId: "ClaimResponse.fundsReserve",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/fundsreserve",
        code: "patient",
        display: "Patient",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/fundsreserve",
        code: "provider",
        display: "Provider",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/fundsreserve",
        code: "none",
        display: "None",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.formCode",
      path: "ClaimResponse.formCode",
      short: "Printed form identifier",
      definition: "A code for the form to be used for printing the content.",
      comment: "May be needed to identify specific jurisdictional forms.",
      requirements:
        "Needed to specify the specific form used for producing output for this response.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.formCode", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Forms",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "example",
        description: "The forms codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/forms",
      },
    },
    dataPath: "root.formCode",
    parentDataPath: "root",
    basePath: "root.formCode",
    baseId: "ClaimResponse.formCode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/forms-codes",
        code: "1",
        display: "Form #1",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/forms-codes",
        code: "2",
        display: "Form #1",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.processNote",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Note",
        },
      ],
      path: "ClaimResponse.processNote",
      short: "Note concerning adjudication",
      definition:
        "A note that describes or explains adjudication results in a human readable form.",
      requirements:
        "Provides the insurer specific textual explanations associated with the processing.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.processNote", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.processNote[0]",
    parentDataPath: "root",
    basePath: "root.processNote",
    baseId: "ClaimResponse.processNote",
    isPrimitive: false,
    childPaths: [
      "root.processNote.number",
      "root.processNote.type",
      "root.processNote.text",
      "root.processNote.language",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.processNote.number",
      path: "ClaimResponse.processNote.number",
      short: "Note instance identifier",
      definition: "A number to uniquely identify a note entry.",
      requirements:
        "Necessary to provide a mechanism to link from adjudications.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.processNote.number", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.processNote.number",
    parentDataPath: "root.processNote[0]",
    basePath: "root.number",
    baseId: "ClaimResponse.processNote.number",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.processNote.type",
      path: "ClaimResponse.processNote.type",
      short: "display | print | printoper",
      definition: "The business purpose of the note text.",
      requirements: "To convey the expectation for when the text is used.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.processNote.type", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "NoteType",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The presentation types of notes.",
        valueSet: "http://hl7.org/fhir/ValueSet/note-type|4.3.0",
      },
    },
    dataPath: "root.processNote.type",
    parentDataPath: "root.processNote[0]",
    basePath: "root.type",
    baseId: "ClaimResponse.processNote.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/note-type",
        code: "display",
        display: "Display",
      },
      {
        system: "http://hl7.org/fhir/note-type",
        code: "print",
        display: "Print (Form)",
      },
      {
        system: "http://hl7.org/fhir/note-type",
        code: "printoper",
        display: "Print (Operator)",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse.processNote.text",
      path: "ClaimResponse.processNote.text",
      short: "Note explanatory text",
      definition:
        "The explanation or description associated with the processing.",
      requirements: "Required to provide human readable explanation.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.processNote.text", min: 1, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.processNote.text",
    parentDataPath: "root.processNote[0]",
    basePath: "root.text",
    baseId: "ClaimResponse.processNote.text",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.processNote.language",
      path: "ClaimResponse.processNote.language",
      short: "Language of the text",
      definition: "A code to define the language used in the text of the note.",
      comment:
        "Only required if the language is different from the resource language.",
      requirements: "Note text may vary from the resource defined language.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.processNote.language", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.processNote.language",
    parentDataPath: "root.processNote[0]",
    basePath: "root.language",
    baseId: "ClaimResponse.processNote.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "ClaimResponse.insurance",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Insurance",
        },
      ],
      path: "ClaimResponse.insurance",
      short: "Patient insurance information",
      definition:
        "Financial instruments for reimbursement for the health care products and services specified on the claim.",
      comment:
        "All insurance coverages for the patient which may be applicable for reimbursement, of the products and services listed in the claim, are typically provided in the claim to allow insurers to confirm the ordering of the insurance coverages relative to local 'coordination of benefit' rules. One coverage (and only one) with 'focal=true' is to be used in the adjudication of this claim. Coverages appearing before the focal Coverage in the list, and where 'subrogation=false', should provide a reference to the ClaimResponse containing the adjudication results of the prior claim.",
      requirements:
        "At least one insurer is required for a claim to be a claim.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.insurance", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "Coverage" }],
    },
    dataPath: "root.insurance[0]",
    parentDataPath: "root",
    basePath: "root.insurance",
    baseId: "ClaimResponse.insurance",
    isPrimitive: false,
    childPaths: [
      "root.insurance.sequence",
      "root.insurance.focal",
      "root.insurance.coverage",
      "root.insurance.businessArrangement",
      "root.insurance.claimResponse",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.insurance.sequence",
      path: "ClaimResponse.insurance.sequence",
      short: "Insurance instance identifier",
      definition:
        "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.",
      requirements: "To maintain order of the coverages.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.insurance.sequence", min: 1, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.sequence",
    parentDataPath: "root.insurance[0]",
    basePath: "root.sequence",
    baseId: "ClaimResponse.insurance.sequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.insurance.focal",
      path: "ClaimResponse.insurance.focal",
      short: "Coverage to be used for adjudication",
      definition:
        "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
      comment:
        "A patient may (will) have multiple insurance policies which provide reimbursement for healthcare services and products. For example a person may also be covered by their spouse's policy and both appear in the list (and may be from the same insurer). This flag will be set to true for only one of the listed policies and that policy will be used for adjudicating this claim. Other claims would be created to request adjudication against the other listed policies.",
      requirements:
        "To identify which coverage in the list is being used to adjudicate this claim.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.insurance.focal", min: 1, max: "1" },
      type: [{ code: "boolean" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.focal",
    parentDataPath: "root.insurance[0]",
    basePath: "root.focal",
    baseId: "ClaimResponse.insurance.focal",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.insurance.businessArrangement",
      path: "ClaimResponse.insurance.businessArrangement",
      short: "Additional provider contract number",
      definition:
        "A business agreement number established between the provider and the insurer for special business processing purposes.",
      requirements:
        "Providers may have multiple business arrangements with a given insurer and must supply the specific contract number for adjudication.",
      min: 0,
      max: "1",
      base: {
        path: "ClaimResponse.insurance.businessArrangement",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.businessArrangement",
    parentDataPath: "root.insurance[0]",
    basePath: "root.businessArrangement",
    baseId: "ClaimResponse.insurance.businessArrangement",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.error",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Error",
        },
      ],
      path: "ClaimResponse.error",
      short: "Processing errors",
      definition:
        "Errors encountered during the processing of the adjudication.",
      comment:
        "If the request contains errors then an error element should be provided and no adjudication related sections (item, addItem, or payment) should be present.",
      requirements: "Need to communicate processing issues to the requestor.",
      min: 0,
      max: "*",
      base: { path: "ClaimResponse.error", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.error[0]",
    parentDataPath: "root",
    basePath: "root.error",
    baseId: "ClaimResponse.error",
    isPrimitive: false,
    childPaths: [
      "root.error.itemSequence",
      "root.error.detailSequence",
      "root.error.subDetailSequence",
      "root.error.code",
    ],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.error.itemSequence",
      path: "ClaimResponse.error.itemSequence",
      short: "Item sequence number",
      definition:
        "The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
      requirements: "Provides references to the claim items.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.error.itemSequence", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.error.itemSequence",
    parentDataPath: "root.error[0]",
    basePath: "root.itemSequence",
    baseId: "ClaimResponse.error.itemSequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.error.detailSequence",
      path: "ClaimResponse.error.detailSequence",
      short: "Detail sequence number",
      definition:
        "The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
      requirements:
        "Provides references to the claim details within the claim item.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.error.detailSequence", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.error.detailSequence",
    parentDataPath: "root.error[0]",
    basePath: "root.detailSequence",
    baseId: "ClaimResponse.error.detailSequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.error.subDetailSequence",
      path: "ClaimResponse.error.subDetailSequence",
      short: "Subdetail sequence number",
      definition:
        "The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
      requirements:
        "Provides references to the claim sub-details within the claim detail.",
      min: 0,
      max: "1",
      base: { path: "ClaimResponse.error.subDetailSequence", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.error.subDetailSequence",
    parentDataPath: "root.error[0]",
    basePath: "root.subDetailSequence",
    baseId: "ClaimResponse.error.subDetailSequence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ClaimResponse.error.code",
      path: "ClaimResponse.error.code",
      short: "Error code detailing processing issues",
      definition:
        "An error code, from a specified code system, which details why the claim could not be adjudicated.",
      requirements: "Required to convey processing errors.",
      min: 1,
      max: "1",
      base: { path: "ClaimResponse.error.code", min: 1, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdjudicationError",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "example",
        description: "The adjudication error codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/adjudication-error",
      },
    },
    dataPath: "root.error.code",
    parentDataPath: "root.error[0]",
    basePath: "root.code",
    baseId: "ClaimResponse.error.code",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication-error",
        code: "a001",
        display: "Missing Identifier",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication-error",
        code: "a002",
        display: "Missing Creation Date",
      },
    ],
  },
  {
    element: {
      id: "ClaimResponse",
      path: "ClaimResponse",
      short: "Response to a claim predetermination or preauthorization",
      definition:
        "This resource provides the adjudication details from the processing of a Claim resource.",
      alias: ["Remittance Advice"],
      min: 0,
      max: "*",
      base: { path: "ClaimResponse", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Event" },
        { identity: "w5", map: "financial.billing" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "ClaimResponse",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
