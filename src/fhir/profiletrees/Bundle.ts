const data = [
  {
    element: {
      id: "Bundle.meta",
      path: "Bundle.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "Bundle.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.implicitRules",
      path: "Bundle.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "Bundle.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.language",
      path: "Bundle.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "Bundle.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "Bundle.type",
      path: "Bundle.type",
      short:
        "document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection",
      definition:
        "Indicates the purpose of this bundle - how it is intended to be used.",
      comment:
        "It's possible to use a bundle for other purposes (e.g. a document can be accepted as a transaction). This is primarily defined so that there can be specific rules for some of the bundle types.",
      min: 1,
      max: "1",
      base: { path: "Bundle.type", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "BundleType",
          },
        ],
        strength: "required",
        description:
          "Indicates the purpose of a bundle - how it is intended to be used.",
        valueSet: "http://hl7.org/fhir/ValueSet/bundle-type|4.3.0",
      },
      mapping: [{ identity: "w5", map: "FiveWs.class" }],
    },
    dataPath: "root.type",
    parentDataPath: "root",
    basePath: "root.type",
    baseId: "Bundle.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/bundle-type",
        code: "document",
        display: "Document",
      },
      {
        system: "http://hl7.org/fhir/bundle-type",
        code: "message",
        display: "Message",
      },
      {
        system: "http://hl7.org/fhir/bundle-type",
        code: "transaction",
        display: "Transaction",
      },
      {
        system: "http://hl7.org/fhir/bundle-type",
        code: "transaction-response",
        display: "Transaction Response",
      },
      {
        system: "http://hl7.org/fhir/bundle-type",
        code: "batch",
        display: "Batch",
      },
      {
        system: "http://hl7.org/fhir/bundle-type",
        code: "batch-response",
        display: "Batch Response",
      },
      {
        system: "http://hl7.org/fhir/bundle-type",
        code: "history",
        display: "History List",
      },
      {
        system: "http://hl7.org/fhir/bundle-type",
        code: "searchset",
        display: "Search Results",
      },
      {
        system: "http://hl7.org/fhir/bundle-type",
        code: "collection",
        display: "Collection",
      },
    ],
  },
  {
    element: {
      id: "Bundle.timestamp",
      path: "Bundle.timestamp",
      short: "When the bundle was assembled",
      definition:
        "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.",
      comment:
        "For many bundles, the timestamp is equal to .meta.lastUpdated, because they are not stored (e.g. search results). When a bundle is placed in a persistent store, .meta.lastUpdated will be usually be changed by the server. When the bundle is a message, a middleware agent altering the message (even if not stored) SHOULD update .meta.lastUpdated. .timestamp is used to track the original time of the Bundle, and SHOULD be populated.  \n\nUsage:\n\n* document : the date the document was created. Note: the composition may predate the document, or be associated with multiple documents. The date of the composition - the authoring time - may be earlier than the document assembly time\n* message : the date that the content of the message was assembled. This date is not changed by middleware engines unless they add additional data that changes the meaning of the time of the message\n* history : the date that the history was assembled. This time would be used as the _since time to ask for subsequent updates\n* searchset : the time that the search set was assembled. Note that different pages MAY have different timestamps but need not. Having different timestamps does not imply that subsequent pages will represent or include changes made since the initial query\n* transaction | transaction-response | batch | batch-response | collection : no particular assigned meaning\n\nThe timestamp value should be greater than the lastUpdated and other timestamps in the resources in the bundle, and it should be equal or earlier than the .meta.lastUpdated on the Bundle itself.",
      min: 0,
      max: "1",
      base: { path: "Bundle.timestamp", min: 0, max: "1" },
      type: [{ code: "instant" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.init" },
        { identity: "cda", map: "ClinicalDocument.effectiveTime" },
      ],
    },
    dataPath: "root.timestamp",
    parentDataPath: "root",
    basePath: "root.timestamp",
    baseId: "Bundle.timestamp",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.total",
      path: "Bundle.total",
      short: "If search, the total number of matches",
      definition:
        "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle.",
      comment:
        "Only used if the bundle is a search result set. The total does not include resources such as OperationOutcome and included resources, only the total number of matching resources.",
      min: 0,
      max: "1",
      base: { path: "Bundle.total", min: 0, max: "1" },
      type: [{ code: "unsignedInt" }],
      condition: ["bdl-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.total",
    parentDataPath: "root",
    basePath: "root.total",
    baseId: "Bundle.total",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.link",
      path: "Bundle.link",
      short: "Links related to this Bundle",
      definition: "A series of links that provide context to this bundle.",
      comment:
        "Both Bundle.link and Bundle.entry.link are defined to support providing additional context when Bundles are used (e.g. [HATEOAS](http://en.wikipedia.org/wiki/HATEOAS)). \n\nBundle.entry.link corresponds to links found in the HTTP header if the resource in the entry was [read](http.html#read) directly.\n\nThis specification defines some specific uses of Bundle.link for [searching](search.html#conformance) and [paging](http.html#paging), but no specific uses for Bundle.entry.link, and no defined function in a transaction - the meaning is implementation specific.",
      min: 0,
      max: "*",
      base: { path: "Bundle.link", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.link[0]",
    parentDataPath: "root",
    basePath: "root.link",
    baseId: "Bundle.link",
    isPrimitive: false,
    childPaths: ["root.link.relation", "root.link.url"],
    value: "",
  },
  {
    element: {
      id: "Bundle.link.relation",
      path: "Bundle.link.relation",
      short:
        "See http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1",
      definition:
        "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).",
      min: 1,
      max: "1",
      base: { path: "Bundle.link.relation", min: 1, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.link.relation",
    parentDataPath: "root.link[0]",
    basePath: "root.relation",
    baseId: "Bundle.link.relation",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.link.url",
      path: "Bundle.link.url",
      short: "Reference details for the link",
      definition: "The reference details for the link.",
      min: 1,
      max: "1",
      base: { path: "Bundle.link.url", min: 1, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.link.url",
    parentDataPath: "root.link[0]",
    basePath: "root.url",
    baseId: "Bundle.link.url",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry",
      path: "Bundle.entry",
      short: "Entry in the bundle - will have a resource or information",
      definition:
        "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
      min: 0,
      max: "*",
      base: { path: "Bundle.entry", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      orderMeaning:
        "For bundles of type 'document' and 'message', the first resource is special (must be Composition or MessageHeader respectively). For all bundles, the meaning of the order of entries depends on the bundle type",
      constraint: [
        {
          key: "bdl-5",
          severity: "error",
          human: "must be a resource unless there's a request or response",
          expression:
            "resource.exists() or request.exists() or response.exists()",
          xpath:
            "exists(f:resource) or exists(f:request) or exists(f:response)",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "bdl-8",
          severity: "error",
          human: "fullUrl cannot be a version specific reference",
          expression:
            "fullUrl.exists() implies fullUrl.contains('/_history/').not()",
          xpath:
            "not(exists(f:fullUrl[contains(string(@value), '/_history/')]))",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry[0]",
    parentDataPath: "root",
    basePath: "root.entry",
    baseId: "Bundle.entry",
    isPrimitive: false,
    childPaths: [
      "root.entry.link[0]",
      "root.entry.fullUrl",
      "root.entry.resource",
      "root.entry.search",
      "root.entry.request",
      "root.entry.response",
    ],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.fullUrl",
      path: "Bundle.entry.fullUrl",
      short:
        "URI for resource (Absolute URL server address or URI for UUID/OID)",
      definition:
        "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified.",
      comment:
        "fullUrl might not be [unique in the context of a resource](bundle.html#bundle-unique). Note that since [FHIR resources do not need to be served through the FHIR API](references.html), the fullURL might be a URN or an absolute URL that does not end with the logical id of the resource (Resource.id). However, but if the fullUrl does look like a RESTful server URL (e.g. meets the [regex](references.html#regex), then the 'id' portion of the fullUrl SHALL end with the Resource.id.\n\nNote that the fullUrl is not the same as the canonical URL - it's an absolute url for an endpoint serving the resource (these will happen to have the same value on the canonical server for the resource with the canonical URL).",
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.fullUrl", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.fullUrl",
    parentDataPath: "root.entry[0]",
    basePath: "root.fullUrl",
    baseId: "Bundle.entry.fullUrl",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.search",
      path: "Bundle.entry.search",
      short: "Search related information",
      definition:
        "Information about the search process that lead to the creation of this entry.",
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.search", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      condition: ["bdl-2"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.search",
    parentDataPath: "root.entry[0]",
    basePath: "root.search",
    baseId: "Bundle.entry.search",
    isPrimitive: false,
    childPaths: ["root.entry.search.mode", "root.entry.search.score"],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.search.mode",
      path: "Bundle.entry.search.mode",
      short: "match | include | outcome - why this is in the result set",
      definition:
        "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
      comment:
        "There is only one mode. In some corner cases, a resource may be included because it is both a match and an include. In these circumstances, 'match' takes precedence.",
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.search.mode", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "SearchEntryMode",
          },
        ],
        strength: "required",
        description:
          "Why an entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
        valueSet: "http://hl7.org/fhir/ValueSet/search-entry-mode|4.3.0",
      },
    },
    dataPath: "root.entry.search.mode",
    parentDataPath: "root.entry.search",
    basePath: "root.mode",
    baseId: "Bundle.entry.search.mode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/search-entry-mode",
        code: "match",
        display: "Match",
      },
      {
        system: "http://hl7.org/fhir/search-entry-mode",
        code: "include",
        display: "Include",
      },
      {
        system: "http://hl7.org/fhir/search-entry-mode",
        code: "outcome",
        display: "Outcome",
      },
    ],
  },
  {
    element: {
      id: "Bundle.entry.search.score",
      path: "Bundle.entry.search.score",
      short: "Search ranking (between 0 and 1)",
      definition:
        "When searching, the server's search ranking score for the entry.",
      comment:
        "Servers are not required to return a ranking score. 1 is most relevant, and 0 is least relevant. Often, search results are sorted by score, but the client may specify a different sort order.\n\nSee [Patient Match](patient-operation-match.html) for the EMPI search which relates to this element.",
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.search.score", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.search.score",
    parentDataPath: "root.entry.search",
    basePath: "root.score",
    baseId: "Bundle.entry.search.score",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.request",
      path: "Bundle.entry.request",
      short: "Additional execution information (transaction/batch/history)",
      definition:
        "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.request", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      condition: ["bdl-3"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.request",
    parentDataPath: "root.entry[0]",
    basePath: "root.request",
    baseId: "Bundle.entry.request",
    isPrimitive: false,
    childPaths: [
      "root.entry.request.method",
      "root.entry.request.url",
      "root.entry.request.ifNoneMatch",
      "root.entry.request.ifModifiedSince",
      "root.entry.request.ifMatch",
      "root.entry.request.ifNoneExist",
    ],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.request.method",
      path: "Bundle.entry.request.method",
      short: "GET | HEAD | POST | PUT | DELETE | PATCH",
      definition:
        "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
      min: 1,
      max: "1",
      base: { path: "Bundle.entry.request.method", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "HTTPVerb",
          },
        ],
        strength: "required",
        description:
          "HTTP verbs (in the HTTP command line). See [HTTP rfc](https://tools.ietf.org/html/rfc7231) for details.",
        valueSet: "http://hl7.org/fhir/ValueSet/http-verb|4.3.0",
      },
    },
    dataPath: "root.entry.request.method",
    parentDataPath: "root.entry.request",
    basePath: "root.method",
    baseId: "Bundle.entry.request.method",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { system: "http://hl7.org/fhir/http-verb", code: "GET", display: "GET" },
      {
        system: "http://hl7.org/fhir/http-verb",
        code: "HEAD",
        display: "HEAD",
      },
      {
        system: "http://hl7.org/fhir/http-verb",
        code: "POST",
        display: "POST",
      },
      { system: "http://hl7.org/fhir/http-verb", code: "PUT", display: "PUT" },
      {
        system: "http://hl7.org/fhir/http-verb",
        code: "DELETE",
        display: "DELETE",
      },
      {
        system: "http://hl7.org/fhir/http-verb",
        code: "PATCH",
        display: "PATCH",
      },
    ],
  },
  {
    element: {
      id: "Bundle.entry.request.url",
      path: "Bundle.entry.request.url",
      short: "URL for HTTP equivalent of this entry",
      definition:
        "The URL for this entry, relative to the root (the address to which the request is posted).",
      comment:
        'E.g. for a Patient Create, the method would be "POST" and the URL would be "Patient". For a Patient Update, the method would be PUT and the URL would be "Patient/[id]".',
      min: 1,
      max: "1",
      base: { path: "Bundle.entry.request.url", min: 1, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.request.url",
    parentDataPath: "root.entry.request",
    basePath: "root.url",
    baseId: "Bundle.entry.request.url",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.request.ifNoneMatch",
      path: "Bundle.entry.request.ifNoneMatch",
      short: "For managing cache currency",
      definition:
        'If the ETag values match, return a 304 Not Modified status. See the API documentation for ["Conditional Read"](http.html#cread).',
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.request.ifNoneMatch", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.request.ifNoneMatch",
    parentDataPath: "root.entry.request",
    basePath: "root.ifNoneMatch",
    baseId: "Bundle.entry.request.ifNoneMatch",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.request.ifModifiedSince",
      path: "Bundle.entry.request.ifModifiedSince",
      short: "For managing cache currency",
      definition:
        'Only perform the operation if the last updated date matches. See the API documentation for ["Conditional Read"](http.html#cread).',
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.request.ifModifiedSince", min: 0, max: "1" },
      type: [{ code: "instant" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.request.ifModifiedSince",
    parentDataPath: "root.entry.request",
    basePath: "root.ifModifiedSince",
    baseId: "Bundle.entry.request.ifModifiedSince",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.request.ifMatch",
      path: "Bundle.entry.request.ifMatch",
      short: "For managing update contention",
      definition:
        'Only perform the operation if the Etag value matches. For more information, see the API section ["Managing Resource Contention"](http.html#concurrency).',
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.request.ifMatch", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.request.ifMatch",
    parentDataPath: "root.entry.request",
    basePath: "root.ifMatch",
    baseId: "Bundle.entry.request.ifMatch",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.request.ifNoneExist",
      path: "Bundle.entry.request.ifNoneExist",
      short: "For conditional creates",
      definition:
        'Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for ["Conditional Create"](http.html#ccreate). This is just the query portion of the URL - what follows the "?" (not including the "?").',
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.request.ifNoneExist", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.request.ifNoneExist",
    parentDataPath: "root.entry.request",
    basePath: "root.ifNoneExist",
    baseId: "Bundle.entry.request.ifNoneExist",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.response",
      path: "Bundle.entry.response",
      short: "Results of execution (transaction/batch/history)",
      definition:
        "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.response", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      condition: ["bdl-4"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.response",
    parentDataPath: "root.entry[0]",
    basePath: "root.response",
    baseId: "Bundle.entry.response",
    isPrimitive: false,
    childPaths: [
      "root.entry.response.status",
      "root.entry.response.location",
      "root.entry.response.etag",
      "root.entry.response.lastModified",
      "root.entry.response.outcome",
    ],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.response.status",
      path: "Bundle.entry.response.status",
      short: "Status response code (text optional)",
      definition:
        "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
      min: 1,
      max: "1",
      base: { path: "Bundle.entry.response.status", min: 1, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.response.status",
    parentDataPath: "root.entry.response",
    basePath: "root.status",
    baseId: "Bundle.entry.response.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.response.location",
      path: "Bundle.entry.response.location",
      short: "The location (if the operation returns a location)",
      definition:
        "The location header created by processing this operation, populated if the operation returns a location.",
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.response.location", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.response.location",
    parentDataPath: "root.entry.response",
    basePath: "root.location",
    baseId: "Bundle.entry.response.location",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.response.etag",
      path: "Bundle.entry.response.etag",
      short: "The Etag for the resource (if relevant)",
      definition:
        "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).",
      comment:
        "Etags match the Resource.meta.versionId. The ETag has to match the version id in the header if a resource is included.",
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.response.etag", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.response.etag",
    parentDataPath: "root.entry.response",
    basePath: "root.etag",
    baseId: "Bundle.entry.response.etag",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.entry.response.lastModified",
      path: "Bundle.entry.response.lastModified",
      short: "Server's date time modified",
      definition: "The date/time that the resource was modified on the server.",
      comment:
        "This has to match the same time in the meta header (meta.lastUpdated) if a resource is included.",
      min: 0,
      max: "1",
      base: { path: "Bundle.entry.response.lastModified", min: 0, max: "1" },
      type: [{ code: "instant" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.entry.response.lastModified",
    parentDataPath: "root.entry.response",
    basePath: "root.lastModified",
    baseId: "Bundle.entry.response.lastModified",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle.signature",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status",
          valueCode: "trial-use",
        },
      ],
      path: "Bundle.signature",
      short: "Digital Signature",
      definition: "Digital Signature - base64 encoded. XML-DSig or a JWT.",
      comment:
        'The signature could be created by the "author" of the bundle or by the originating device.   Requirements around inclusion of a signature, verification of signatures and treatment of signed/non-signed bundles is implementation-environment specific.',
      requirements:
        "A Signature holds an electronic representation of a signature and its supporting context in a FHIR accessible form. The signature may either be a cryptographic type (XML DigSig or a JWS), which is able to provide non-repudiation proof, or it may be a graphical image that represents a signature or a signature process. This element allows capturing signatures on documents, messages, transactions or even search responses, to support content-authentication, non-repudiation or other business cases. This is primarily relevant where the bundle may travel through multiple hops or via other mechanisms where HTTPS non-repudiation is insufficient.",
      min: 0,
      max: "1",
      base: { path: "Bundle.signature", min: 0, max: "1" },
      type: [{ code: "Signature" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.signature",
    parentDataPath: "root",
    basePath: "root.signature",
    baseId: "Bundle.signature",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Bundle",
      path: "Bundle",
      short: "Contains a collection of resources",
      definition: "A container for a collection of resources.",
      min: 0,
      max: "*",
      base: { path: "Bundle", min: 0, max: "*" },
      constraint: [
        {
          key: "bdl-1",
          severity: "error",
          human: "total only when a search or history",
          expression:
            "total.empty() or (type = 'searchset') or (type = 'history')",
          xpath:
            "not(f:total) or (f:type/@value = 'searchset') or (f:type/@value = 'history')",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "bdl-2",
          severity: "error",
          human: "entry.search only when a search",
          expression: "entry.search.empty() or (type = 'searchset')",
          xpath: "not(f:entry/f:search) or (f:type/@value = 'searchset')",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "bdl-3",
          severity: "error",
          human:
            "entry.request mandatory for batch/transaction/history, otherwise prohibited",
          expression:
            "entry.all(request.exists() = (%resource.type = 'batch' or %resource.type = 'transaction' or %resource.type = 'history'))",
          xpath:
            "not(f:entry/f:request) or (f:type/@value = 'batch') or (f:type/@value = 'transaction') or (f:type/@value = 'history')",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "bdl-4",
          severity: "error",
          human:
            "entry.response mandatory for batch-response/transaction-response/history, otherwise prohibited",
          expression:
            "entry.all(response.exists() = (%resource.type = 'batch-response' or %resource.type = 'transaction-response' or %resource.type = 'history'))",
          xpath:
            "not(f:entry/f:response) or (f:type/@value = 'batch-response') or (f:type/@value = 'transaction-response') or (f:type/@value = 'history')",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "bdl-7",
          severity: "error",
          human:
            "FullUrl must be unique in a bundle, or else entries with the same fullUrl must have different meta.versionId (except in history bundles)",
          expression:
            "(type = 'history') or entry.where(fullUrl.exists()).select(fullUrl&resource.meta.versionId).isDistinct()",
          xpath:
            "(f:type/@value = 'history') or (count(for $entry in f:entry[f:resource] return $entry[count(parent::f:Bundle/f:entry[f:fullUrl/@value=$entry/f:fullUrl/@value and ((not(f:resource/*/f:meta/f:versionId/@value) and not($entry/f:resource/*/f:meta/f:versionId/@value)) or f:resource/*/f:meta/f:versionId/@value=$entry/f:resource/*/f:meta/f:versionId/@value)])!=1])=0)",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "bdl-9",
          severity: "error",
          human: "A document must have an identifier with a system and a value",
          expression:
            "type = 'document' implies (identifier.system.exists() and identifier.value.exists())",
          xpath:
            "not(f:type/@value = 'document') or exists(f:identifier/f:system) or exists(f:identifier/f:value)",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "bdl-10",
          severity: "error",
          human: "A document must have a date",
          expression: "type = 'document' implies (timestamp.hasValue())",
          xpath:
            "not(f:type/@value = 'document') or exists(f:timestamp/@value)",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "bdl-11",
          severity: "error",
          human: "A document must have a Composition as the first resource",
          expression:
            "type = 'document' implies entry.first().resource.is(Composition)",
          xpath:
            "not(f:type/@value='document') or f:entry[1]/f:resource/f:Composition",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
        {
          key: "bdl-12",
          severity: "error",
          human: "A message must have a MessageHeader as the first resource",
          expression:
            "type = 'message' implies entry.first().resource.is(MessageHeader)",
          xpath:
            "not(f:type/@value='message') or f:entry[1]/f:resource/f:MessageHeader",
          source: "http://hl7.org/fhir/StructureDefinition/Bundle",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "v2", map: "N/A" },
        { identity: "rim", map: "N/A" },
        { identity: "cda", map: "ClinicalDocument, if bundle.type = document" },
        { identity: "w5", map: "infrastructure.structure" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "Bundle",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
