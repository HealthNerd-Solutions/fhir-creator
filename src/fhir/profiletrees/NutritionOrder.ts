const data = [
  {
    element: {
      id: "NutritionOrder.meta",
      path: "NutritionOrder.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "NutritionOrder.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.implicitRules",
      path: "NutritionOrder.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "NutritionOrder.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.language",
      path: "NutritionOrder.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "NutritionOrder.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "NutritionOrder.contained",
      path: "NutritionOrder.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/NutritionOrder",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "NutritionOrder.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.instantiatesCanonical",
      path: "NutritionOrder.instantiatesCanonical",
      short: "Instantiates FHIR protocol or definition",
      definition:
        "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
      comment:
        "Note: This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.",
      min: 0,
      max: "*",
      base: { path: "NutritionOrder.instantiatesCanonical", min: 0, max: "*" },
      type: [
        {
          code: "canonical",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/ActivityDefinition",
            "http://hl7.org/fhir/StructureDefinition/PlanDefinition",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.instantiatesCanonical" },
        { identity: "v2", map: "Varies by domain" },
        { identity: "rim", map: ".outboundRelationship[typeCode=DEFN].target" },
      ],
    },
    dataPath: "root.instantiatesCanonical[0]",
    parentDataPath: "root",
    basePath: "root.instantiatesCanonical",
    baseId: "NutritionOrder.instantiatesCanonical",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.instantiatesUri",
      path: "NutritionOrder.instantiatesUri",
      short: "Instantiates external protocol or definition",
      definition:
        "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
      comment:
        "This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.",
      min: 0,
      max: "*",
      base: { path: "NutritionOrder.instantiatesUri", min: 0, max: "*" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.instantiatesUri" },
        { identity: "v2", map: "Varies by domain" },
        { identity: "rim", map: ".outboundRelationship[typeCode=DEFN].target" },
      ],
    },
    dataPath: "root.instantiatesUri[0]",
    parentDataPath: "root",
    basePath: "root.instantiatesUri",
    baseId: "NutritionOrder.instantiatesUri",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.instantiates",
      path: "NutritionOrder.instantiates",
      short: "Instantiates protocol or definition",
      definition:
        "The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
      min: 0,
      max: "*",
      base: { path: "NutritionOrder.instantiates", min: 0, max: "*" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Request.instantiates" },
        { identity: "v2", map: "Varies by domain" },
        { identity: "rim", map: ".outboundRelationship[typeCode=DEFN].target" },
      ],
    },
    dataPath: "root.instantiates[0]",
    parentDataPath: "root",
    basePath: "root.instantiates",
    baseId: "NutritionOrder.instantiates",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.status",
      path: "NutritionOrder.status",
      short:
        "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
      definition: "The workflow status of the nutrition order/request.",
      comment:
        'Typically the system placing the order sets the status to "requested". Thereafter, the order is maintained by the receiver that updates the status as the request is handled.  This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.',
      min: 1,
      max: "1",
      base: { path: "NutritionOrder.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "NutritionOrderStatus",
          },
        ],
        strength: "required",
        description:
          "Codes identifying the lifecycle stage of the nutrition order.",
        valueSet: "http://hl7.org/fhir/ValueSet/request-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Request.status" },
        { identity: "w5", map: "FiveWs.status" },
        { identity: "v2", map: "ORC-1" },
        { identity: "rim", map: ".statusCode" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "NutritionOrder.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/request-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "on-hold",
        display: "On Hold",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "revoked",
        display: "Revoked",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "completed",
        display: "Completed",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "NutritionOrder.intent",
      path: "NutritionOrder.intent",
      short:
        "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option",
      definition:
        "Indicates the level of authority/intentionality associated with the NutrionOrder and where the request fits into the workflow chain.",
      comment:
        'When resources map to this element, they are free to define as many codes as necessary to cover their space and will map to "proposal, plan or order".  Can have multiple codes that map to one of these.  E.g. "original order", "encoded order", "reflex order" would all map to "order".  Expectation is that the set of codes is mutually exclusive or a strict all-encompassing hierarchy.',
      requirements:
        "Proposals/recommendations, plans and orders all use the same structure and can exist in the same fulfillment chain.",
      alias: ["category"],
      min: 1,
      max: "1",
      base: { path: "NutritionOrder.intent", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        'This element changes the interpretation of all descriptive attributes. For example "the time the request is recommended to occur" vs. "the time the request is authorized to occur" or "who is recommended to perform the request" vs. "who is authorized to perform the request',
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "NutritiionOrderIntent",
          },
        ],
        strength: "required",
        description:
          "Codes indicating the degree of authority/intentionality associated with a nutrition order.",
        valueSet: "http://hl7.org/fhir/ValueSet/request-intent|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Request.intent" },
        { identity: "w5", map: "FiveWs.class" },
        { identity: "v2", map: "N/A" },
        {
          identity: "rim",
          map: ".moodCode (nuances beyond PRP/PLAN/RQO would need to be elsewhere)",
        },
      ],
    },
    dataPath: "root.intent",
    parentDataPath: "root",
    basePath: "root.intent",
    baseId: "NutritionOrder.intent",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "proposal",
        display: "Proposal",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "plan",
        display: "Plan",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "directive",
        display: "Directive",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "order",
        display: "Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "original-order",
        display: "Original Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "reflex-order",
        display: "Reflex Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "filler-order",
        display: "Filler Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "instance-order",
        display: "Instance Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "option",
        display: "Option",
      },
    ],
  },
  {
    element: {
      id: "NutritionOrder.encounter",
      path: "NutritionOrder.encounter",
      short: "The encounter associated with this nutrition order",
      definition:
        "An encounter that provides additional information about the healthcare context in which this request is made.",
      min: 0,
      max: "1",
      base: { path: "NutritionOrder.encounter", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Encounter"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Request.encounter" },
        { identity: "w5", map: "FiveWs.context" },
        { identity: "v2", map: "PV1" },
        {
          identity: "rim",
          map: ".inboundRelationship[typeCode=COMP].source[classCode=ENC, moodCode=EVN]",
        },
      ],
    },
    dataPath: "root.encounter",
    parentDataPath: "root",
    basePath: "root.encounter",
    baseId: "NutritionOrder.encounter",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.dateTime",
      path: "NutritionOrder.dateTime",
      short: "Date and time the nutrition order was requested",
      definition: "The date and time that this nutrition order was requested.",
      min: 1,
      max: "1",
      base: { path: "NutritionOrder.dateTime", min: 1, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.authoredOn" },
        { identity: "w5", map: "FiveWs.recorded" },
        { identity: "v2", map: "ORC-9" },
        { identity: "rim", map: "author.time" },
      ],
    },
    dataPath: "root.dateTime",
    parentDataPath: "root",
    basePath: "root.dateTime",
    baseId: "NutritionOrder.dateTime",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.allergyIntolerance",
      path: "NutritionOrder.allergyIntolerance",
      short:
        "List of the patient's food and nutrition-related allergies and intolerances",
      definition:
        "A link to a record of allergies or intolerances  which should be included in the nutrition order.",
      comment:
        "Information on a patient's food allergies and intolerances to inform healthcare personnel about the type of foods that the patient shouldn't receive or consume.",
      min: 0,
      max: "*",
      base: { path: "NutritionOrder.allergyIntolerance", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/AllergyIntolerance",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        {
          identity: "rim",
          map: ".outboundRelationship[typeCode=RSON].target[classCode=OBS, moodCode=EVN]",
        },
      ],
    },
    dataPath: "root.allergyIntolerance[0]",
    parentDataPath: "root",
    basePath: "root.allergyIntolerance",
    baseId: "NutritionOrder.allergyIntolerance",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.foodPreferenceModifier",
      path: "NutritionOrder.foodPreferenceModifier",
      short:
        "Order-specific modifier about the type of food that should be given",
      definition:
        "This modifier is used to convey order-specific modifiers about the type of food that should be given. These can be derived from patient allergies, intolerances, or preferences such as Halal, Vegan or Kosher. This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.",
      comment:
        "Information on a patient's food preferences that inform healthcare personnel about the food that the patient should receive or consume.",
      min: 0,
      max: "*",
      base: { path: "NutritionOrder.foodPreferenceModifier", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "PatientDiet",
          },
        ],
        strength: "example",
        description:
          "Medical, cultural or ethical food preferences to help with catering requirements.",
        valueSet: "http://hl7.org/fhir/ValueSet/encounter-diet",
      },
      mapping: [
        { identity: "v2", map: 'ODS-1 Value = "P",ODS-3' },
        {
          identity: "rim",
          map: ".outboundRelationship [typeCode =COMP], target [classCode=PROC, moodCode=EVN, code=NutritionModificationType]",
        },
      ],
    },
    dataPath: "root.foodPreferenceModifier[0]",
    parentDataPath: "root",
    basePath: "root.foodPreferenceModifier",
    baseId: "NutritionOrder.foodPreferenceModifier",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/diet",
        code: "vegetarian",
        display: "Vegetarian",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diet",
        code: "dairy-free",
        display: "Dairy Free",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diet",
        code: "nut-free",
        display: "Nut Free",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diet",
        code: "gluten-free",
        display: "Gluten Free",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diet",
        code: "vegan",
        display: "Vegan",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diet",
        code: "halal",
        display: "Halal",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diet",
        code: "kosher",
        display: "Kosher",
      },
    ],
  },
  {
    element: {
      id: "NutritionOrder.oralDiet",
      path: "NutritionOrder.oralDiet",
      short: "Oral diet components",
      definition: "Diet given orally in contrast to enteral (tube) feeding.",
      min: 0,
      max: "1",
      base: { path: "NutritionOrder.oralDiet", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      condition: ["nor-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: 'ODS-1 Value = "D"' },
        {
          identity: "rim",
          map: "oralDiet .outboundRelationship [typeCode =COMP], target [classCode=SPLY, moodCode=RQO, code=OralDietSupplyType]",
        },
      ],
    },
    dataPath: "root.oralDiet",
    parentDataPath: "root",
    basePath: "root.oralDiet",
    baseId: "NutritionOrder.oralDiet",
    isPrimitive: false,
    childPaths: [
      "root.oralDiet.type[0]",
      "root.oralDiet.schedule[0]",
      "root.oralDiet.nutrient[0]",
      "root.oralDiet.texture[0]",
      "root.oralDiet.fluidConsistencyType[0]",
      "root.oralDiet.instruction",
    ],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.oralDiet.schedule",
      path: "NutritionOrder.oralDiet.schedule",
      short: "Scheduled frequency of diet",
      definition:
        "The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present.",
      alias: ["Frequency"],
      min: 0,
      max: "*",
      base: { path: "NutritionOrder.oralDiet.schedule", min: 0, max: "*" },
      type: [{ code: "Timing" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Request.occurrence[x]" },
        { identity: "v2", map: "ODS-2, TQ1-7/8" },
        { identity: "rim", map: ".expectedUseTime" },
      ],
    },
    dataPath: "root.oralDiet.schedule[0]",
    parentDataPath: "root.oralDiet",
    basePath: "root.schedule",
    baseId: "NutritionOrder.oralDiet.schedule",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.oralDiet.nutrient",
      path: "NutritionOrder.oralDiet.nutrient",
      short: "Required  nutrient modifications",
      definition:
        "Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet.",
      min: 0,
      max: "*",
      base: { path: "NutritionOrder.oralDiet.nutrient", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "ODS-4" },
        {
          identity: "rim",
          map: ".participation[typeCode=PRD].role[classCode=MANU], manufacturedFoodKind",
        },
      ],
    },
    dataPath: "root.oralDiet.nutrient[0]",
    parentDataPath: "root.oralDiet",
    basePath: "root.nutrient",
    baseId: "NutritionOrder.oralDiet.nutrient",
    isPrimitive: false,
    childPaths: [
      "root.oralDiet.nutrient.modifier",
      "root.oralDiet.nutrient.amount",
    ],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.oralDiet.nutrient.amount",
      path: "NutritionOrder.oralDiet.nutrient.amount",
      short: "Quantity of the specified nutrient",
      definition: "The quantity of the specified nutrient to include in diet.",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.oralDiet.nutrient.amount",
        min: 0,
        max: "1",
      },
      type: [
        {
          code: "Quantity",
          profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "ODS-4" },
        { identity: "rim", map: ".quantity" },
      ],
    },
    dataPath: "root.oralDiet.nutrient.amount",
    parentDataPath: "root.oralDiet.nutrient[0]",
    basePath: "root.amount",
    baseId: "NutritionOrder.oralDiet.nutrient.amount",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.oralDiet.texture",
      path: "NutritionOrder.oralDiet.texture",
      short: "Required  texture modifications",
      definition:
        "Class that describes any texture modifications required for the patient to safely consume various types of solid foods.",
      min: 0,
      max: "*",
      base: { path: "NutritionOrder.oralDiet.texture", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "ODS-4" },
        {
          identity: "rim",
          map: ".inboundRelationship [typeCode =COMP], target [classCode=PROC, moodCode=EVN, code=DietTextureModificationType]",
        },
      ],
    },
    dataPath: "root.oralDiet.texture[0]",
    parentDataPath: "root.oralDiet",
    basePath: "root.texture",
    baseId: "NutritionOrder.oralDiet.texture",
    isPrimitive: false,
    childPaths: [
      "root.oralDiet.texture.modifier",
      "root.oralDiet.texture.foodType",
    ],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.oralDiet.texture.modifier",
      path: "NutritionOrder.oralDiet.texture.modifier",
      short:
        "Code to indicate how to alter the texture of the foods, e.g. pureed",
      definition:
        "Any texture modifications (for solid foods) that should be made, e.g. easy to chew, chopped, ground, and pureed.",
      comment: "Coupled with the foodType (Meat).",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.oralDiet.texture.modifier",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TextureModifier",
          },
        ],
        strength: "example",
        description:
          "Codes for food consistency types or texture modifications to apply to foods.",
        valueSet: "http://hl7.org/fhir/ValueSet/texture-code",
      },
      mapping: [
        { identity: "workflow", map: "Request.code" },
        { identity: "v2", map: "ODS-4" },
        { identity: "rim", map: ".code" },
      ],
    },
    dataPath: "root.oralDiet.texture.modifier",
    parentDataPath: "root.oralDiet.texture[0]",
    basePath: "root.modifier",
    baseId: "NutritionOrder.oralDiet.texture.modifier",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "228053002", display: "Cut-up food" },
      { code: "439091000124107", display: "Easy to chew food" },
      { code: "228049004", display: "Chopped food" },
      { code: "441881000124103", display: "Ground food" },
      { code: "441761000124103", display: "Minced food" },
      { code: "441751000124100", display: "Mashed food" },
      { code: "228059003", display: "Soft food" },
      { code: "441791000124106", display: "Strained food" },
      { code: "228055009", display: "Liquidized food" },
      { code: "228056005", display: "Lumpy food" },
      { code: "441771000124105", display: "Moist food" },
      { code: "228057001", display: "Semi-solid food" },
      { code: "228058006", display: "Single texture food" },
      { code: "228060008", display: "Solid food" },
    ],
  },
  {
    element: {
      id: "NutritionOrder.oralDiet.texture.foodType",
      path: "NutritionOrder.oralDiet.texture.foodType",
      short:
        "Concepts that are used to identify an entity that is ingested for nutritional purposes",
      definition:
        "The food type(s) (e.g. meats, all foods)  that the texture modification applies to.  This could be all foods types.",
      comment: "Coupled with the `texture.modifier`; could be (All Foods).",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.oralDiet.texture.foodType",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TextureModifiedFoodType",
          },
        ],
        strength: "example",
        description: "Codes for types of foods that are texture-modified.",
        valueSet: "http://hl7.org/fhir/ValueSet/modified-foodtype",
      },
      mapping: [
        { identity: "workflow", map: "Request.code" },
        { identity: "v2", map: "ODS-4" },
        {
          identity: "rim",
          map: ".participation[typeCode=PRD].role[classCode=MANU], manufacturedFoodKind; .code",
        },
      ],
    },
    dataPath: "root.oralDiet.texture.foodType",
    parentDataPath: "root.oralDiet.texture[0]",
    basePath: "root.foodType",
    baseId: "NutritionOrder.oralDiet.texture.foodType",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "255620007", display: "Foods" },
      { code: "28647000", display: "Meat" },
      { code: "22836000", display: "Vegetables" },
      { code: "72511004", display: "Fruit" },
      { code: "226760005", display: "Dairy foods" },
      { code: "226887002", display: "Dietary Fats and Oils" },
      { code: "102263004", display: "Eggs" },
      { code: "74242007", display: "Food Starch" },
      { code: "227415002", display: "Fruit Nuts and Seeds" },
      { code: "264331002", display: "Grain" },
      { code: "227518002", display: "Sauce seasonings and soups" },
      { code: "44027008", display: "Seafood" },
      { code: "226529007", display: "Starchy food" },
      { code: "227210005", display: "Vegetables plus herbs and spices" },
    ],
  },
  {
    element: {
      id: "NutritionOrder.oralDiet.fluidConsistencyType",
      path: "NutritionOrder.oralDiet.fluidConsistencyType",
      short:
        "The required consistency of fluids and liquids provided to the patient",
      definition:
        "The required consistency (e.g. honey-thick, nectar-thick, thin, thickened.) of liquids or fluids served to the patient.",
      min: 0,
      max: "*",
      base: {
        path: "NutritionOrder.oralDiet.fluidConsistencyType",
        min: 0,
        max: "*",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "FluidConsistencyType",
          },
        ],
        strength: "example",
        description:
          "Codes used to represent the consistency of fluids and liquids provided to the patient.",
        valueSet: "http://hl7.org/fhir/ValueSet/consistency-type",
      },
      mapping: [
        { identity: "workflow", map: "Request.code" },
        { identity: "v2", map: "ODS-4" },
        {
          identity: "rim",
          map: ".code  (Not differentiated from dietTextureModificationType in HL7 v3)",
        },
      ],
    },
    dataPath: "root.oralDiet.fluidConsistencyType[0]",
    parentDataPath: "root.oralDiet",
    basePath: "root.fluidConsistencyType",
    baseId: "NutritionOrder.oralDiet.fluidConsistencyType",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "439031000124108", display: "honey thick liquid" },
      { code: "439021000124105", display: "nectar thick liquid" },
      { code: "439041000124103", display: "spoon thick liquid" },
      { code: "439081000124109", display: "thin liquid" },
    ],
  },
  {
    element: {
      id: "NutritionOrder.oralDiet.instruction",
      path: "NutritionOrder.oralDiet.instruction",
      short: "Instructions or additional information about the oral diet",
      definition:
        "Free text or additional instructions or information pertaining to the oral diet.",
      comment:
        "Free text dosage instructions can be used for cases where the instructions are too complex to code.",
      min: 0,
      max: "1",
      base: { path: "NutritionOrder.oralDiet.instruction", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.supportingInfo" },
        { identity: "v2", map: "ODS-4" },
        { identity: "rim", map: ".text" },
      ],
    },
    dataPath: "root.oralDiet.instruction",
    parentDataPath: "root.oralDiet",
    basePath: "root.instruction",
    baseId: "NutritionOrder.oralDiet.instruction",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.supplement",
      path: "NutritionOrder.supplement",
      short: "Supplement components",
      definition:
        "Oral nutritional products given in order to add further nutritional value to the patient's diet.",
      min: 0,
      max: "*",
      base: { path: "NutritionOrder.supplement", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      condition: ["nor-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: 'ODS-1 Value = "P"' },
        {
          identity: "rim",
          map: ".outboundRelationship [typeCode =COMP], target [classCode=SPLY, moodCode=RQO, code=SUPPLEMENT]",
        },
      ],
    },
    dataPath: "root.supplement[0]",
    parentDataPath: "root",
    basePath: "root.supplement",
    baseId: "NutritionOrder.supplement",
    isPrimitive: false,
    childPaths: [
      "root.supplement.type",
      "root.supplement.productName",
      "root.supplement.schedule[0]",
      "root.supplement.quantity",
      "root.supplement.instruction",
    ],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.supplement.type",
      path: "NutritionOrder.supplement.type",
      short: "Type of supplement product requested",
      definition:
        "The kind of nutritional supplement product required such as a high protein or pediatric clear liquid supplement.",
      min: 0,
      max: "1",
      base: { path: "NutritionOrder.supplement.type", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "SupplementType",
          },
        ],
        strength: "example",
        description:
          "Codes for nutritional supplements to be provided to the patient.",
        valueSet: "http://hl7.org/fhir/ValueSet/supplement-type",
      },
      mapping: [
        { identity: "workflow", map: "Request.code" },
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "v2", map: "ODS-3" },
        {
          identity: "rim",
          map: ".participation[typeCode=PRD].role[classCode=MANU], manufacturedFoodKind; .code (NutritionalSupplementType)",
        },
      ],
    },
    dataPath: "root.supplement.type",
    parentDataPath: "root.supplement[0]",
    basePath: "root.type",
    baseId: "NutritionOrder.supplement.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "442901000124106", display: "Adult clear liquid supplement" },
      { code: "443031000124106", display: "Adult critical care formula" },
      { code: "443051000124104", display: "Adult diabetes specialty formula" },
      { code: "442911000124109", display: "Adult elemental formula" },
      { code: "443021000124108", display: "Adult hepatic specialty formula" },
      { code: "442971000124100", display: "Adult high energy formula" },
      { code: "442981000124102", display: "Adult hydrolyzed protein formula" },
      { code: "442991000124104", display: "Adult high protein formula" },
      {
        code: "443011000124100",
        display: "Adult high protein high fiber formula",
      },
      { code: "442961000124107", display: "Adult low carbohydrate formula" },
      { code: "442951000124105", display: "Adult pulmonary specialty formula" },
      { code: "442941000124108", display: "Adult renal specialty formula" },
      { code: "442921000124101", display: "Adult standard formula" },
      { code: "442931000124103", display: "Adult soy protein isolate formula" },
      { code: "444331000124106", display: "Diabetic meal replacement bar" },
      { code: "443361000124100", display: "Pediatric Formula" },
      { code: "443391000124108", display: "Pediatric clear liquid supplement" },
      { code: "443401000124105", display: "Pediatric elemental formula" },
      { code: "443491000124103", display: "Pediatric high energy formula" },
      {
        code: "443501000124106",
        display: "Pediatric high energy formula with increased fiber",
      },
      {
        code: "443421000124100",
        display: "Pediatric hydrolyzed protein formula",
      },
      { code: "443471000124104", display: "Pediatric increased fiber formula" },
      { code: "444431000124104", display: "Pediatric reduced energy formula" },
      { code: "443451000124109", display: "Pediatric standard formula" },
      { code: "444321000124108", display: "Standard pudding oral supplement" },
      {
        code: "441561000124106",
        display: "Standard enteral formula with fiber",
      },
      { code: "443461000124106", display: "Standard Formula" },
      { code: "441531000124102", display: "Standard Enteral Formula" },
      { code: "443561000124107", display: "Soy based formula" },
      { code: "443481000124101", display: "Renal Formula" },
      {
        code: "441571000124104",
        display: "High energy enteral formula with fiber",
      },
      {
        code: "441591000124103",
        display: "Diabetic enteral formula with fiber",
      },
      {
        code: "441601000124106",
        display:
          "Diabetic high calorie high protein enteral formula with fiber",
      },
      { code: "443351000124102", display: "Increased fiber formula" },
      { code: "443771000124106", display: "Hydrolyzed protein formula" },
      {
        code: "441671000124100",
        display: "Hydrolyzed peptide-based high protein enteral formula",
      },
      { code: "443111000124101", display: "High protein formula" },
      { code: "443431000124102", display: "High Energy Formula" },
      { code: "443411000124108", display: "Elemental Formula" },
      {
        code: "444361000124102",
        display: "Electrolyte replacement supplement",
      },
      {
        code: "444401000124107",
        display: "Frozen electrolyte replacement supplement",
      },
      {
        code: "444381000124107",
        display: "Liquid electrolyte replacement supplement",
      },
      {
        code: "444371000124109",
        display: "Powdered electrolyte replacement supplement",
      },
      { code: "443441000124107", display: "Clear liquid supplement" },
      { code: "442651000124102", display: "Adult formula" },
    ],
  },
  {
    element: {
      id: "NutritionOrder.supplement.productName",
      path: "NutritionOrder.supplement.productName",
      short: "Product or brand name of the nutritional supplement",
      definition:
        'The product or brand name of the nutritional supplement such as "Acme Protein Shake".',
      min: 0,
      max: "1",
      base: { path: "NutritionOrder.supplement.productName", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "ODS-3" },
        { identity: "rim", map: ".id" },
      ],
    },
    dataPath: "root.supplement.productName",
    parentDataPath: "root.supplement[0]",
    basePath: "root.productName",
    baseId: "NutritionOrder.supplement.productName",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.supplement.quantity",
      path: "NutritionOrder.supplement.quantity",
      short: "Amount of the nutritional supplement",
      definition: "The amount of the nutritional supplement to be given.",
      min: 0,
      max: "1",
      base: { path: "NutritionOrder.supplement.quantity", min: 0, max: "1" },
      type: [
        {
          code: "Quantity",
          profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "TQ1-2" },
        { identity: "rim", map: ".quantity" },
      ],
    },
    dataPath: "root.supplement.quantity",
    parentDataPath: "root.supplement[0]",
    basePath: "root.quantity",
    baseId: "NutritionOrder.supplement.quantity",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.supplement.instruction",
      path: "NutritionOrder.supplement.instruction",
      short: "Instructions or additional information about the oral supplement",
      definition:
        "Free text or additional instructions or information pertaining to the oral supplement.",
      comment:
        "Free text dosage instructions can be used for cases where the instructions are too complex to code.",
      min: 0,
      max: "1",
      base: { path: "NutritionOrder.supplement.instruction", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.supportingInfo" },
        { identity: "v2", map: "ODS-4" },
        { identity: "rim", map: ".text" },
      ],
    },
    dataPath: "root.supplement.instruction",
    parentDataPath: "root.supplement[0]",
    basePath: "root.instruction",
    baseId: "NutritionOrder.supplement.instruction",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula",
      path: "NutritionOrder.enteralFormula",
      short: "Enteral formula components",
      definition:
        "Feeding provided through the gastrointestinal tract via a tube, catheter, or stoma that delivers nutrition distal to the oral cavity.",
      min: 0,
      max: "1",
      base: { path: "NutritionOrder.enteralFormula", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      condition: ["nor-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "ODS-1 Value coded for enteral" },
        {
          identity: "rim",
          map: ".outboundRelationship [typeCode =COMP], target [classCode=SPLY, moodCode=RQO, code=FORMULA]",
        },
      ],
    },
    dataPath: "root.enteralFormula",
    parentDataPath: "root",
    basePath: "root.enteralFormula",
    baseId: "NutritionOrder.enteralFormula",
    isPrimitive: false,
    childPaths: [
      "root.enteralFormula.baseFormulaType",
      "root.enteralFormula.baseFormulaProductName",
      "root.enteralFormula.additiveType",
      "root.enteralFormula.additiveProductName",
      "root.enteralFormula.caloricDensity",
      "root.enteralFormula.routeofAdministration",
      "root.enteralFormula.administration[0]",
      "root.enteralFormula.maxVolumeToDeliver",
      "root.enteralFormula.administrationInstruction",
    ],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula.baseFormulaType",
      path: "NutritionOrder.enteralFormula.baseFormulaType",
      short: "Type of enteral or infant formula",
      definition:
        "The type of enteral or infant formula such as an adult standard formula with fiber or a soy-based infant formula.",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.enteralFormula.baseFormulaType",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "EnteralFormulaType",
          },
        ],
        strength: "example",
        description:
          "Codes for type of enteral formula to be administered to patient.",
        valueSet: "http://hl7.org/fhir/ValueSet/entformula-type",
      },
      mapping: [
        { identity: "workflow", map: "Request.code" },
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "v2", map: "ODS-3" },
        {
          identity: "rim",
          map: ".participation[typeCode=PRD].role[classCode=MANU], manufacturedFoodKind; .code (NutritionalFormulaType)",
        },
      ],
    },
    dataPath: "root.enteralFormula.baseFormulaType",
    parentDataPath: "root.enteralFormula",
    basePath: "root.baseFormulaType",
    baseId: "NutritionOrder.enteralFormula.baseFormulaType",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "443031000124106", display: "Adult critical care formula" },
      { code: "443051000124104", display: "Adult diabetes specialty formula" },
      { code: "442911000124109", display: "Adult elemental formula" },
      { code: "443021000124108", display: "Adult hepatic specialty formula" },
      { code: "442971000124100", display: "Adult high energy formula" },
      { code: "442981000124102", display: "Adult hydrolyzed protein formula" },
      { code: "442991000124104", display: "Adult high protein formula" },
      {
        code: "443011000124100",
        display: "Adult high protein high fiber formula",
      },
      { code: "442961000124107", display: "Adult low carbohydrate formula" },
      { code: "442951000124105", display: "Adult pulmonary specialty formula" },
      { code: "442941000124108", display: "Adult renal specialty formula" },
      { code: "442921000124101", display: "Adult standard formula" },
      { code: "442931000124103", display: "Adult soy protein isolate formula" },
      { code: "443361000124100", display: "Pediatric Formula" },
      { code: "443401000124105", display: "Pediatric elemental formula" },
      { code: "443491000124103", display: "Pediatric high energy formula" },
      {
        code: "443501000124106",
        display: "Pediatric high energy formula with increased fiber",
      },
      {
        code: "443421000124100",
        display: "Pediatric hydrolyzed protein formula",
      },
      { code: "443471000124104", display: "Pediatric increased fiber formula" },
      { code: "444431000124104", display: "Pediatric reduced energy formula" },
      { code: "443451000124109", display: "Pediatric standard formula" },
      {
        code: "441561000124106",
        display: "Standard enteral formula with fiber",
      },
      { code: "443461000124106", display: "Standard Formula" },
      { code: "441531000124102", display: "Standard Enteral Formula" },
      { code: "443561000124107", display: "Soy based formula" },
      { code: "443481000124101", display: "Renal Formula" },
      {
        code: "441571000124104",
        display: "High energy enteral formula with fiber",
      },
      {
        code: "441591000124103",
        display: "Diabetic enteral formula with fiber",
      },
      {
        code: "441601000124106",
        display:
          "Diabetic high calorie high protein enteral formula with fiber",
      },
      { code: "443351000124102", display: "Increased fiber formula" },
      { code: "443771000124106", display: "Hydrolyzed protein formula" },
      {
        code: "441671000124100",
        display: "Hydrolyzed peptide-based high protein enteral formula",
      },
      { code: "443111000124101", display: "High protein formula" },
      { code: "443431000124102", display: "High Energy Formula" },
      { code: "443411000124108", display: "Elemental Formula" },
      { code: "442651000124102", display: "Adult formula" },
    ],
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula.baseFormulaProductName",
      path: "NutritionOrder.enteralFormula.baseFormulaProductName",
      short: "Product or brand name of the enteral or infant formula",
      definition:
        'The product or brand name of the enteral or infant formula product such as "ACME Adult Standard Formula".',
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.enteralFormula.baseFormulaProductName",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "ODS-4" },
        { identity: "rim", map: ".id" },
      ],
    },
    dataPath: "root.enteralFormula.baseFormulaProductName",
    parentDataPath: "root.enteralFormula",
    basePath: "root.baseFormulaProductName",
    baseId: "NutritionOrder.enteralFormula.baseFormulaProductName",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula.additiveType",
      path: "NutritionOrder.enteralFormula.additiveType",
      short: "Type of modular component to add to the feeding",
      definition:
        "Indicates the type of modular component such as protein, carbohydrate, fat or fiber to be provided in addition to or mixed with the base formula.",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.enteralFormula.additiveType",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "EnteralFormulaAdditiveType",
          },
        ],
        strength: "example",
        description:
          "Codes for the type of modular component such as protein, carbohydrate or fiber to be provided in addition to or mixed with the base formula.",
        valueSet: "http://hl7.org/fhir/ValueSet/entformula-additive",
      },
      mapping: [
        { identity: "workflow", map: "Request.code" },
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "v2", map: "ODS-3" },
        {
          identity: "rim",
          map: "N/A (not differentiated from NutritionalFormulaType in HL7 v3)",
        },
      ],
    },
    dataPath: "root.enteralFormula.additiveType",
    parentDataPath: "root.enteralFormula",
    basePath: "root.additiveType",
    baseId: "NutritionOrder.enteralFormula.additiveType",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
        code: "lipid",
        display: "Lipid",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
        code: "protein",
        display: "Protein",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
        code: "carbohydrate",
        display: "Carbohydrate",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
        code: "fiber",
        display: "Fiber",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
        code: "water",
        display: "Water",
      },
    ],
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula.additiveProductName",
      path: "NutritionOrder.enteralFormula.additiveProductName",
      short: "Product or brand name of the modular additive",
      definition:
        "The product or brand name of the type of modular component to be added to the formula.",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.enteralFormula.additiveProductName",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "ODS-4" },
        { identity: "rim", map: "N/A" },
      ],
    },
    dataPath: "root.enteralFormula.additiveProductName",
    parentDataPath: "root.enteralFormula",
    basePath: "root.additiveProductName",
    baseId: "NutritionOrder.enteralFormula.additiveProductName",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula.routeofAdministration",
      path: "NutritionOrder.enteralFormula.routeofAdministration",
      short:
        "How the formula should enter the patient's gastrointestinal tract",
      definition:
        "The route or physiological path of administration into the patient's gastrointestinal  tract for purposes of providing the formula feeding, e.g. nasogastric tube.",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.enteralFormula.routeofAdministration",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "EnteralRouteOfAdministration",
          },
        ],
        strength: "extensible",
        description:
          "Codes specifying the route of administration of enteral formula.",
        valueSet: "http://hl7.org/fhir/ValueSet/enteral-route",
      },
      mapping: [
        { identity: "v2", map: "ODS-4" },
        { identity: "rim", map: ".routeCode" },
      ],
    },
    dataPath: "root.enteralFormula.routeofAdministration",
    parentDataPath: "root.enteralFormula",
    basePath: "root.routeofAdministration",
    baseId: "NutritionOrder.enteralFormula.routeofAdministration",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "PO" },
      { code: "EFT" },
      { code: "ENTINSTL" },
      { code: "GT" },
      { code: "NGT" },
      { code: "OGT" },
      { code: "GJT" },
      { code: "JJTINSTL" },
      { code: "OJJ" },
    ],
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula.administration",
      path: "NutritionOrder.enteralFormula.administration",
      short: "Formula feeding instruction as structured data",
      definition:
        "Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours.",
      comment:
        "See implementation notes below for further discussion on how to order continuous vs bolus enteral feeding using this resource.",
      min: 0,
      max: "*",
      base: {
        path: "NutritionOrder.enteralFormula.administration",
        min: 0,
        max: "*",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "ODS-4" },
        {
          identity: "rim",
          map: ".outboundRelationship [typeCode =COMP], target [classCode=SBADM, moodCode=RQO]",
        },
      ],
    },
    dataPath: "root.enteralFormula.administration[0]",
    parentDataPath: "root.enteralFormula",
    basePath: "root.administration",
    baseId: "NutritionOrder.enteralFormula.administration",
    isPrimitive: false,
    childPaths: [
      "root.enteralFormula.administration.schedule",
      "root.enteralFormula.administration.quantity",
      "root.enteralFormula.administration.rate[x]",
    ],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula.administration.quantity",
      path: "NutritionOrder.enteralFormula.administration.quantity",
      short: "The volume of formula to provide",
      definition:
        "The volume of formula to provide to the patient per the specified administration schedule.",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.enteralFormula.administration.quantity",
        min: 0,
        max: "1",
      },
      type: [
        {
          code: "Quantity",
          profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "TQ1-2" },
        { identity: "rim", map: ".doseQuantity" },
      ],
    },
    dataPath: "root.enteralFormula.administration.quantity",
    parentDataPath: "root.enteralFormula.administration[0]",
    basePath: "root.quantity",
    baseId: "NutritionOrder.enteralFormula.administration.quantity",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula.maxVolumeToDeliver",
      path: "NutritionOrder.enteralFormula.maxVolumeToDeliver",
      short: "Upper limit on formula volume per unit of time",
      definition:
        "The maximum total quantity of formula that may be administered to a subject over the period of time, e.g. 1440 mL over 24 hours.",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.enteralFormula.maxVolumeToDeliver",
        min: 0,
        max: "1",
      },
      type: [
        {
          code: "Quantity",
          profile: ["http://hl7.org/fhir/StructureDefinition/SimpleQuantity"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "ODS-4" },
        { identity: "rim", map: ".maxDoseQuantity" },
      ],
    },
    dataPath: "root.enteralFormula.maxVolumeToDeliver",
    parentDataPath: "root.enteralFormula",
    basePath: "root.maxVolumeToDeliver",
    baseId: "NutritionOrder.enteralFormula.maxVolumeToDeliver",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder.enteralFormula.administrationInstruction",
      path: "NutritionOrder.enteralFormula.administrationInstruction",
      short: "Formula feeding instructions expressed as text",
      definition:
        "Free text formula administration, feeding instructions or additional instructions or information.",
      comment:
        "Free text dosage instructions can be used for cases where the instructions are too complex to code.",
      min: 0,
      max: "1",
      base: {
        path: "NutritionOrder.enteralFormula.administrationInstruction",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.supportingInfo" },
        { identity: "v2", map: "ODS-4" },
        { identity: "rim", map: "N/A" },
      ],
    },
    dataPath: "root.enteralFormula.administrationInstruction",
    parentDataPath: "root.enteralFormula",
    basePath: "root.administrationInstruction",
    baseId: "NutritionOrder.enteralFormula.administrationInstruction",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "NutritionOrder",
      path: "NutritionOrder",
      short: "Diet, formula or nutritional supplement request",
      definition:
        "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
      comment: "Referenced by an Order Request (workflow).",
      alias: [
        "Nutrition Order",
        "Diet Order",
        "Diet",
        "Nutritional Supplement",
        "Enteral Nutrition",
      ],
      min: 0,
      max: "*",
      base: { path: "NutritionOrder", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "nor-1",
          severity: "warning",
          human:
            "Nutrition Order SHALL contain either Oral Diet , Supplement, or Enteral Formula class",
          expression:
            "oralDiet.exists() or supplement.exists() or enteralFormula.exists()",
          xpath:
            "exists(f:oralDiet) or exists(f:supplement) or exists(f:enteralFormula)",
          source: "http://hl7.org/fhir/StructureDefinition/NutritionOrder",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Request" },
        { identity: "v2", map: "ORC / ODS" },
        { identity: "rim", map: "SupplyRequest" },
        { identity: "w5", map: "clinical.careprovision" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "NutritionOrder",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
