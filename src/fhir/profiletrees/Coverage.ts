const data = [
  {
    element: {
      id: "Coverage.meta",
      path: "Coverage.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "Coverage.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.implicitRules",
      path: "Coverage.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "Coverage.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.language",
      path: "Coverage.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "Coverage.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "Coverage.contained",
      path: "Coverage.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/Coverage",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "Coverage.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.status",
      path: "Coverage.status",
      short: "active | cancelled | draft | entered-in-error",
      definition: "The status of the resource instance.",
      comment:
        "This element is labeled as a modifier because the status contains the code entered-in-error that marks the coverage as not currently valid.",
      requirements:
        "Need to track the status of the resource as 'draft' resources may undergo further edits while 'active' resources are immutable and may only have their status changed to 'cancelled'.",
      min: 1,
      max: "1",
      base: { path: "Coverage.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labelled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "CoverageStatus",
          },
        ],
        strength: "required",
        description: "A code specifying the state of the resource instance.",
        valueSet: "http://hl7.org/fhir/ValueSet/fm-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Event.status" },
        { identity: "w5", map: "FiveWs.status" },
        { identity: "rim", map: "Act.status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "Coverage.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "cancelled",
        display: "Cancelled",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
    ],
  },
  {
    element: {
      id: "Coverage.type",
      path: "Coverage.type",
      short: "Coverage category such as medical or accident",
      definition:
        "The type of coverage: social program, medical plan, accident coverage (workers compensation, auto), group health or payment by an individual or organization.",
      requirements:
        "The order of application of coverages is dependent on the types of coverage.",
      min: 0,
      max: "1",
      base: { path: "Coverage.type", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "CoverageType",
          },
        ],
        strength: "preferred",
        description:
          "The type of insurance: public health, worker compensation; private accident, auto, private health, etc.) or a direct payment by an individual or organization.",
        valueSet: "http://hl7.org/fhir/ValueSet/coverage-type",
      },
      mapping: [
        { identity: "w5", map: "FiveWs.class" },
        { identity: "v2", map: "IN1-15" },
      ],
    },
    dataPath: "root.type",
    parentDataPath: "root",
    basePath: "root.type",
    baseId: "Coverage.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-selfpay",
        code: "pay",
        display: "Pay",
      },
    ],
  },
  {
    element: {
      id: "Coverage.subscriber",
      path: "Coverage.subscriber",
      short: "Subscriber to the policy",
      definition:
        "The party who has signed-up for or 'owns' the contractual relationship to the policy or to whom the benefit of the policy for services rendered to them or their family is due.",
      comment: "May be self or a parent in the case of dependants.",
      requirements:
        "This is the party who is entitled to the benfits under the policy.",
      min: 0,
      max: "1",
      base: { path: "Coverage.subscriber", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Patient",
            "http://hl7.org/fhir/StructureDefinition/RelatedPerson",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.subject[x]" },
        { identity: "cdanetv4", map: "D01 through D09" },
        {
          identity: "v2",
          map: "IN1-16, 18,  19-name of insured, address, date of birth",
        },
        { identity: "cpha3pharm", map: "C.35" },
        { identity: "w5", map: "FiveWs.subject" },
      ],
    },
    dataPath: "root.subscriber",
    parentDataPath: "root",
    basePath: "root.subscriber",
    baseId: "Coverage.subscriber",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.subscriberId",
      path: "Coverage.subscriberId",
      short: "ID assigned to the subscriber",
      definition: "The insurer assigned ID for the Subscriber.",
      requirements:
        "The insurer requires this identifier on correspondance and claims (digital and otherwise).",
      min: 0,
      max: "1",
      base: { path: "Coverage.subscriberId", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.subject[x]" },
        { identity: "cdanetv4", map: "D01 through D09" },
        {
          identity: "v2",
          map: "IN1-16, 18,  19-name of insured, address, date of birth",
        },
        { identity: "cpha3pharm", map: "C.35" },
        { identity: "w5", map: "FiveWs.subject" },
      ],
    },
    dataPath: "root.subscriberId",
    parentDataPath: "root",
    basePath: "root.subscriberId",
    baseId: "Coverage.subscriberId",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.dependent",
      path: "Coverage.dependent",
      short: "Dependent number",
      definition: "A unique identifier for a dependent under the coverage.",
      comment:
        "Periodically the member number is constructed from the subscriberId and the dependant number.",
      requirements:
        "For some coverages a single identifier is issued to the Subscriber and then a unique dependent number is issued to each beneficiary.",
      min: 0,
      max: "1",
      base: { path: "Coverage.dependent", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "cdanetv4", map: "C17" },
        {
          identity: "v2",
          map: "- No exact HL7 v2 equivalent concept seems to exist;",
        },
      ],
    },
    dataPath: "root.dependent",
    parentDataPath: "root",
    basePath: "root.dependent",
    baseId: "Coverage.dependent",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.relationship",
      path: "Coverage.relationship",
      short: "Beneficiary relationship to the subscriber",
      definition:
        "The relationship of beneficiary (patient) to the subscriber.",
      comment:
        "Typically, an individual uses policies which are theirs (relationship='self') before policies owned by others.",
      requirements:
        "To determine relationship between the patient and the subscriber to determine coordination of benefits.",
      min: 0,
      max: "1",
      base: { path: "Coverage.relationship", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Relationship",
          },
        ],
        strength: "extensible",
        description:
          "The relationship between the Subscriber and the Beneficiary (insured/covered party/patient).",
        valueSet: "http://hl7.org/fhir/ValueSet/subscriber-relationship",
      },
      mapping: [{ identity: "cdanetv4", map: "C03" }],
    },
    dataPath: "root.relationship",
    parentDataPath: "root",
    basePath: "root.relationship",
    baseId: "Coverage.relationship",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/subscriber-relationship",
        code: "child",
        display: "Child",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/subscriber-relationship",
        code: "parent",
        display: "Parent",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/subscriber-relationship",
        code: "spouse",
        display: "Spouse",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/subscriber-relationship",
        code: "common",
        display: "Common Law Spouse",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/subscriber-relationship",
        code: "other",
        display: "Other",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/subscriber-relationship",
        code: "self",
        display: "Self",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/subscriber-relationship",
        code: "injured",
        display: "Injured Party",
      },
    ],
  },
  {
    element: {
      id: "Coverage.payor",
      path: "Coverage.payor",
      short: "Issuer of the policy",
      definition:
        "The program or plan underwriter or payor including both insurance and non-insurance agreements, such as patient-pay agreements.",
      comment:
        "May provide multiple identifiers such as insurance company identifier or business identifier (BIN number).\nFor selfpay it may provide multiple paying persons and/or organizations.",
      requirements:
        "Need to identify the issuer to target for claim processing and for coordination of benefit processing.",
      min: 1,
      max: "*",
      base: { path: "Coverage.payor", min: 1, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Organization",
            "http://hl7.org/fhir/StructureDefinition/Patient",
            "http://hl7.org/fhir/StructureDefinition/RelatedPerson",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.author" },
        { identity: "cdanetv4", map: "A05" },
        { identity: "v2", map: "IN1-3" },
        { identity: "cpha3pharm", map: "C.30" },
      ],
    },
    dataPath: "root.payor[0]",
    parentDataPath: "root",
    basePath: "root.payor",
    baseId: "Coverage.payor",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.class",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Class",
        },
      ],
      path: "Coverage.class",
      short: "Additional coverage classifications",
      definition: "A suite of underwriter specific classifiers.",
      comment:
        "For example may be used to identify a class of coverage or employer group, Policy, Plan.",
      requirements:
        "The codes provided on the health card which identify or confirm the specific policy for the insurer.",
      min: 0,
      max: "*",
      base: { path: "Coverage.class", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.class[0]",
    parentDataPath: "root",
    basePath: "root.class",
    baseId: "Coverage.class",
    isPrimitive: false,
    childPaths: ["root.class.type", "root.class.value", "root.class.name"],
    value: "",
  },
  {
    element: {
      id: "Coverage.class.type",
      path: "Coverage.class.type",
      short: "Type of class such as 'group' or 'plan'",
      definition:
        "The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.",
      requirements:
        "The insurer issued label for a specific health card value.",
      min: 1,
      max: "1",
      base: { path: "Coverage.class.type", min: 1, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "CoverageClass",
          },
        ],
        strength: "extensible",
        description: "The policy classifications, eg. Group, Plan, Class, etc.",
        valueSet: "http://hl7.org/fhir/ValueSet/coverage-class",
      },
    },
    dataPath: "root.class.type",
    parentDataPath: "root.class[0]",
    basePath: "root.type",
    baseId: "Coverage.class.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "group",
        display: "Group",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "subgroup",
        display: "SubGroup",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "plan",
        display: "Plan",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "subplan",
        display: "SubPlan",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "class",
        display: "Class",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "subclass",
        display: "SubClass",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "sequence",
        display: "Sequence",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "rxbin",
        display: "RX BIN",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "rxpcn",
        display: "RX PCN",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "rxid",
        display: "RX Id",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
        code: "rxgroup",
        display: "RX Group",
      },
    ],
  },
  {
    element: {
      id: "Coverage.class.value",
      path: "Coverage.class.value",
      short: "Value associated with the type",
      definition:
        "The alphanumeric string value associated with the insurer issued label.",
      comment: "For example, the Group or Plan number.",
      requirements:
        "The insurer issued label and value are necessary to identify the specific policy.",
      min: 1,
      max: "1",
      base: { path: "Coverage.class.value", min: 1, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "cdanetv4", map: "C11 (Division,Section)" },
        { identity: "v2", map: "IN1-8" },
        { identity: "cpha3pharm", map: "C.31" },
      ],
    },
    dataPath: "root.class.value",
    parentDataPath: "root.class[0]",
    basePath: "root.value",
    baseId: "Coverage.class.value",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.class.name",
      path: "Coverage.class.name",
      short: "Human readable description of the type and value",
      definition: "A short description for the class.",
      requirements:
        "Used to provide a meaningful description in correspondence to the patient.",
      min: 0,
      max: "1",
      base: { path: "Coverage.class.name", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "cdanetv4", map: "C11 (Division,Section)" },
        { identity: "v2", map: "IN1-8" },
        { identity: "cpha3pharm", map: "C.31" },
      ],
    },
    dataPath: "root.class.name",
    parentDataPath: "root.class[0]",
    basePath: "root.name",
    baseId: "Coverage.class.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.order",
      path: "Coverage.order",
      short: "Relative order of the coverage",
      definition:
        "The order of applicability of this coverage relative to other coverages which are currently in force. Note, there may be gaps in the numbering and this does not imply primary, secondary etc. as the specific positioning of coverages depends upon the episode of care.",
      requirements: "Used in managing the coordination of benefits.",
      min: 0,
      max: "1",
      base: { path: "Coverage.order", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        {
          identity: "v2",
          map: "- No exact HL7 v2 equivalent concept seems to exist;",
        },
      ],
    },
    dataPath: "root.order",
    parentDataPath: "root",
    basePath: "root.order",
    baseId: "Coverage.order",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.network",
      path: "Coverage.network",
      short: "Insurer network",
      definition:
        "The insurer-specific identifier for the insurer-defined network of providers to which the beneficiary may seek treatment which will be covered at the 'in-network' rate, otherwise 'out of network' terms and conditions apply.",
      requirements: "Used in referral for treatment and in claims processing.",
      min: 0,
      max: "1",
      base: { path: "Coverage.network", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "cdanetv4", map: "D10" }],
    },
    dataPath: "root.network",
    parentDataPath: "root",
    basePath: "root.network",
    baseId: "Coverage.network",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage.costToBeneficiary",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "CostToBeneficiary",
        },
      ],
      path: "Coverage.costToBeneficiary",
      short: "Patient payments for services/products",
      definition:
        "A suite of codes indicating the cost category and associated amount which have been detailed in the policy and may have been  included on the health card.",
      comment:
        "For example by knowing the patient visit co-pay, the provider can collect the amount prior to undertaking treatment.",
      requirements:
        "Required by providers to manage financial transaction with the patient.",
      alias: ["CoPay", "Deductible", "Exceptions"],
      min: 0,
      max: "*",
      base: { path: "Coverage.costToBeneficiary", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.costToBeneficiary[0]",
    parentDataPath: "root",
    basePath: "root.costToBeneficiary",
    baseId: "Coverage.costToBeneficiary",
    isPrimitive: false,
    childPaths: [
      "root.costToBeneficiary.type",
      "root.costToBeneficiary.value[x]",
      "root.costToBeneficiary.exception[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "Coverage.costToBeneficiary.type",
      path: "Coverage.costToBeneficiary.type",
      short: "Cost category",
      definition:
        "The category of patient centric costs associated with treatment.",
      comment:
        "For example visit, specialist visits, emergency, inpatient care, etc.",
      requirements:
        "Needed to identify the category associated with the amount for the patient.",
      min: 0,
      max: "1",
      base: { path: "Coverage.costToBeneficiary.type", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "CopayTypes",
          },
        ],
        strength: "extensible",
        description:
          "The types of services to which patient copayments are specified.",
        valueSet: "http://hl7.org/fhir/ValueSet/coverage-copay-type",
      },
    },
    dataPath: "root.costToBeneficiary.type",
    parentDataPath: "root.costToBeneficiary[0]",
    basePath: "root.type",
    baseId: "Coverage.costToBeneficiary.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "gpvisit",
        display: "GP Office Visit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "spvisit",
        display: "Specialist Office Visit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "emergency",
        display: "Emergency",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "inpthosp",
        display: "Inpatient Hospital",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "televisit",
        display: "Tele-visit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "urgentcare",
        display: "Urgent Care",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "copaypct",
        display: "Copay Percentage",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "copay",
        display: "Copay Amount",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "deductible",
        display: "Deductible",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/coverage-copay-type",
        code: "maxoutofpocket",
        display: "Maximum out of pocket",
      },
    ],
  },
  {
    element: {
      id: "Coverage.costToBeneficiary.exception",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Exemption",
        },
      ],
      path: "Coverage.costToBeneficiary.exception",
      short: "Exceptions for patient payments",
      definition:
        "A suite of codes indicating exceptions or reductions to patient costs and their effective periods.",
      requirements:
        "Required by providers to manage financial transaction with the patient.",
      min: 0,
      max: "*",
      base: { path: "Coverage.costToBeneficiary.exception", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.costToBeneficiary.exception[0]",
    parentDataPath: "root.costToBeneficiary[0]",
    basePath: "root.exception",
    baseId: "Coverage.costToBeneficiary.exception",
    isPrimitive: false,
    childPaths: [
      "root.costToBeneficiary.exception.type",
      "root.costToBeneficiary.exception.period",
    ],
    value: "",
  },
  {
    element: {
      id: "Coverage.costToBeneficiary.exception.type",
      path: "Coverage.costToBeneficiary.exception.type",
      short: "Exception category",
      definition: "The code for the specific exception.",
      requirements:
        "Needed to identify the exception associated with the amount for the patient.",
      min: 1,
      max: "1",
      base: {
        path: "Coverage.costToBeneficiary.exception.type",
        min: 1,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "CoverageFinancialException",
          },
        ],
        strength: "example",
        description:
          "The types of exceptions from the part or full value of financial obligations such as copays.",
        valueSet: "http://hl7.org/fhir/ValueSet/coverage-financial-exception",
      },
    },
    dataPath: "root.costToBeneficiary.exception.type",
    parentDataPath: "root.costToBeneficiary.exception[0]",
    basePath: "root.type",
    baseId: "Coverage.costToBeneficiary.exception.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system:
          "http://terminology.hl7.org/CodeSystem/ex-coverage-financial-exception",
        code: "retired",
        display: "Retired",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/ex-coverage-financial-exception",
        code: "foster",
        display: "Foster child",
      },
    ],
  },
  {
    element: {
      id: "Coverage.subrogation",
      path: "Coverage.subrogation",
      short: "Reimbursement to insurer",
      definition:
        "When 'subrogation=true' this insurance instance has been included not for adjudication but to provide insurers with the details to recover costs.",
      comment:
        "Typically, automotive and worker's compensation policies would be flagged with 'subrogation=true' to enable healthcare payors to collect against accident claims.",
      requirements: "See definition for when to be used.",
      min: 0,
      max: "1",
      base: { path: "Coverage.subrogation", min: 0, max: "1" },
      type: [{ code: "boolean" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.subrogation",
    parentDataPath: "root",
    basePath: "root.subrogation",
    baseId: "Coverage.subrogation",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Coverage",
      path: "Coverage",
      short: "Insurance or medical plan or a payment agreement",
      definition:
        "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
      comment:
        "The Coverage resource contains the insurance card level information, which is customary to provide on claims and other communications between providers and insurers.",
      min: 0,
      max: "*",
      base: { path: "Coverage", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Event" },
        { identity: "rim", map: "Coverage" },
        { identity: "w5", map: "financial.support" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "Coverage",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
