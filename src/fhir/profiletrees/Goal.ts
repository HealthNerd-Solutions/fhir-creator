const data = [
  {
    element: {
      id: "Goal.meta",
      path: "Goal.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "Goal.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Goal.implicitRules",
      path: "Goal.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "Goal.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Goal.language",
      path: "Goal.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "Goal.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "Goal.contained",
      path: "Goal.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/Goal",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "Goal.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Goal.lifecycleStatus",
      path: "Goal.lifecycleStatus",
      short:
        "proposed | planned | accepted | active | on-hold | completed | cancelled | entered-in-error | rejected",
      definition: "The state of the goal throughout its lifecycle.",
      comment:
        "This element is labeled as a modifier because the lifecycleStatus contains codes that mark the resource as not currently valid.",
      requirements: "Allows knowing whether goal needs to be further tracked.",
      min: 1,
      max: "1",
      base: { path: "Goal.lifecycleStatus", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labelled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "GoalLifecycleStatus",
          },
        ],
        strength: "required",
        description:
          "Codes that reflect the current state of a goal and whether the goal is still being targeted.",
        valueSet: "http://hl7.org/fhir/ValueSet/goal-status|4.3.0",
      },
      mapping: [
        { identity: "w5", map: "FiveWs.status" },
        { identity: "v2", map: "GOL-18-goal life cycle status" },
        {
          identity: "rim",
          map: ".statusCode in-progress = active (classCode = OBJ) cancelled = aborted",
        },
      ],
    },
    dataPath: "root.lifecycleStatus",
    parentDataPath: "root",
    basePath: "root.lifecycleStatus",
    baseId: "Goal.lifecycleStatus",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/goal-status",
        code: "proposed",
        display: "Proposed",
      },
      {
        system: "http://hl7.org/fhir/goal-status",
        code: "planned",
        display: "Planned",
      },
      {
        system: "http://hl7.org/fhir/goal-status",
        code: "accepted",
        display: "Accepted",
      },
      {
        system: "http://hl7.org/fhir/goal-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/goal-status",
        code: "on-hold",
        display: "On Hold",
      },
      {
        system: "http://hl7.org/fhir/goal-status",
        code: "completed",
        display: "Completed",
      },
      {
        system: "http://hl7.org/fhir/goal-status",
        code: "cancelled",
        display: "Cancelled",
      },
      {
        system: "http://hl7.org/fhir/goal-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
      {
        system: "http://hl7.org/fhir/goal-status",
        code: "rejected",
        display: "Rejected",
      },
    ],
  },
  {
    element: {
      id: "Goal.achievementStatus",
      path: "Goal.achievementStatus",
      short:
        "in-progress | improving | worsening | no-change | achieved | sustaining | not-achieved | no-progress | not-attainable",
      definition:
        "Describes the progression, or lack thereof, towards the goal against the target.",
      min: 0,
      max: "1",
      base: { path: "Goal.achievementStatus", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "GoalAchievementStatus",
          },
        ],
        strength: "preferred",
        description:
          "Indicates the progression, or lack thereof, towards the goal against the target.",
        valueSet: "http://hl7.org/fhir/ValueSet/goal-achievement",
      },
      mapping: [
        {
          identity: "rim",
          map: ".statusCode achieved = complete sustaining = active",
        },
      ],
    },
    dataPath: "root.achievementStatus",
    parentDataPath: "root",
    basePath: "root.achievementStatus",
    baseId: "Goal.achievementStatus",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-achievement",
        code: "in-progress",
        display: "In Progress",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-achievement",
        code: "improving",
        display: "Improving",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-achievement",
        code: "worsening",
        display: "Worsening",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-achievement",
        code: "no-change",
        display: "No Change",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-achievement",
        code: "achieved",
        display: "Achieved",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-achievement",
        code: "sustaining",
        display: "Sustaining",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-achievement",
        code: "not-achieved",
        display: "Not Achieved",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-achievement",
        code: "no-progress",
        display: "No Progress",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-achievement",
        code: "not-attainable",
        display: "Not Attainable",
      },
    ],
  },
  {
    element: {
      id: "Goal.category",
      path: "Goal.category",
      short: "E.g. Treatment, dietary, behavioral, etc.",
      definition: "Indicates a category the goal falls within.",
      requirements: "Allows goals to be filtered and sorted.",
      min: 0,
      max: "*",
      base: { path: "Goal.category", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "GoalCategory",
          },
        ],
        strength: "example",
        description: "Codes for grouping and sorting goals.",
        valueSet: "http://hl7.org/fhir/ValueSet/goal-category",
      },
      mapping: [{ identity: "w5", map: "FiveWs.class" }],
    },
    dataPath: "root.category[0]",
    parentDataPath: "root",
    basePath: "root.category",
    baseId: "Goal.category",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
        code: "dietary",
        display: "Dietary",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
        code: "safety",
        display: "Safety",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
        code: "behavioral",
        display: "Behavioral",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
        code: "nursing",
        display: "Nursing",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
        code: "physiotherapy",
        display: "Physiotherapy",
      },
    ],
  },
  {
    element: {
      id: "Goal.priority",
      path: "Goal.priority",
      short: "high-priority | medium-priority | low-priority",
      definition:
        "Identifies the mutually agreed level of importance associated with reaching/sustaining the goal.",
      comment:
        "Extensions are available to track priorities as established by each participant (i.e. Priority from the patient's perspective, different practitioners' perspectives, family member's perspectives)\r\rThe ordinal extension on Coding can be used to convey a numerically comparable ranking to priority.  (Keep in mind that different coding systems may use a \"low value=important\".",
      requirements: "Used for sorting and presenting goals.",
      min: 0,
      max: "1",
      base: { path: "Goal.priority", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "GoalPriority",
          },
        ],
        strength: "preferred",
        description: "The level of importance associated with a goal.",
        valueSet: "http://hl7.org/fhir/ValueSet/goal-priority",
      },
      mapping: [
        { identity: "w5", map: "FiveWs.grade" },
        { identity: "rim", map: ".priorityCode" },
      ],
    },
    dataPath: "root.priority",
    parentDataPath: "root",
    basePath: "root.priority",
    baseId: "Goal.priority",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-priority",
        code: "high-priority",
        display: "High Priority",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-priority",
        code: "medium-priority",
        display: "Medium Priority",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/goal-priority",
        code: "low-priority",
        display: "Low Priority",
      },
    ],
  },
  {
    element: {
      id: "Goal.subject",
      path: "Goal.subject",
      short: "Who this goal is intended for",
      definition:
        "Identifies the patient, group or organization for whom the goal is being established.",
      requirements: "Subject is optional to support annonymized reporting.",
      min: 1,
      max: "1",
      base: { path: "Goal.subject", min: 1, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Patient",
            "http://hl7.org/fhir/StructureDefinition/Group",
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.subject[x]" },
        { identity: "v2", map: "PID-3-patient ID list" },
        {
          identity: "rim",
          map: ".participation[typeCode=PAT].role[classCode=PAT]",
        },
        { identity: "w5", map: "FiveWs.subject" },
      ],
    },
    dataPath: "root.subject",
    parentDataPath: "root",
    basePath: "root.subject",
    baseId: "Goal.subject",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Goal.start[x]",
      path: "Goal.start[x]",
      short: "When goal pursuit begins",
      definition:
        "The date or event after which the goal should begin being pursued.",
      requirements:
        "Goals can be established prior to there being an intention to start pursuing them; e.g. Goals for post-surgical recovery established prior to surgery.",
      min: 0,
      max: "1",
      base: { path: "Goal.start[x]", min: 0, max: "1" },
      type: [{ code: "date" }, { code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "GoalStartEvent",
          },
        ],
        strength: "example",
        description:
          "Codes describing events that can trigger the initiation of a goal.",
        valueSet: "http://hl7.org/fhir/ValueSet/goal-start-event",
      },
      mapping: [{ identity: "w5", map: "FiveWs.planned" }],
    },
    dataPath: "root.start[x]",
    parentDataPath: "root",
    basePath: "root.start[x]",
    baseId: "Goal.start[x]",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "32485007", display: "Admission to hospital" },
      { code: "308283009", display: "Discharge from hospital" },
      { code: "442137000", display: "Completion time of procedure" },
      { code: "386216000", display: "Childbirth" },
    ],
  },
  {
    element: {
      id: "Goal.target",
      path: "Goal.target",
      short: "Target outcome for the goal",
      definition: "Indicates what should be done by when.",
      comment:
        "When multiple targets are present for a single goal instance, all targets must be met for the overall goal to be met.",
      requirements:
        "Allows the progress of the goal to be monitored against an observation or due date.  Target is 0..* to support Observations with multiple components, such as blood pressure goals with both a systolic and diastolic target.",
      min: 0,
      max: "*",
      base: { path: "Goal.target", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      condition: ["gol-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
        {
          key: "gol-1",
          severity: "error",
          human:
            "Goal.target.measure is required if Goal.target.detail is populated",
          expression:
            "(detail.exists() and measure.exists()) or detail.exists().not()",
          xpath:
            "(exists(f:*[starts-with(local-name(.), 'detail')]) and exists(f:measure)) or not(exists(f:*[starts-with(local-name(.), 'detail')]))",
          source: "http://hl7.org/fhir/StructureDefinition/Goal",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.target[0]",
    parentDataPath: "root",
    basePath: "root.target",
    baseId: "Goal.target",
    isPrimitive: false,
    childPaths: [
      "root.target.measure",
      "root.target.detail[x]",
      "root.target.due[x]",
    ],
    value: "",
  },
  {
    element: {
      id: "Goal.target.detail[x]",
      path: "Goal.target.detail[x]",
      short: "The target value to be achieved",
      definition:
        "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
      comment:
        "A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Goal.target.measure defines a coded value.",
      min: 0,
      max: "1",
      base: { path: "Goal.target.detail[x]", min: 0, max: "1" },
      type: [
        { code: "Quantity" },
        { code: "Range" },
        { code: "CodeableConcept" },
        { code: "string" },
        { code: "boolean" },
        { code: "integer" },
        { code: "Ratio" },
      ],
      condition: ["gol-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "GoalTargetDetail",
          },
        ],
        strength: "example",
        description:
          "Codes to identify the target value of the focus to be achieved to signify the fulfillment of the goal.",
      },
    },
    dataPath: "root.target.detail[x]",
    parentDataPath: "root.target[0]",
    basePath: "root.detail[x]",
    baseId: "Goal.target.detail[x]",
    isPrimitive: false,
    childPaths: [],
    multiTypeType: "Quantity",
    value: "",
  },
  {
    element: {
      id: "Goal.statusDate",
      path: "Goal.statusDate",
      short: "When goal status took effect",
      definition:
        "Identifies when the current status.  I.e. When initially created, when achieved, when cancelled, etc.",
      comment: "To see the date for past statuses, query history.",
      min: 0,
      max: "1",
      base: { path: "Goal.statusDate", min: 0, max: "1" },
      type: [{ code: "date" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "w5", map: "FiveWs.recorded" }],
    },
    dataPath: "root.statusDate",
    parentDataPath: "root",
    basePath: "root.statusDate",
    baseId: "Goal.statusDate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Goal.statusReason",
      path: "Goal.statusReason",
      short: "Reason for current status",
      definition: "Captures the reason for the current status.",
      comment:
        "This will typically be captured for statuses such as rejected, on-hold or cancelled, but could be present for others.",
      min: 0,
      max: "1",
      base: { path: "Goal.statusReason", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.statusReason",
    parentDataPath: "root",
    basePath: "root.statusReason",
    baseId: "Goal.statusReason",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Goal.addresses",
      path: "Goal.addresses",
      short: "Issues addressed by this goal",
      definition:
        "The identified conditions and other health record elements that are intended to be addressed by the goal.",
      requirements:
        "Allows specific goals to explicitly linked to the concerns they're dealing with - makes the goal more understandable.",
      min: 0,
      max: "*",
      base: { path: "Goal.addresses", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Condition",
            "http://hl7.org/fhir/StructureDefinition/Observation",
            "http://hl7.org/fhir/StructureDefinition/MedicationStatement",
            "http://hl7.org/fhir/StructureDefinition/NutritionOrder",
            "http://hl7.org/fhir/StructureDefinition/ServiceRequest",
            "http://hl7.org/fhir/StructureDefinition/RiskAssessment",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.why[x]" },
        {
          identity: "rim",
          map: ".outboundRelationship[typeCode=SUBJ].target[classCode=CONC]",
        },
      ],
    },
    dataPath: "root.addresses[0]",
    parentDataPath: "root",
    basePath: "root.addresses",
    baseId: "Goal.addresses",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Goal.outcomeCode",
      path: "Goal.outcomeCode",
      short: "What result was achieved regarding the goal?",
      definition:
        "Identifies the change (or lack of change) at the point when the status of the goal is assessed.",
      comment: "Note that this should not duplicate the goal status.",
      requirements: "Outcome tracking is a key aspect of care planning.",
      min: 0,
      max: "*",
      base: { path: "Goal.outcomeCode", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "GoalOutcome",
          },
        ],
        strength: "example",
        description:
          'The result of the goal; e.g. "25% increase in shoulder mobility", "Anxiety reduced to moderate levels".  "15 kg weight loss sustained over 6 months".',
        valueSet: "http://hl7.org/fhir/ValueSet/clinical-findings",
      },
    },
    dataPath: "root.outcomeCode[0]",
    parentDataPath: "root",
    basePath: "root.outcomeCode",
    baseId: "Goal.outcomeCode",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Goal",
      path: "Goal",
      short:
        "Describes the intended objective(s) for a patient, group or organization",
      definition:
        "Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.",
      comment:
        "Goal can be achieving a particular change or merely maintaining a current state or even slowing a decline.",
      min: 0,
      max: "*",
      base: { path: "Goal", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "v2", map: "GOL.1" },
        { identity: "rim", map: ".outboundRelationship[typeCode<=OBJ]." },
        { identity: "w5", map: "clinical.careprovision" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "Goal",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
