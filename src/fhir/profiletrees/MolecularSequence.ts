const data = [
  {
    element: {
      id: "MolecularSequence.meta",
      path: "MolecularSequence.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "MolecularSequence.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.implicitRules",
      path: "MolecularSequence.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "MolecularSequence.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.language",
      path: "MolecularSequence.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "MolecularSequence.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "MolecularSequence.contained",
      path: "MolecularSequence.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/MolecularSequence",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "MolecularSequence.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.type",
      path: "MolecularSequence.type",
      short: "aa | dna | rna",
      definition: "Amino Acid Sequence/ DNA Sequence / RNA Sequence.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.type", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "sequenceType",
          },
        ],
        strength: "required",
        description: "Type if a sequence -- DNA, RNA, or amino acid sequence.",
        valueSet: "http://hl7.org/fhir/ValueSet/sequence-type|4.3.0",
      },
    },
    dataPath: "root.type",
    parentDataPath: "root",
    basePath: "root.type",
    baseId: "MolecularSequence.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/sequence-type",
        code: "aa",
        display: "AA Sequence",
      },
      {
        system: "http://hl7.org/fhir/sequence-type",
        code: "dna",
        display: "DNA Sequence",
      },
      {
        system: "http://hl7.org/fhir/sequence-type",
        code: "rna",
        display: "RNA Sequence",
      },
    ],
  },
  {
    element: {
      id: "MolecularSequence.coordinateSystem",
      path: "MolecularSequence.coordinateSystem",
      short:
        "Base number of coordinate system (0 for 0-based numbering or coordinates, inclusive start, exclusive end, 1 for 1-based numbering, inclusive start, inclusive end)",
      definition:
        "Whether the sequence is numbered starting at 0 (0-based numbering or coordinates, inclusive start, exclusive end) or starting at 1 (1-based numbering, inclusive start and inclusive end).",
      min: 1,
      max: "1",
      base: { path: "MolecularSequence.coordinateSystem", min: 1, max: "1" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.coordinateSystem",
    parentDataPath: "root",
    basePath: "root.coordinateSystem",
    baseId: "MolecularSequence.coordinateSystem",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.specimen",
      path: "MolecularSequence.specimen",
      short: "Specimen used for sequencing",
      definition: "Specimen used for sequencing.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.specimen", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Specimen"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.specimen",
    parentDataPath: "root",
    basePath: "root.specimen",
    baseId: "MolecularSequence.specimen",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.performer",
      path: "MolecularSequence.performer",
      short: "Who should be responsible for test result",
      definition:
        "The organization or lab that should be responsible for this result.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.performer", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.performer",
    parentDataPath: "root",
    basePath: "root.performer",
    baseId: "MolecularSequence.performer",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.referenceSeq",
      path: "MolecularSequence.referenceSeq",
      short: "A sequence used as reference",
      definition:
        "A sequence that is used as a reference to describe variants that are present in a sequence analyzed.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.referenceSeq", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
        {
          key: "msq-5",
          severity: "error",
          human:
            "GenomeBuild and chromosome must be both contained if either one of them is contained",
          expression:
            "(chromosome.empty() and genomeBuild.empty()) or (chromosome.exists() and genomeBuild.exists())",
          xpath:
            "(exists(f:chromosome) and exists(f:genomeBuild)) or (not(exists(f:chromosome)) and not(exists(f:genomeBuild)))",
          source: "http://hl7.org/fhir/StructureDefinition/MolecularSequence",
        },
        {
          key: "msq-6",
          severity: "error",
          human:
            "Have and only have one of the following elements in referenceSeq : 1. genomeBuild ; 2 referenceSeqId; 3. referenceSeqPointer;  4. referenceSeqString;",
          expression:
            "(genomeBuild.count()+referenceSeqId.count()+ referenceSeqPointer.count()+ referenceSeqString.count()) = 1",
          xpath:
            "count(f:genomeBuild)+count(f:referenceSeqId)+count(f:referenceSeqPointer)+count(f:referenceSeqString)=1",
          source: "http://hl7.org/fhir/StructureDefinition/MolecularSequence",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.referenceSeq",
    parentDataPath: "root",
    basePath: "root.referenceSeq",
    baseId: "MolecularSequence.referenceSeq",
    isPrimitive: false,
    childPaths: [
      "root.referenceSeq.chromosome",
      "root.referenceSeq.genomeBuild",
      "root.referenceSeq.orientation",
      "root.referenceSeq.referenceSeqId",
      "root.referenceSeq.referenceSeqPointer",
      "root.referenceSeq.referenceSeqString",
      "root.referenceSeq.strand",
      "root.referenceSeq.windowStart",
      "root.referenceSeq.windowEnd",
    ],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.referenceSeq.chromosome",
      path: "MolecularSequence.referenceSeq.chromosome",
      short: "Chromosome containing genetic finding",
      definition:
        "Structural unit composed of a nucleic acid molecule which controls its own replication through the interaction of specific proteins at one or more origins of replication ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340)).",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.referenceSeq.chromosome",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "chromosome-human",
          },
        ],
        strength: "example",
        description: "The chromosome containing the genetic finding",
        valueSet: "http://hl7.org/fhir/ValueSet/chromosome-human",
      },
    },
    dataPath: "root.referenceSeq.chromosome",
    parentDataPath: "root.referenceSeq",
    basePath: "root.chromosome",
    baseId: "MolecularSequence.referenceSeq.chromosome",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "1",
        display: "chromosome 1",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "2",
        display: "chromosome 2",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "3",
        display: "chromosome 3",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "4",
        display: "chromosome 4",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "5",
        display: "chromosome 5",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "6",
        display: "chromosome 6",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "7",
        display: "chromosome 7",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "8",
        display: "chromosome 8",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "9",
        display: "chromosome 9",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "10",
        display: "chromosome 10",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "11",
        display: "chromosome 11",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "12",
        display: "chromosome 12",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "13",
        display: "chromosome 13",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "14",
        display: "chromosome 14",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "15",
        display: "chromosome 15",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "16",
        display: "chromosome 16",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "17",
        display: "chromosome 17",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "18",
        display: "chromosome 18",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "19",
        display: "chromosome 19",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "20",
        display: "chromosome 20",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "21",
        display: "chromosome 21",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "22",
        display: "chromosome 22",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "X",
        display: "chromosome X",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/chromosome-human",
        code: "Y",
        display: "chromosome Y",
      },
    ],
  },
  {
    element: {
      id: "MolecularSequence.referenceSeq.genomeBuild",
      path: "MolecularSequence.referenceSeq.genomeBuild",
      short:
        "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'",
      definition:
        "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'.  Version number must be included if a versioned release of a primary build was used.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.referenceSeq.genomeBuild",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.referenceSeq.genomeBuild",
    parentDataPath: "root.referenceSeq",
    basePath: "root.genomeBuild",
    baseId: "MolecularSequence.referenceSeq.genomeBuild",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.referenceSeq.orientation",
      path: "MolecularSequence.referenceSeq.orientation",
      short: "sense | antisense",
      definition:
        'A relative reference to a DNA strand based on gene orientation. The strand that contains the open reading frame of the gene is the "sense" strand, and the opposite complementary strand is the "antisense" strand.',
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.referenceSeq.orientation",
        min: 0,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "orientationType",
          },
        ],
        strength: "required",
        description: "Type for orientation",
        valueSet: "http://hl7.org/fhir/ValueSet/orientation-type|4.3.0",
      },
    },
    dataPath: "root.referenceSeq.orientation",
    parentDataPath: "root.referenceSeq",
    basePath: "root.orientation",
    baseId: "MolecularSequence.referenceSeq.orientation",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/orientation-type",
        code: "sense",
        display: "Sense orientation of referenceSeq",
      },
      {
        system: "http://hl7.org/fhir/orientation-type",
        code: "antisense",
        display: "Antisense orientation of referenceSeq",
      },
    ],
  },
  {
    element: {
      id: "MolecularSequence.referenceSeq.referenceSeqPointer",
      path: "MolecularSequence.referenceSeq.referenceSeqPointer",
      short:
        "A pointer to another MolecularSequence entity as reference sequence",
      definition:
        "A pointer to another MolecularSequence entity as reference sequence.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.referenceSeq.referenceSeqPointer",
        min: 0,
        max: "1",
      },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/MolecularSequence",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.referenceSeq.referenceSeqPointer",
    parentDataPath: "root.referenceSeq",
    basePath: "root.referenceSeqPointer",
    baseId: "MolecularSequence.referenceSeq.referenceSeqPointer",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.referenceSeq.referenceSeqString",
      path: "MolecularSequence.referenceSeq.referenceSeqString",
      short: "A string to represent reference sequence",
      definition: 'A string like "ACGT".',
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.referenceSeq.referenceSeqString",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.referenceSeq.referenceSeqString",
    parentDataPath: "root.referenceSeq",
    basePath: "root.referenceSeqString",
    baseId: "MolecularSequence.referenceSeq.referenceSeqString",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.referenceSeq.strand",
      path: "MolecularSequence.referenceSeq.strand",
      short: "watson | crick",
      definition:
        "An absolute reference to a strand. The Watson strand is the strand whose 5'-end is on the short arm of the chromosome, and the Crick strand as the one whose 5'-end is on the long arm.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.referenceSeq.strand", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "strandType",
          },
        ],
        strength: "required",
        description: "Type for strand",
        valueSet: "http://hl7.org/fhir/ValueSet/strand-type|4.3.0",
      },
    },
    dataPath: "root.referenceSeq.strand",
    parentDataPath: "root.referenceSeq",
    basePath: "root.strand",
    baseId: "MolecularSequence.referenceSeq.strand",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/strand-type",
        code: "watson",
        display: "Watson strand of referenceSeq",
      },
      {
        system: "http://hl7.org/fhir/strand-type",
        code: "crick",
        display: "Crick strand of referenceSeq",
      },
    ],
  },
  {
    element: {
      id: "MolecularSequence.referenceSeq.windowStart",
      path: "MolecularSequence.referenceSeq.windowStart",
      short: "Start position of the window on the  reference sequence",
      definition:
        "Start position of the window on the reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.referenceSeq.windowStart",
        min: 0,
        max: "1",
      },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.referenceSeq.windowStart",
    parentDataPath: "root.referenceSeq",
    basePath: "root.windowStart",
    baseId: "MolecularSequence.referenceSeq.windowStart",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.referenceSeq.windowEnd",
      path: "MolecularSequence.referenceSeq.windowEnd",
      short: "End position of the window on the reference sequence",
      definition:
        "End position of the window on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.referenceSeq.windowEnd",
        min: 0,
        max: "1",
      },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.referenceSeq.windowEnd",
    parentDataPath: "root.referenceSeq",
    basePath: "root.windowEnd",
    baseId: "MolecularSequence.referenceSeq.windowEnd",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.variant",
      path: "MolecularSequence.variant",
      short: "Variant in sequence",
      definition:
        "The definition of variant here originates from Sequence ontology ([variant_of](http://www.sequenceontology.org/browser/current_svn/term/variant_of)). This element can represent amino acid or nucleic sequence change(including insertion,deletion,SNP,etc.)  It can represent some complex mutation or segment variation with the assist of CIGAR string.",
      min: 0,
      max: "*",
      base: { path: "MolecularSequence.variant", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.variant[0]",
    parentDataPath: "root",
    basePath: "root.variant",
    baseId: "MolecularSequence.variant",
    isPrimitive: false,
    childPaths: [
      "root.variant.start",
      "root.variant.end",
      "root.variant.observedAllele",
      "root.variant.referenceAllele",
      "root.variant.cigar",
      "root.variant.variantPointer",
    ],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.variant.start",
      path: "MolecularSequence.variant.start",
      short: "Start position of the variant on the  reference sequence",
      definition:
        "Start position of the variant on the  reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.variant.start", min: 0, max: "1" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.variant.start",
    parentDataPath: "root.variant[0]",
    basePath: "root.start",
    baseId: "MolecularSequence.variant.start",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.variant.end",
      path: "MolecularSequence.variant.end",
      short: "End position of the variant on the reference sequence",
      definition:
        "End position of the variant on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.variant.end", min: 0, max: "1" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.variant.end",
    parentDataPath: "root.variant[0]",
    basePath: "root.end",
    baseId: "MolecularSequence.variant.end",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.variant.observedAllele",
      path: "MolecularSequence.variant.observedAllele",
      short: "Allele that was observed",
      definition:
        "An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).  Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the observed  sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.variant.observedAllele",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.variant.observedAllele",
    parentDataPath: "root.variant[0]",
    basePath: "root.observedAllele",
    baseId: "MolecularSequence.variant.observedAllele",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.variant.referenceAllele",
      path: "MolecularSequence.variant.referenceAllele",
      short: "Allele in the reference sequence",
      definition:
        "An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)). Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the reference sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.variant.referenceAllele",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.variant.referenceAllele",
    parentDataPath: "root.variant[0]",
    basePath: "root.referenceAllele",
    baseId: "MolecularSequence.variant.referenceAllele",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.variant.cigar",
      path: "MolecularSequence.variant.cigar",
      short:
        "Extended CIGAR string for aligning the sequence with reference bases",
      definition:
        "Extended CIGAR string for aligning the sequence with reference bases. See detailed documentation [here](http://support.illumina.com/help/SequencingAnalysisWorkflow/Content/Vault/Informatics/Sequencing_Analysis/CASAVA/swSEQ_mCA_ExtendedCIGARFormat.htm).",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.variant.cigar", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.variant.cigar",
    parentDataPath: "root.variant[0]",
    basePath: "root.cigar",
    baseId: "MolecularSequence.variant.cigar",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.observedSeq",
      path: "MolecularSequence.observedSeq",
      short: "Sequence that was observed",
      definition:
        "Sequence that was observed. It is the result marked by referenceSeq along with variant records on referenceSeq. This shall start from referenceSeq.windowStart and end by referenceSeq.windowEnd.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.observedSeq", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.observedSeq",
    parentDataPath: "root",
    basePath: "root.observedSeq",
    baseId: "MolecularSequence.observedSeq",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality",
      path: "MolecularSequence.quality",
      short: "An set of value as quality of sequence",
      definition:
        "An experimental feature attribute that defines the quality of the feature in a quantitative way, such as a phred quality score ([SO:0001686](http://www.sequenceontology.org/browser/current_svn/term/SO:0001686)).",
      min: 0,
      max: "*",
      base: { path: "MolecularSequence.quality", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality[0]",
    parentDataPath: "root",
    basePath: "root.quality",
    baseId: "MolecularSequence.quality",
    isPrimitive: false,
    childPaths: [
      "root.quality.type",
      "root.quality.standardSequence",
      "root.quality.start",
      "root.quality.end",
      "root.quality.score",
      "root.quality.method",
      "root.quality.truthTP",
      "root.quality.queryTP",
      "root.quality.truthFN",
      "root.quality.queryFP",
      "root.quality.gtFP",
      "root.quality.precision",
      "root.quality.recall",
      "root.quality.fScore",
      "root.quality.roc",
    ],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.type",
      path: "MolecularSequence.quality.type",
      short: "indel | snp | unknown",
      definition: "INDEL / SNP / Undefined variant.",
      min: 1,
      max: "1",
      base: { path: "MolecularSequence.quality.type", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "qualityType",
          },
        ],
        strength: "required",
        description: "Type for quality",
        valueSet: "http://hl7.org/fhir/ValueSet/quality-type|4.3.0",
      },
    },
    dataPath: "root.quality.type",
    parentDataPath: "root.quality[0]",
    basePath: "root.type",
    baseId: "MolecularSequence.quality.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/quality-type",
        code: "indel",
        display: "INDEL Comparison",
      },
      {
        system: "http://hl7.org/fhir/quality-type",
        code: "snp",
        display: "SNP Comparison",
      },
      {
        system: "http://hl7.org/fhir/quality-type",
        code: "unknown",
        display: "UNKNOWN Comparison",
      },
    ],
  },
  {
    element: {
      id: "MolecularSequence.quality.start",
      path: "MolecularSequence.quality.start",
      short: "Start position of the sequence",
      definition:
        "Start position of the sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.start", min: 0, max: "1" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.start",
    parentDataPath: "root.quality[0]",
    basePath: "root.start",
    baseId: "MolecularSequence.quality.start",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.end",
      path: "MolecularSequence.quality.end",
      short: "End position of the sequence",
      definition:
        "End position of the sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.end", min: 0, max: "1" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.end",
    parentDataPath: "root.quality[0]",
    basePath: "root.end",
    baseId: "MolecularSequence.quality.end",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.method",
      path: "MolecularSequence.quality.method",
      short: "Method to get quality",
      definition: "Which method is used to get sequence quality.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.method", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "qualityMethod",
          },
        ],
        strength: "example",
        description: "How to get the numerical score",
        valueSet: "http://hl7.org/fhir/ValueSet/sequence-quality-method",
      },
    },
    dataPath: "root.quality.method",
    parentDataPath: "root.quality[0]",
    basePath: "root.method",
    baseId: "MolecularSequence.quality.method",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.truthTP",
      path: "MolecularSequence.quality.truthTP",
      short: "True positives from the perspective of the truth data",
      definition:
        "True positives, from the perspective of the truth data, i.e. the number of sites in the Truth Call Set for which there are paths through the Query Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.truthTP", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.truthTP",
    parentDataPath: "root.quality[0]",
    basePath: "root.truthTP",
    baseId: "MolecularSequence.quality.truthTP",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.queryTP",
      path: "MolecularSequence.quality.queryTP",
      short: "True positives from the perspective of the query data",
      definition:
        "True positives, from the perspective of the query data, i.e. the number of sites in the Query Call Set for which there are paths through the Truth Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.queryTP", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.queryTP",
    parentDataPath: "root.quality[0]",
    basePath: "root.queryTP",
    baseId: "MolecularSequence.quality.queryTP",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.truthFN",
      path: "MolecularSequence.quality.truthFN",
      short: "False negatives",
      definition:
        "False negatives, i.e. the number of sites in the Truth Call Set for which there is no path through the Query Call Set that is consistent with all of the alleles at this site, or sites for which there is an inaccurate genotype call for the event. Sites with correct variant but incorrect genotype are counted here.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.truthFN", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.truthFN",
    parentDataPath: "root.quality[0]",
    basePath: "root.truthFN",
    baseId: "MolecularSequence.quality.truthFN",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.queryFP",
      path: "MolecularSequence.quality.queryFP",
      short: "False positives",
      definition:
        "False positives, i.e. the number of sites in the Query Call Set for which there is no path through the Truth Call Set that is consistent with this site. Sites with correct variant but incorrect genotype are counted here.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.queryFP", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.queryFP",
    parentDataPath: "root.quality[0]",
    basePath: "root.queryFP",
    baseId: "MolecularSequence.quality.queryFP",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.gtFP",
      path: "MolecularSequence.quality.gtFP",
      short:
        "False positives where the non-REF alleles in the Truth and Query Call Sets match",
      definition:
        "The number of false positives where the non-REF alleles in the Truth and Query Call Sets match (i.e. cases where the truth is 1/1 and the query is 0/1 or similar).",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.gtFP", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.gtFP",
    parentDataPath: "root.quality[0]",
    basePath: "root.gtFP",
    baseId: "MolecularSequence.quality.gtFP",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.precision",
      path: "MolecularSequence.quality.precision",
      short: "Precision of comparison",
      definition: "QUERY.TP / (QUERY.TP + QUERY.FP).",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.precision", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.precision",
    parentDataPath: "root.quality[0]",
    basePath: "root.precision",
    baseId: "MolecularSequence.quality.precision",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.recall",
      path: "MolecularSequence.quality.recall",
      short: "Recall of comparison",
      definition: "TRUTH.TP / (TRUTH.TP + TRUTH.FN).",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.recall", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.recall",
    parentDataPath: "root.quality[0]",
    basePath: "root.recall",
    baseId: "MolecularSequence.quality.recall",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.fScore",
      path: "MolecularSequence.quality.fScore",
      short: "F-score",
      definition:
        "Harmonic mean of Recall and Precision, computed as: 2 * precision * recall / (precision + recall).",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.fScore", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.fScore",
    parentDataPath: "root.quality[0]",
    basePath: "root.fScore",
    baseId: "MolecularSequence.quality.fScore",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.roc",
      path: "MolecularSequence.quality.roc",
      short: "Receiver Operator Characteristic (ROC) Curve",
      definition:
        "Receiver Operator Characteristic (ROC) Curve  to give sensitivity/specificity tradeoff.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.quality.roc", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.roc",
    parentDataPath: "root.quality[0]",
    basePath: "root.roc",
    baseId: "MolecularSequence.quality.roc",
    isPrimitive: false,
    childPaths: [
      "root.quality.roc.score[0]",
      "root.quality.roc.numTP[0]",
      "root.quality.roc.numFP[0]",
      "root.quality.roc.numFN[0]",
      "root.quality.roc.precision[0]",
      "root.quality.roc.sensitivity[0]",
      "root.quality.roc.fMeasure[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.roc.score",
      path: "MolecularSequence.quality.roc.score",
      short: "Genotype quality score",
      definition:
        "Invidual data point representing the GQ (genotype quality) score threshold.",
      min: 0,
      max: "*",
      base: { path: "MolecularSequence.quality.roc.score", min: 0, max: "*" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.roc.score[0]",
    parentDataPath: "root.quality.roc",
    basePath: "root.score",
    baseId: "MolecularSequence.quality.roc.score",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.roc.numTP",
      path: "MolecularSequence.quality.roc.numTP",
      short: "Roc score true positive numbers",
      definition:
        'The number of true positives if the GQ score threshold was set to "score" field value.',
      min: 0,
      max: "*",
      base: { path: "MolecularSequence.quality.roc.numTP", min: 0, max: "*" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.roc.numTP[0]",
    parentDataPath: "root.quality.roc",
    basePath: "root.numTP",
    baseId: "MolecularSequence.quality.roc.numTP",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.roc.numFP",
      path: "MolecularSequence.quality.roc.numFP",
      short: "Roc score false positive numbers",
      definition:
        'The number of false positives if the GQ score threshold was set to "score" field value.',
      min: 0,
      max: "*",
      base: { path: "MolecularSequence.quality.roc.numFP", min: 0, max: "*" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.roc.numFP[0]",
    parentDataPath: "root.quality.roc",
    basePath: "root.numFP",
    baseId: "MolecularSequence.quality.roc.numFP",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.roc.numFN",
      path: "MolecularSequence.quality.roc.numFN",
      short: "Roc score false negative numbers",
      definition:
        'The number of false negatives if the GQ score threshold was set to "score" field value.',
      min: 0,
      max: "*",
      base: { path: "MolecularSequence.quality.roc.numFN", min: 0, max: "*" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.roc.numFN[0]",
    parentDataPath: "root.quality.roc",
    basePath: "root.numFN",
    baseId: "MolecularSequence.quality.roc.numFN",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.roc.precision",
      path: "MolecularSequence.quality.roc.precision",
      short: "Precision of the GQ score",
      definition:
        'Calculated precision if the GQ score threshold was set to "score" field value.',
      min: 0,
      max: "*",
      base: {
        path: "MolecularSequence.quality.roc.precision",
        min: 0,
        max: "*",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.roc.precision[0]",
    parentDataPath: "root.quality.roc",
    basePath: "root.precision",
    baseId: "MolecularSequence.quality.roc.precision",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.roc.sensitivity",
      path: "MolecularSequence.quality.roc.sensitivity",
      short: "Sensitivity of the GQ score",
      definition:
        'Calculated sensitivity if the GQ score threshold was set to "score" field value.',
      min: 0,
      max: "*",
      base: {
        path: "MolecularSequence.quality.roc.sensitivity",
        min: 0,
        max: "*",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.roc.sensitivity[0]",
    parentDataPath: "root.quality.roc",
    basePath: "root.sensitivity",
    baseId: "MolecularSequence.quality.roc.sensitivity",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.quality.roc.fMeasure",
      path: "MolecularSequence.quality.roc.fMeasure",
      short: "FScore of the GQ score",
      definition:
        'Calculated fScore if the GQ score threshold was set to "score" field value.',
      min: 0,
      max: "*",
      base: {
        path: "MolecularSequence.quality.roc.fMeasure",
        min: 0,
        max: "*",
      },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.quality.roc.fMeasure[0]",
    parentDataPath: "root.quality.roc",
    basePath: "root.fMeasure",
    baseId: "MolecularSequence.quality.roc.fMeasure",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.readCoverage",
      path: "MolecularSequence.readCoverage",
      short:
        "Average number of reads representing a given nucleotide in the reconstructed sequence",
      definition:
        "Coverage (read depth or depth) is the average number of reads representing a given nucleotide in the reconstructed sequence.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.readCoverage", min: 0, max: "1" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.readCoverage",
    parentDataPath: "root",
    basePath: "root.readCoverage",
    baseId: "MolecularSequence.readCoverage",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.repository",
      path: "MolecularSequence.repository",
      short:
        "External repository which contains detailed report related with observedSeq in this resource",
      definition:
        "Configurations of the external repository. The repository shall store target's observedSeq or records related with target's observedSeq.",
      min: 0,
      max: "*",
      base: { path: "MolecularSequence.repository", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.repository[0]",
    parentDataPath: "root",
    basePath: "root.repository",
    baseId: "MolecularSequence.repository",
    isPrimitive: false,
    childPaths: [
      "root.repository.type",
      "root.repository.url",
      "root.repository.name",
      "root.repository.datasetId",
      "root.repository.variantsetId",
      "root.repository.readsetId",
    ],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.repository.type",
      path: "MolecularSequence.repository.type",
      short: "directlink | openapi | login | oauth | other",
      definition:
        "Click and see / RESTful API / Need login to see / RESTful API with authentication / Other ways to see resource.",
      min: 1,
      max: "1",
      base: { path: "MolecularSequence.repository.type", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "repositoryType",
          },
        ],
        strength: "required",
        description: "Type for repository",
        valueSet: "http://hl7.org/fhir/ValueSet/repository-type|4.3.0",
      },
    },
    dataPath: "root.repository.type",
    parentDataPath: "root.repository[0]",
    basePath: "root.type",
    baseId: "MolecularSequence.repository.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/repository-type",
        code: "directlink",
        display: "Click and see",
      },
      {
        system: "http://hl7.org/fhir/repository-type",
        code: "openapi",
        display:
          "The URL is the RESTful or other kind of API that can access to the result.",
      },
      {
        system: "http://hl7.org/fhir/repository-type",
        code: "login",
        display: "Result cannot be access unless an account is logged in",
      },
      {
        system: "http://hl7.org/fhir/repository-type",
        code: "oauth",
        display:
          "Result need to be fetched with API and need LOGIN( or cookies are required when visiting the link of resource)",
      },
      {
        system: "http://hl7.org/fhir/repository-type",
        code: "other",
        display:
          "Some other complicated or particular way to get resource from URL.",
      },
    ],
  },
  {
    element: {
      id: "MolecularSequence.repository.url",
      path: "MolecularSequence.repository.url",
      short: "URI of the repository",
      definition:
        "URI of an external repository which contains further details about the genetics data.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.repository.url", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.repository.url",
    parentDataPath: "root.repository[0]",
    basePath: "root.url",
    baseId: "MolecularSequence.repository.url",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.repository.name",
      path: "MolecularSequence.repository.name",
      short: "Repository's name",
      definition:
        "URI of an external repository which contains further details about the genetics data.",
      min: 0,
      max: "1",
      base: { path: "MolecularSequence.repository.name", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.repository.name",
    parentDataPath: "root.repository[0]",
    basePath: "root.name",
    baseId: "MolecularSequence.repository.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.repository.datasetId",
      path: "MolecularSequence.repository.datasetId",
      short: "Id of the dataset that used to call for dataset in repository",
      definition:
        "Id of the variant in this external repository. The server will understand how to use this id to call for more info about datasets in external repository.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.repository.datasetId",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.repository.datasetId",
    parentDataPath: "root.repository[0]",
    basePath: "root.datasetId",
    baseId: "MolecularSequence.repository.datasetId",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.repository.variantsetId",
      path: "MolecularSequence.repository.variantsetId",
      short:
        "Id of the variantset that used to call for variantset in repository",
      definition:
        "Id of the variantset in this external repository. The server will understand how to use this id to call for more info about variantsets in external repository.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.repository.variantsetId",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.repository.variantsetId",
    parentDataPath: "root.repository[0]",
    basePath: "root.variantsetId",
    baseId: "MolecularSequence.repository.variantsetId",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.repository.readsetId",
      path: "MolecularSequence.repository.readsetId",
      short: "Id of the read",
      definition: "Id of the read in this external repository.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.repository.readsetId",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.repository.readsetId",
    parentDataPath: "root.repository[0]",
    basePath: "root.readsetId",
    baseId: "MolecularSequence.repository.readsetId",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.structureVariant",
      path: "MolecularSequence.structureVariant",
      short: "Structural variant",
      definition: "Information about chromosome structure variation.",
      min: 0,
      max: "*",
      base: { path: "MolecularSequence.structureVariant", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structureVariant[0]",
    parentDataPath: "root",
    basePath: "root.structureVariant",
    baseId: "MolecularSequence.structureVariant",
    isPrimitive: false,
    childPaths: [
      "root.structureVariant.variantType",
      "root.structureVariant.exact",
      "root.structureVariant.length",
      "root.structureVariant.outer",
      "root.structureVariant.inner",
    ],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.structureVariant.exact",
      path: "MolecularSequence.structureVariant.exact",
      short:
        "Does the structural variant have base pair resolution breakpoints?",
      definition:
        "Used to indicate if the outer and inner start-end values have the same meaning.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.structureVariant.exact",
        min: 0,
        max: "1",
      },
      type: [{ code: "boolean" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structureVariant.exact",
    parentDataPath: "root.structureVariant[0]",
    basePath: "root.exact",
    baseId: "MolecularSequence.structureVariant.exact",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.structureVariant.length",
      path: "MolecularSequence.structureVariant.length",
      short: "Structural variant length",
      definition: "Length of the variant chromosome.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.structureVariant.length",
        min: 0,
        max: "1",
      },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structureVariant.length",
    parentDataPath: "root.structureVariant[0]",
    basePath: "root.length",
    baseId: "MolecularSequence.structureVariant.length",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.structureVariant.outer",
      path: "MolecularSequence.structureVariant.outer",
      short: "Structural variant outer",
      definition: "Structural variant outer.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.structureVariant.outer",
        min: 0,
        max: "1",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structureVariant.outer",
    parentDataPath: "root.structureVariant[0]",
    basePath: "root.outer",
    baseId: "MolecularSequence.structureVariant.outer",
    isPrimitive: false,
    childPaths: [
      "root.structureVariant.outer.start",
      "root.structureVariant.outer.end",
    ],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.structureVariant.outer.start",
      path: "MolecularSequence.structureVariant.outer.start",
      short: "Structural variant outer start",
      definition:
        "Structural variant outer start. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.structureVariant.outer.start",
        min: 0,
        max: "1",
      },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structureVariant.outer.start",
    parentDataPath: "root.structureVariant.outer",
    basePath: "root.start",
    baseId: "MolecularSequence.structureVariant.outer.start",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.structureVariant.outer.end",
      path: "MolecularSequence.structureVariant.outer.end",
      short: "Structural variant outer end",
      definition:
        "Structural variant outer end. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.structureVariant.outer.end",
        min: 0,
        max: "1",
      },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structureVariant.outer.end",
    parentDataPath: "root.structureVariant.outer",
    basePath: "root.end",
    baseId: "MolecularSequence.structureVariant.outer.end",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.structureVariant.inner",
      path: "MolecularSequence.structureVariant.inner",
      short: "Structural variant inner",
      definition: "Structural variant inner.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.structureVariant.inner",
        min: 0,
        max: "1",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structureVariant.inner",
    parentDataPath: "root.structureVariant[0]",
    basePath: "root.inner",
    baseId: "MolecularSequence.structureVariant.inner",
    isPrimitive: false,
    childPaths: [
      "root.structureVariant.inner.start",
      "root.structureVariant.inner.end",
    ],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.structureVariant.inner.start",
      path: "MolecularSequence.structureVariant.inner.start",
      short: "Structural variant inner start",
      definition:
        "Structural variant inner start. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.structureVariant.inner.start",
        min: 0,
        max: "1",
      },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structureVariant.inner.start",
    parentDataPath: "root.structureVariant.inner",
    basePath: "root.start",
    baseId: "MolecularSequence.structureVariant.inner.start",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence.structureVariant.inner.end",
      path: "MolecularSequence.structureVariant.inner.end",
      short: "Structural variant inner end",
      definition:
        "Structural variant inner end. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
      min: 0,
      max: "1",
      base: {
        path: "MolecularSequence.structureVariant.inner.end",
        min: 0,
        max: "1",
      },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structureVariant.inner.end",
    parentDataPath: "root.structureVariant.inner",
    basePath: "root.end",
    baseId: "MolecularSequence.structureVariant.inner.end",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "MolecularSequence",
      path: "MolecularSequence",
      short: "Information about a biological sequence",
      definition: "Raw data describing a biological sequence.",
      min: 0,
      max: "*",
      base: { path: "MolecularSequence", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "msq-3",
          severity: "error",
          human: "Only 0 and 1 are valid for coordinateSystem",
          expression: "coordinateSystem = 1 or coordinateSystem = 0",
          xpath: "count(f:coordinateSystem[@value=0 and @value=1]) = 1",
          source: "http://hl7.org/fhir/StructureDefinition/MolecularSequence",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "w5", map: "clinical.diagnostics" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "MolecularSequence",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
