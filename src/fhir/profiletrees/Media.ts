const data = [
  {
    element: {
      id: "Media.meta",
      path: "Media.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "Media.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.implicitRules",
      path: "Media.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "Media.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.language",
      path: "Media.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "Media.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "Media.contained",
      path: "Media.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/Media",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "Media.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.basedOn",
      path: "Media.basedOn",
      short: "Procedure that caused this media to be created",
      definition:
        "A procedure that is fulfilled in whole or in part by the creation of this media.",
      requirements:
        "Allows tracing of authorization for the event and tracking whether proposals/recommendations were acted upon.",
      alias: ["fulfills"],
      min: 0,
      max: "*",
      base: { path: "Media.basedOn", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/ServiceRequest",
            "http://hl7.org/fhir/StructureDefinition/CarePlan",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Event.basedOn" },
        { identity: "rim", map: ".outboundRelationship[typeCode=FLFS].target" },
      ],
    },
    dataPath: "root.basedOn[0]",
    parentDataPath: "root",
    basePath: "root.basedOn",
    baseId: "Media.basedOn",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.status",
      path: "Media.status",
      short:
        "preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown",
      definition: "The current state of the {{title}}.",
      comment:
        'A nominal state-transition diagram can be found in the [[event.html#statemachine | Event pattern]] documentation\r\rUnknown does not represent "other" - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.',
      min: 1,
      max: "1",
      base: { path: "Media.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labelled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "MediaStatus",
          },
        ],
        strength: "required",
        description: "Codes identifying the lifecycle stage of an event.",
        valueSet: "http://hl7.org/fhir/ValueSet/event-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Event.status" },
        { identity: "w5", map: "FiveWs.status" },
        { identity: "v2", map: "Varies by domain" },
        { identity: "rim", map: ".status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "Media.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/event-status",
        code: "preparation",
        display: "Preparation",
      },
      {
        system: "http://hl7.org/fhir/event-status",
        code: "in-progress",
        display: "In Progress",
      },
      {
        system: "http://hl7.org/fhir/event-status",
        code: "not-done",
        display: "Not Done",
      },
      {
        system: "http://hl7.org/fhir/event-status",
        code: "on-hold",
        display: "On Hold",
      },
      {
        system: "http://hl7.org/fhir/event-status",
        code: "stopped",
        display: "Stopped",
      },
      {
        system: "http://hl7.org/fhir/event-status",
        code: "completed",
        display: "Completed",
      },
      {
        system: "http://hl7.org/fhir/event-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
      {
        system: "http://hl7.org/fhir/event-status",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "Media.type",
      path: "Media.type",
      short: "Classification of media as image, video, or audio",
      definition:
        "A code that classifies whether the media is an image, video or audio recording or some other media category.",
      requirements:
        "Used for filtering what observations are retrieved and displayed.",
      min: 0,
      max: "1",
      base: { path: "Media.type", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "MediaType",
          },
        ],
        strength: "extensible",
        description: "Codes for high level media categories.",
        valueSet: "http://hl7.org/fhir/ValueSet/media-type",
      },
      mapping: [
        { identity: "w5", map: "FiveWs.class" },
        { identity: "rim", map: ".code" },
      ],
    },
    dataPath: "root.type",
    parentDataPath: "root",
    basePath: "root.type",
    baseId: "Media.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/media-type",
        code: "image",
        display: "Image",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/media-type",
        code: "video",
        display: "Video",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/media-type",
        code: "audio",
        display: "Audio",
      },
    ],
  },
  {
    element: {
      id: "Media.modality",
      path: "Media.modality",
      short: "The type of acquisition equipment/process",
      definition:
        "Details of the type of the media - usually, how it was acquired (what type of device). If images sourced from a DICOM system, are wrapped in a Media resource, then this is the modality.",
      min: 0,
      max: "1",
      base: { path: "Media.modality", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "MediaModality",
          },
        ],
        strength: "example",
        description:
          "Detailed information about the type of the image - its kind, purpose, or the kind of equipment used to generate it.",
        valueSet: "http://hl7.org/fhir/ValueSet/media-modality",
      },
      mapping: [
        { identity: "workflow", map: "Event.code" },
        { identity: "w5", map: "FiveWs.what[x]" },
        {
          identity: "rim",
          map: '.outboundRelationship[typeCode="COMP].target[classCode="LIST", moodCode="EVN"].code',
        },
        { identity: "dicom", map: "0008,0060 | 0008,1032" },
      ],
    },
    dataPath: "root.modality",
    parentDataPath: "root",
    basePath: "root.modality",
    baseId: "Media.modality",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/media-modality",
        code: "diagram",
        display: "Diagram",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/media-modality",
        code: "fax",
        display: "Fax",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/media-modality",
        code: "scan",
        display: "Scanned Document",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/media-modality",
        code: "retina",
        display: "Retina Scan",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/media-modality",
        code: "fingerprint",
        display: "Fingerprint",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/media-modality",
        code: "iris",
        display: "Iris Scan",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/media-modality",
        code: "palm",
        display: "Palm Scan",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/media-modality",
        code: "face",
        display: "Face Scan",
      },
    ],
  },
  {
    element: {
      id: "Media.subject",
      path: "Media.subject",
      short: "Who/What this Media is a record of",
      definition: "Who/What this Media is a record of.",
      min: 0,
      max: "1",
      base: { path: "Media.subject", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Patient",
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
            "http://hl7.org/fhir/StructureDefinition/Group",
            "http://hl7.org/fhir/StructureDefinition/Device",
            "http://hl7.org/fhir/StructureDefinition/Specimen",
            "http://hl7.org/fhir/StructureDefinition/Location",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Event.subject" },
        { identity: "w5", map: "FiveWs.subject[x]" },
        { identity: "rim", map: '.participation[typeCode="SUBJ"]???' },
        { identity: "dicom", map: "~0010,0020" },
        { identity: "w5", map: "FiveWs.subject" },
      ],
    },
    dataPath: "root.subject",
    parentDataPath: "root",
    basePath: "root.subject",
    baseId: "Media.subject",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.created[x]",
      path: "Media.created[x]",
      short: "When Media was collected",
      definition: "The date and time(s) at which the media was collected.",
      alias: ["timing"],
      min: 0,
      max: "1",
      base: { path: "Media.created[x]", min: 0, max: "1" },
      type: [{ code: "dateTime" }, { code: "Period" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Event.occurrence[x]" },
        { identity: "w5", map: "FiveWs.done[x]" },
        { identity: "rim", map: ".effectiveTime" },
      ],
    },
    dataPath: "root.created[x]",
    parentDataPath: "root",
    basePath: "root.created[x]",
    baseId: "Media.created[x]",
    isPrimitive: false,
    childPaths: [],
    multiTypeType: "dateTime",
    value: "",
  },
  {
    element: {
      id: "Media.issued",
      path: "Media.issued",
      short: "Date/Time this version was made available",
      definition:
        "The date and time this version of the media was made available to providers, typically after having been reviewed.",
      comment:
        "It may be the same as the [`lastUpdated` ](resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that does not require the new version to be reviewed and verified again.",
      min: 0,
      max: "1",
      base: { path: "Media.issued", min: 0, max: "1" },
      type: [{ code: "instant" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.recorded" },
        {
          identity: "v2",
          map: "OBR.22 (or MSH.7), or perhaps OBX-19 (depends on who observation made)",
        },
        { identity: "rim", map: "participation[typeCode=AUT].time" },
      ],
    },
    dataPath: "root.issued",
    parentDataPath: "root",
    basePath: "root.issued",
    baseId: "Media.issued",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.reasonCode",
      path: "Media.reasonCode",
      short: "Why was event performed?",
      definition: "Describes why the event occurred in coded or textual form.",
      comment: "Textual reasons can be captured using reasonCode.text.",
      min: 0,
      max: "*",
      base: { path: "Media.reasonCode", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "MediaReason",
          },
        ],
        strength: "example",
        description: "The reason for the media.",
        valueSet: "http://hl7.org/fhir/ValueSet/procedure-reason",
      },
      mapping: [
        { identity: "workflow", map: "Event.reasonCode" },
        { identity: "w5", map: "FiveWs.why[x]" },
        { identity: "rim", map: ".reasonCode" },
      ],
    },
    dataPath: "root.reasonCode[0]",
    parentDataPath: "root",
    basePath: "root.reasonCode",
    baseId: "Media.reasonCode",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.deviceName",
      path: "Media.deviceName",
      short: "Name of the device/manufacturer",
      definition:
        "The name of the device / manufacturer of the device  that was used to make the recording.",
      min: 0,
      max: "1",
      base: { path: "Media.deviceName", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        {
          identity: "rim",
          map: '.participation[typeCode="DEV"].role.player.Entity[classCode="DEV"].name',
        },
        { identity: "dicom", map: "0008,0070" },
      ],
    },
    dataPath: "root.deviceName",
    parentDataPath: "root",
    basePath: "root.deviceName",
    baseId: "Media.deviceName",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.height",
      path: "Media.height",
      short: "Height of the image in pixels (photo/video)",
      definition: "Height of the image in pixels (photo/video).",
      min: 0,
      max: "1",
      base: { path: "Media.height", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        {
          identity: "rim",
          map: '.outboundRelationship[typeCode="COMP].target[classCode="OBS", moodCode="EVN",code="<CODE>"].value',
        },
        { identity: "dicom", map: "0028,0010" },
      ],
    },
    dataPath: "root.height",
    parentDataPath: "root",
    basePath: "root.height",
    baseId: "Media.height",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.width",
      path: "Media.width",
      short: "Width of the image in pixels (photo/video)",
      definition: "Width of the image in pixels (photo/video).",
      min: 0,
      max: "1",
      base: { path: "Media.width", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        {
          identity: "rim",
          map: '.outboundRelationship[typeCode="COMP].target[classCode="OBS", moodCode="EVN",code="<CODE>"].value',
        },
        { identity: "dicom", map: "0028,0011" },
      ],
    },
    dataPath: "root.width",
    parentDataPath: "root",
    basePath: "root.width",
    baseId: "Media.width",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.frames",
      path: "Media.frames",
      short: "Number of frames if > 1 (photo)",
      definition:
        "The number of frames in a photo. This is used with a multi-page fax, or an imaging acquisition context that takes multiple slices in a single image, or an animated gif. If there is more than one frame, this SHALL have a value in order to alert interface software that a multi-frame capable rendering widget is required.",
      comment:
        "if the number of frames is not supplied, the value may be unknown. Applications should not assume that there is only one frame unless it is explicitly stated.",
      min: 0,
      max: "1",
      base: { path: "Media.frames", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        {
          identity: "rim",
          map: '.outboundRelationship[typeCode="COMP].target[classCode="OBS", moodCode="EVN",code="<CODE>"].value',
        },
      ],
    },
    dataPath: "root.frames",
    parentDataPath: "root",
    basePath: "root.frames",
    baseId: "Media.frames",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.duration",
      path: "Media.duration",
      short: "Length in seconds (audio / video)",
      definition:
        "The duration of the recording in seconds - for audio and video.",
      comment:
        "The duration might differ from occurrencePeriod if recording was paused.",
      min: 0,
      max: "1",
      base: { path: "Media.duration", min: 0, max: "1" },
      type: [{ code: "decimal" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        {
          identity: "rim",
          map: '.outboundRelationship[typeCode="COMP].target[classCode="OBS", moodCode="EVN",code="<CODE>"].value',
        },
        { identity: "dicom", map: "~0028,0002" },
      ],
    },
    dataPath: "root.duration",
    parentDataPath: "root",
    basePath: "root.duration",
    baseId: "Media.duration",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media.note",
      path: "Media.note",
      short: "Comments made about the media",
      definition:
        "Comments made about the media by the performer, subject or other participants.",
      comment:
        "Not to be used for observations, conclusions, etc. Instead use an [Observation](observation.html) based on the Media/ImagingStudy resource.",
      min: 0,
      max: "*",
      base: { path: "Media.note", min: 0, max: "*" },
      type: [{ code: "Annotation" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Event.note" },
        { identity: "v2", map: "NTE" },
        {
          identity: "rim",
          map: ".inboundRelationship(typeCode=SUBJ].source[classCode=ANNGEN, moodCode=EVN].value[xsi:type=ST]",
        },
      ],
    },
    dataPath: "root.note[0]",
    parentDataPath: "root",
    basePath: "root.note",
    baseId: "Media.note",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Media",
      path: "Media",
      short:
        "A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference",
      definition:
        "A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.",
      min: 0,
      max: "*",
      base: { path: "Media", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Event" },
        { identity: "rim", map: 'Act[classCode="DGIMG", moodCode="EVN"]' },
        { identity: "w5", map: "infrastructure.structure" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "Media",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
