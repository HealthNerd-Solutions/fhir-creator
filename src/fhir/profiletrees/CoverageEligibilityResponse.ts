const data = [
  {
    element: {
      id: "CoverageEligibilityResponse.meta",
      path: "CoverageEligibilityResponse.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "CoverageEligibilityResponse.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.implicitRules",
      path: "CoverageEligibilityResponse.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "CoverageEligibilityResponse.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.language",
      path: "CoverageEligibilityResponse.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "CoverageEligibilityResponse.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.contained",
      path: "CoverageEligibilityResponse.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source:
            "http://hl7.org/fhir/StructureDefinition/CoverageEligibilityResponse",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "CoverageEligibilityResponse.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.status",
      path: "CoverageEligibilityResponse.status",
      short: "active | cancelled | draft | entered-in-error",
      definition: "The status of the resource instance.",
      comment:
        "This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.",
      requirements:
        "Need to track the status of the resource as 'draft' resources may undergo further edits while 'active' resources are immutable and may only have their status changed to 'cancelled'.",
      min: 1,
      max: "1",
      base: { path: "CoverageEligibilityResponse.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "EligibilityResponseStatus",
          },
        ],
        strength: "required",
        description: "A code specifying the state of the resource instance.",
        valueSet: "http://hl7.org/fhir/ValueSet/fm-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Event.status" },
        { identity: "w5", map: "FiveWs.status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "CoverageEligibilityResponse.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "cancelled",
        display: "Cancelled",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/fm-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.purpose",
      path: "CoverageEligibilityResponse.purpose",
      short: "auth-requirements | benefits | discovery | validation",
      definition:
        "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified.",
      requirements: "To indicate the processing actions requested.",
      min: 1,
      max: "*",
      base: { path: "CoverageEligibilityResponse.purpose", min: 1, max: "*" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "EligibilityResponsePurpose",
          },
        ],
        strength: "required",
        description:
          "A code specifying the types of information being requested.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/eligibilityresponse-purpose|4.3.0",
      },
      mapping: [{ identity: "w5", map: "FiveWs.class" }],
    },
    dataPath: "root.purpose[0]",
    parentDataPath: "root",
    basePath: "root.purpose",
    baseId: "CoverageEligibilityResponse.purpose",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/eligibilityresponse-purpose",
        code: "auth-requirements",
        display: "Coverage auth-requirements",
      },
      {
        system: "http://hl7.org/fhir/eligibilityresponse-purpose",
        code: "benefits",
        display: "Coverage benefits",
      },
      {
        system: "http://hl7.org/fhir/eligibilityresponse-purpose",
        code: "discovery",
        display: "Coverage Discovery",
      },
      {
        system: "http://hl7.org/fhir/eligibilityresponse-purpose",
        code: "validation",
        display: "Coverage Validation",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.serviced[x]",
      path: "CoverageEligibilityResponse.serviced[x]",
      short: "Estimated date or dates of service",
      definition:
        "The date or dates when the enclosed suite of services were performed or completed.",
      requirements: "Required to provide time context for the request.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.serviced[x]",
        min: 0,
        max: "1",
      },
      type: [{ code: "date" }, { code: "Period" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "w5", map: "FiveWs.done[x]" },
        { identity: "cdanetv4", map: "F09" },
      ],
    },
    dataPath: "root.serviced[x]",
    parentDataPath: "root",
    basePath: "root.serviced[x]",
    baseId: "CoverageEligibilityResponse.serviced[x]",
    isPrimitive: false,
    childPaths: [],
    multiTypeType: "date",
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.created",
      path: "CoverageEligibilityResponse.created",
      short: "Response creation date",
      definition: "The date this resource was created.",
      requirements:
        "Need to record a timestamp for use by both the recipient and the issuer.",
      min: 1,
      max: "1",
      base: { path: "CoverageEligibilityResponse.created", min: 1, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "w5", map: "FiveWs.recorded" }],
    },
    dataPath: "root.created",
    parentDataPath: "root",
    basePath: "root.created",
    baseId: "CoverageEligibilityResponse.created",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.request",
      path: "CoverageEligibilityResponse.request",
      short: "Eligibility request reference",
      definition: "Reference to the original request resource.",
      requirements: "Needed to allow the response to be linked to the request.",
      min: 1,
      max: "1",
      base: { path: "CoverageEligibilityResponse.request", min: 1, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/CoverageEligibilityRequest",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Event.basedOn" },
        { identity: "w5", map: "FiveWs.why[x]" },
        { identity: "cdanetv4", map: "A02|G01" },
      ],
    },
    dataPath: "root.request",
    parentDataPath: "root",
    basePath: "root.request",
    baseId: "CoverageEligibilityResponse.request",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.outcome",
      path: "CoverageEligibilityResponse.outcome",
      short: "queued | complete | error | partial",
      definition: "The outcome of the request processing.",
      comment:
        "The resource may be used to indicate that: the request has been held (queued) for processing; that it has been processed and errors found (error); that no errors were found and that some of the adjudication has been undertaken (partial) or that all of the adjudication has been undertaken (complete).",
      requirements: "To advise the requestor of an overall processing outcome.",
      min: 1,
      max: "1",
      base: { path: "CoverageEligibilityResponse.outcome", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "RemittanceOutcome",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The outcome of the processing.",
        valueSet: "http://hl7.org/fhir/ValueSet/remittance-outcome|4.3.0",
      },
    },
    dataPath: "root.outcome",
    parentDataPath: "root",
    basePath: "root.outcome",
    baseId: "CoverageEligibilityResponse.outcome",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "queued",
        display: "Queued",
      },
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "complete",
        display: "Complete",
      },
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "error",
        display: "Error",
      },
      {
        system: "http://hl7.org/fhir/remittance-outcome",
        code: "partial",
        display: "Partial",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.disposition",
      path: "CoverageEligibilityResponse.disposition",
      short: "Disposition Message",
      definition:
        "A human readable description of the status of the adjudication.",
      requirements: "Provided for user display.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.disposition",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Event.note" }],
    },
    dataPath: "root.disposition",
    parentDataPath: "root",
    basePath: "root.disposition",
    baseId: "CoverageEligibilityResponse.disposition",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-display-hint",
          valueString: "380;0",
        },
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Insurance",
        },
      ],
      path: "CoverageEligibilityResponse.insurance",
      short: "Patient insurance information",
      definition:
        "Financial instruments for reimbursement for the health care products and services.",
      comment:
        "All insurance coverages for the patient which may be applicable for reimbursement, of the products and services listed in the claim, are typically provided in the claim to allow insurers to confirm the ordering of the insurance coverages relative to local 'coordination of benefit' rules. One coverage (and only one) with 'focal=true' is to be used in the adjudication of this claim. Coverages appearing before the focal Coverage in the list, and where 'subrogation=false', should provide a reference to the ClaimResponse containing the adjudication results of the prior claim.",
      requirements:
        "There must be at least one coverage for which eligibility is requested.",
      min: 0,
      max: "*",
      base: { path: "CoverageEligibilityResponse.insurance", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance[0]",
    parentDataPath: "root",
    basePath: "root.insurance",
    baseId: "CoverageEligibilityResponse.insurance",
    isPrimitive: false,
    childPaths: [
      "root.insurance.coverage",
      "root.insurance.inforce",
      "root.insurance.benefitPeriod",
      "root.insurance.item[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.inforce",
      path: "CoverageEligibilityResponse.insurance.inforce",
      short: "Coverage inforce indicator",
      definition:
        "Flag indicating if the coverage provided is inforce currently if no service date(s) specified or for the whole duration of the service dates.",
      requirements:
        "Needed to convey the answer to the eligibility validation request.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.inforce",
        min: 0,
        max: "1",
      },
      type: [{ code: "boolean" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.inforce",
    parentDataPath: "root.insurance[0]",
    basePath: "root.inforce",
    baseId: "CoverageEligibilityResponse.insurance.inforce",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-display-hint",
          valueString: "340;120",
        },
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Items",
        },
      ],
      path: "CoverageEligibilityResponse.insurance.item",
      short: "Benefits and authorization details",
      definition:
        "Benefits and optionally current balances, and authorization details by category or service.",
      min: 0,
      max: "*",
      base: {
        path: "CoverageEligibilityResponse.insurance.item",
        min: 0,
        max: "*",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ces-1",
          severity: "error",
          human: "SHALL contain a category or a billcode but not both.",
          expression: "category.exists() xor productOrService.exists()",
          xpath: "exists(f:category) or exists(f:productOrService)",
          source:
            "http://hl7.org/fhir/StructureDefinition/CoverageEligibilityResponse",
        },
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.item[0]",
    parentDataPath: "root.insurance[0]",
    basePath: "root.item",
    baseId: "CoverageEligibilityResponse.insurance.item",
    isPrimitive: false,
    childPaths: [
      "root.insurance.item.category",
      "root.insurance.item.productOrService",
      "root.insurance.item.modifier[0]",
      "root.insurance.item.provider",
      "root.insurance.item.excluded",
      "root.insurance.item.name",
      "root.insurance.item.description",
      "root.insurance.item.network",
      "root.insurance.item.unit",
      "root.insurance.item.term",
      "root.insurance.item.benefit[0]",
      "root.insurance.item.authorizationRequired",
      "root.insurance.item.authorizationSupporting[0]",
      "root.insurance.item.authorizationUrl",
    ],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.category",
      path: "CoverageEligibilityResponse.insurance.item.category",
      short: "Benefit classification",
      definition:
        "Code to identify the general type of benefits under which products and services are provided.",
      comment:
        "Examples include Medical Care, Periodontics, Renal Dialysis, Vision Coverage.",
      requirements:
        "Needed to convey the category of service or product for which eligibility is sought.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.category",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "BenefitCategory",
          },
        ],
        strength: "example",
        description: "Benefit categories such as: oral, medical, vision etc.",
        valueSet: "http://hl7.org/fhir/ValueSet/ex-benefitcategory",
      },
    },
    dataPath: "root.insurance.item.category",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.category",
    baseId: "CoverageEligibilityResponse.insurance.item.category",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "1",
        display: "Medical Care",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "2",
        display: "Surgical",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "3",
        display: "Consultation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "4",
        display: "Diagnostic XRay",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "5",
        display: "Diagnostic Lab",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "14",
        display: "Renal Supplies",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "23",
        display: "Diagnostic Dental",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "24",
        display: "Periodontics",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "25",
        display: "Restorative",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "26",
        display: "Endodontics",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "27",
        display: "Maxillofacial Prosthetics",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "28",
        display: "Adjunctive Dental Services",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "30",
        display: "Health Benefit Plan Coverage",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "35",
        display: "Dental Care",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "36",
        display: "Dental Crowns",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "37",
        display: "Dental Accident",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "49",
        display: "Hospital Room and Board",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "55",
        display: "Major Medical",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "56",
        display: "Medically Related Transportation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "61",
        display: "In-vitro Fertilization",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "62",
        display: "MRI Scan",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "63",
        display: "Donor Procedures",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "69",
        display: "Maternity",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "76",
        display: "Renal Dialysis",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "F1",
        display: "Medical Coverage",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "F3",
        display: "Dental Coverage",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "F4",
        display: "Hearing Coverage",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-benefitcategory",
        code: "F6",
        display: "Vision Coverage",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.productOrService",
      path: "CoverageEligibilityResponse.insurance.item.productOrService",
      short: "Billing, service, product, or drug code",
      definition:
        "This contains the product, service, drug or other billing code for the item.",
      comment:
        "Code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI).",
      requirements:
        "Needed to convey the actual service or product for which eligibility is sought.",
      alias: ["Drug Code", "Bill Code", "Service Code"],
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.productOrService",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ServiceProduct",
          },
        ],
        strength: "example",
        description: "Allowable service and product codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/service-uscls",
      },
    },
    dataPath: "root.insurance.item.productOrService",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.productOrService",
    baseId: "CoverageEligibilityResponse.insurance.item.productOrService",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1101",
        display: "Exam, comp, primary",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1102",
        display: "Exam, comp, mixed",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1103",
        display: "Exam, comp, permanent",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1201",
        display: "Exam, recall",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "1205",
        display: "Exam, emergency",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2101",
        display: "Radiograph, series (12)",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2102",
        display: "Radiograph, series (16)",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2141",
        display: "Radiograph, bitewing",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "2601",
        display: "Radiograph, panoramic",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11101",
        display: "Polishing, 1 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11102",
        display: "Polishing, 2 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11103",
        display: "Polishing, 3 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "11104",
        display: "Polishing, 4 unit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "21211",
        display: "Amalgam, 1 surface",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "21212",
        display: "Amalgam, 2 surface",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "27211",
        display: "Crown, PFM",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "67211",
        display: "Maryland Bridge",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99111",
        display: "Lab, commercial",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99333",
        display: "Lab, in office",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/ex-USCLS",
        code: "99555",
        display: "Expense",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.modifier",
      path: "CoverageEligibilityResponse.insurance.item.modifier",
      short: "Product or service billing modifiers",
      definition:
        "Item typification or modifiers codes to convey additional context for the product or service.",
      comment:
        "For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or out of office hours.",
      requirements:
        "To support provision of the item or to charge an elevated fee.",
      min: 0,
      max: "*",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.modifier",
        min: 0,
        max: "*",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Modifiers",
          },
        ],
        strength: "example",
        description:
          "Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen.",
        valueSet: "http://hl7.org/fhir/ValueSet/claim-modifiers",
      },
    },
    dataPath: "root.insurance.item.modifier[0]",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.modifier",
    baseId: "CoverageEligibilityResponse.insurance.item.modifier",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "a",
        display: "Repair of prior service or installation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "b",
        display: "Temporary service or installation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "c",
        display: "TMJ treatment",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "e",
        display: "Implant or associated with an implant",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "rooh",
        display: "Rush or Outside of office hours",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
        code: "x",
        display: "None",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.excluded",
      path: "CoverageEligibilityResponse.insurance.item.excluded",
      short: "Excluded from the plan",
      definition:
        "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
      requirements:
        "Needed to identify items that are specifically excluded from the coverage.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.excluded",
        min: 0,
        max: "1",
      },
      type: [{ code: "boolean" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.item.excluded",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.excluded",
    baseId: "CoverageEligibilityResponse.insurance.item.excluded",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.name",
      path: "CoverageEligibilityResponse.insurance.item.name",
      short: "Short name for the benefit",
      definition: "A short name or tag for the benefit.",
      comment: "For example: MED01, or DENT2.",
      requirements: "Required to align with other plan names.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.name",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.item.name",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.name",
    baseId: "CoverageEligibilityResponse.insurance.item.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.description",
      path: "CoverageEligibilityResponse.insurance.item.description",
      short: "Description of the benefit or services covered",
      definition: "A richer description of the benefit or services covered.",
      comment:
        "For example 'DENT2 covers 100% of basic, 50% of major but excludes Ortho, Implants and Cosmetic services'.",
      requirements: "Needed for human readable reference.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.description",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.item.description",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.description",
    baseId: "CoverageEligibilityResponse.insurance.item.description",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.network",
      path: "CoverageEligibilityResponse.insurance.item.network",
      short: "In or out of network",
      definition:
        "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
      requirements:
        "Needed as in or out of network providers are treated differently under the coverage.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.network",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "BenefitNetwork",
          },
        ],
        strength: "example",
        description: "Code to classify in or out of network services.",
        valueSet: "http://hl7.org/fhir/ValueSet/benefit-network",
      },
    },
    dataPath: "root.insurance.item.network",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.network",
    baseId: "CoverageEligibilityResponse.insurance.item.network",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-network",
        code: "in",
        display: "In Network",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-network",
        code: "out",
        display: "Out of Network",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.unit",
      path: "CoverageEligibilityResponse.insurance.item.unit",
      short: "Individual or family",
      definition:
        "Indicates if the benefits apply to an individual or to the family.",
      requirements: "Needed for the understanding of the benefits.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.unit",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "BenefitUnit",
          },
        ],
        strength: "example",
        description: "Unit covered/serviced - individual or family.",
        valueSet: "http://hl7.org/fhir/ValueSet/benefit-unit",
      },
    },
    dataPath: "root.insurance.item.unit",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.unit",
    baseId: "CoverageEligibilityResponse.insurance.item.unit",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-unit",
        code: "individual",
        display: "Individual",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-unit",
        code: "family",
        display: "Family",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.term",
      path: "CoverageEligibilityResponse.insurance.item.term",
      short: "Annual or lifetime",
      definition:
        "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.",
      requirements: "Needed for the understanding of the benefits.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.term",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "BenefitTerm",
          },
        ],
        strength: "example",
        description: "Coverage unit - annual, lifetime.",
        valueSet: "http://hl7.org/fhir/ValueSet/benefit-term",
      },
    },
    dataPath: "root.insurance.item.term",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.term",
    baseId: "CoverageEligibilityResponse.insurance.item.term",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-term",
        code: "annual",
        display: "Annual",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-term",
        code: "day",
        display: "Day",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-term",
        code: "lifetime",
        display: "Lifetime",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.benefit",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-display-hint",
          valueString: "340;320",
        },
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Benefit",
        },
      ],
      path: "CoverageEligibilityResponse.insurance.item.benefit",
      short: "Benefit Summary",
      definition: "Benefits used to date.",
      min: 0,
      max: "*",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.benefit",
        min: 0,
        max: "*",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.item.benefit[0]",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.benefit",
    baseId: "CoverageEligibilityResponse.insurance.item.benefit",
    isPrimitive: false,
    childPaths: [
      "root.insurance.item.benefit.type",
      "root.insurance.item.benefit.allowed[x]",
      "root.insurance.item.benefit.used[x]",
    ],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.benefit.type",
      path: "CoverageEligibilityResponse.insurance.item.benefit.type",
      short: "Benefit classification",
      definition: "Classification of benefit being provided.",
      comment: "For example: deductible, visits, benefit amount.",
      requirements: "Needed to convey the nature of the benefit.",
      min: 1,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.benefit.type",
        min: 1,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "BenefitType",
          },
        ],
        strength: "example",
        description: "Deductable, visits, co-pay, etc.",
        valueSet: "http://hl7.org/fhir/ValueSet/benefit-type",
      },
    },
    dataPath: "root.insurance.item.benefit.type",
    parentDataPath: "root.insurance.item.benefit[0]",
    basePath: "root.type",
    baseId: "CoverageEligibilityResponse.insurance.item.benefit.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "benefit",
        display: "Benefit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "deductible",
        display: "Deductible",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "visit",
        display: "Visit",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "room",
        display: "Room",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "copay",
        display: "Copayment per service",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "copay-percent",
        display: "Copayment Percent per service",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "copay-maximum",
        display: "Copayment maximum per service",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "vision-exam",
        display: "Vision Exam",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "vision-glasses",
        display: "Vision Glasses",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "vision-contacts",
        display: "Vision Contacts Coverage",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "medical-primarycare",
        display: "Medical Primary Health Coverage",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/benefit-type",
        code: "pharmacy-dispense",
        display: "Pharmacy Dispense Coverage",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.benefit.used[x]",
      path: "CoverageEligibilityResponse.insurance.item.benefit.used[x]",
      short: "Benefits used",
      definition:
        "The quantity of the benefit which have been consumed to date.",
      requirements: "Needed to convey the benefits consumed to date.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.benefit.used[x]",
        min: 0,
        max: "1",
      },
      type: [{ code: "unsignedInt" }, { code: "string" }, { code: "Money" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.item.benefit.used[x]",
    parentDataPath: "root.insurance.item.benefit[0]",
    basePath: "root.used[x]",
    baseId: "CoverageEligibilityResponse.insurance.item.benefit.used[x]",
    isPrimitive: false,
    childPaths: [],
    multiTypeType: "unsignedInt",
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.authorizationRequired",
      path: "CoverageEligibilityResponse.insurance.item.authorizationRequired",
      short: "Authorization required flag",
      definition:
        "A boolean flag indicating whether a preauthorization is required prior to actual service delivery.",
      requirements: "Needed to convey that preauthorization is required.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.authorizationRequired",
        min: 0,
        max: "1",
      },
      type: [{ code: "boolean" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.item.authorizationRequired",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.authorizationRequired",
    baseId: "CoverageEligibilityResponse.insurance.item.authorizationRequired",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.authorizationSupporting",
      path: "CoverageEligibilityResponse.insurance.item.authorizationSupporting",
      short: "Type of required supporting materials",
      definition:
        "Codes or comments regarding information or actions associated with the preauthorization.",
      requirements:
        "Needed to inform the provider of collateral materials or actions needed for preauthorization.",
      min: 0,
      max: "*",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.authorizationSupporting",
        min: 0,
        max: "*",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AuthSupporting",
          },
        ],
        strength: "example",
        description:
          "Type of supporting information to provide with a preauthorization.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/coverageeligibilityresponse-ex-auth-support",
      },
    },
    dataPath: "root.insurance.item.authorizationSupporting[0]",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.authorizationSupporting",
    baseId:
      "CoverageEligibilityResponse.insurance.item.authorizationSupporting",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system:
          "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
        code: "laborder",
        display: "Lab Order",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
        code: "labreport",
        display: "Lab Report",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
        code: "diagnosticimageorder",
        display: "Diagnostic Image Order",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
        code: "diagnosticimagereport",
        display: "Diagnostic Image Report",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
        code: "professionalreport",
        display: "Professional Report",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
        code: "accidentreport",
        display: "Accident Report",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
        code: "model",
        display: "Model",
      },
      {
        system:
          "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
        code: "picture",
        display: "Picture",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.insurance.item.authorizationUrl",
      path: "CoverageEligibilityResponse.insurance.item.authorizationUrl",
      short: "Preauthorization requirements endpoint",
      definition:
        "A web location for obtaining requirements or descriptive information regarding the preauthorization.",
      requirements:
        "Needed to enable insurers to advise providers of informative information.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.insurance.item.authorizationUrl",
        min: 0,
        max: "1",
      },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.insurance.item.authorizationUrl",
    parentDataPath: "root.insurance.item[0]",
    basePath: "root.authorizationUrl",
    baseId: "CoverageEligibilityResponse.insurance.item.authorizationUrl",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.preAuthRef",
      path: "CoverageEligibilityResponse.preAuthRef",
      short: "Preauthorization reference",
      definition:
        "A reference from the Insurer to which these services pertain to be used on further communication and as proof that the request occurred.",
      requirements:
        "To provide any preauthorization reference for provider use.",
      min: 0,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.preAuthRef",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "cdanetv4", map: "F03" },
        { identity: "rim", map: "23" },
      ],
    },
    dataPath: "root.preAuthRef",
    parentDataPath: "root",
    basePath: "root.preAuthRef",
    baseId: "CoverageEligibilityResponse.preAuthRef",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.form",
      path: "CoverageEligibilityResponse.form",
      short: "Printed form identifier",
      definition: "A code for the form to be used for printing the content.",
      comment: "May be needed to identify specific jurisdictional forms.",
      requirements:
        "Needed to specify the specific form used for producing output for this response.",
      min: 0,
      max: "1",
      base: { path: "CoverageEligibilityResponse.form", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Forms",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "example",
        description: "The forms codes.",
        valueSet: "http://hl7.org/fhir/ValueSet/forms",
      },
      mapping: [{ identity: "cdanetv4", map: "G42" }],
    },
    dataPath: "root.form",
    parentDataPath: "root",
    basePath: "root.form",
    baseId: "CoverageEligibilityResponse.form",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/forms-codes",
        code: "1",
        display: "Form #1",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/forms-codes",
        code: "2",
        display: "Form #1",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse.error",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Errors",
        },
      ],
      path: "CoverageEligibilityResponse.error",
      short: "Processing errors",
      definition: "Errors encountered during the processing of the request.",
      requirements: "Need to communicate processing issues to the requestor.",
      min: 0,
      max: "*",
      base: { path: "CoverageEligibilityResponse.error", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.error[0]",
    parentDataPath: "root",
    basePath: "root.error",
    baseId: "CoverageEligibilityResponse.error",
    isPrimitive: false,
    childPaths: ["root.error.code"],
    value: "",
  },
  {
    element: {
      id: "CoverageEligibilityResponse.error.code",
      path: "CoverageEligibilityResponse.error.code",
      short: "Error code detailing processing issues",
      definition:
        "An error code,from a specified code system, which details why the eligibility check could not be performed.",
      requirements: "Required to convey processing errors.",
      min: 1,
      max: "1",
      base: {
        path: "CoverageEligibilityResponse.error.code",
        min: 1,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdjudicationError",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "example",
        description: "The error codes for adjudication processing.",
        valueSet: "http://hl7.org/fhir/ValueSet/adjudication-error",
      },
    },
    dataPath: "root.error.code",
    parentDataPath: "root.error[0]",
    basePath: "root.code",
    baseId: "CoverageEligibilityResponse.error.code",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication-error",
        code: "a001",
        display: "Missing Identifier",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/adjudication-error",
        code: "a002",
        display: "Missing Creation Date",
      },
    ],
  },
  {
    element: {
      id: "CoverageEligibilityResponse",
      path: "CoverageEligibilityResponse",
      short: "CoverageEligibilityResponse resource",
      definition:
        "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
      min: 0,
      max: "*",
      base: { path: "CoverageEligibilityResponse", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Event" },
        { identity: "w5", map: "financial.support" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "CoverageEligibilityResponse",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
