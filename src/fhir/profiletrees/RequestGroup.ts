const data = [
  {
    element: {
      id: "RequestGroup.meta",
      path: "RequestGroup.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "RequestGroup.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.implicitRules",
      path: "RequestGroup.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "RequestGroup.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.language",
      path: "RequestGroup.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "RequestGroup.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "RequestGroup.contained",
      path: "RequestGroup.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/RequestGroup",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "RequestGroup.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.instantiatesCanonical",
      path: "RequestGroup.instantiatesCanonical",
      short: "Instantiates FHIR protocol or definition",
      definition:
        "A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.",
      min: 0,
      max: "*",
      base: { path: "RequestGroup.instantiatesCanonical", min: 0, max: "*" },
      type: [{ code: "canonical" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "workflow", map: "Request.instantiatesCanonical" }],
    },
    dataPath: "root.instantiatesCanonical[0]",
    parentDataPath: "root",
    basePath: "root.instantiatesCanonical",
    baseId: "RequestGroup.instantiatesCanonical",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.instantiatesUri",
      path: "RequestGroup.instantiatesUri",
      short: "Instantiates external protocol or definition",
      definition:
        "A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.",
      min: 0,
      max: "*",
      base: { path: "RequestGroup.instantiatesUri", min: 0, max: "*" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "workflow", map: "Request.instantiatesUri" }],
    },
    dataPath: "root.instantiatesUri[0]",
    parentDataPath: "root",
    basePath: "root.instantiatesUri",
    baseId: "RequestGroup.instantiatesUri",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.replaces",
      path: "RequestGroup.replaces",
      short: "Request(s) replaced by this request",
      definition:
        "Completed or terminated request(s) whose function is taken by this new request.",
      comment:
        "The replacement could be because the initial request was immediately rejected (due to an issue) or because the previous request was completed, but the need for the action described by the request remains ongoing.",
      requirements:
        "Allows tracing the continuation of a therapy or administrative process instantiated through multiple requests.",
      alias: ["supersedes", "prior", "renewed order"],
      min: 0,
      max: "*",
      base: { path: "RequestGroup.replaces", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Resource"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Request.replaces" }],
    },
    dataPath: "root.replaces[0]",
    parentDataPath: "root",
    basePath: "root.replaces",
    baseId: "RequestGroup.replaces",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.status",
      path: "RequestGroup.status",
      short:
        "draft | active | on-hold | revoked | completed | entered-in-error | unknown",
      definition:
        "The current state of the request. For request groups, the status reflects the status of all the requests in the group.",
      min: 1,
      max: "1",
      base: { path: "RequestGroup.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "RequestStatus",
          },
        ],
        strength: "required",
        description: "Codes identifying the lifecycle stage of a request.",
        valueSet: "http://hl7.org/fhir/ValueSet/request-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Request.status" },
        { identity: "w5", map: "FiveWs.status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "RequestGroup.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/request-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "on-hold",
        display: "On Hold",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "revoked",
        display: "Revoked",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "completed",
        display: "Completed",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
      {
        system: "http://hl7.org/fhir/request-status",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.intent",
      path: "RequestGroup.intent",
      short:
        "proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option",
      definition:
        "Indicates the level of authority/intentionality associated with the request and where the request fits into the workflow chain.",
      requirements:
        "Proposals/recommendations, plans and orders all use the same structure and can exist in the same fulfillment chain.",
      alias: ["category"],
      min: 1,
      max: "1",
      base: { path: "RequestGroup.intent", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        'This element changes the interpretation of all descriptive attributes. For example "the time the request is recommended to occur" vs. "the time the request is authorized to occur" or "who is recommended to perform the request" vs. "who is authorized to perform the request',
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "RequestIntent",
          },
        ],
        strength: "required",
        description:
          "Codes indicating the degree of authority/intentionality associated with a request.",
        valueSet: "http://hl7.org/fhir/ValueSet/request-intent|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Request.intent" },
        { identity: "w5", map: "FiveWs.class" },
      ],
    },
    dataPath: "root.intent",
    parentDataPath: "root",
    basePath: "root.intent",
    baseId: "RequestGroup.intent",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "proposal",
        display: "Proposal",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "plan",
        display: "Plan",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "directive",
        display: "Directive",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "order",
        display: "Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "original-order",
        display: "Original Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "reflex-order",
        display: "Reflex Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "filler-order",
        display: "Filler Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "instance-order",
        display: "Instance Order",
      },
      {
        system: "http://hl7.org/fhir/request-intent",
        code: "option",
        display: "Option",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.priority",
      path: "RequestGroup.priority",
      short: "routine | urgent | asap | stat",
      definition:
        "Indicates how quickly the request should be addressed with respect to other requests.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.priority", min: 0, max: "1" },
      type: [{ code: "code" }],
      meaningWhenMissing:
        "If missing, this request should be performed with normal priority",
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "RequestPriority",
          },
        ],
        strength: "required",
        description:
          "Identifies the level of importance to be assigned to actioning the request.",
        valueSet: "http://hl7.org/fhir/ValueSet/request-priority|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Request.priority" },
        { identity: "w5", map: "FiveWs.grade" },
      ],
    },
    dataPath: "root.priority",
    parentDataPath: "root",
    basePath: "root.priority",
    baseId: "RequestGroup.priority",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "routine",
        display: "Routine",
      },
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "urgent",
        display: "Urgent",
      },
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "asap",
        display: "ASAP",
      },
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "stat",
        display: "STAT",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.subject",
      path: "RequestGroup.subject",
      short: "Who the request group is about",
      definition: "The subject for which the request group was created.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.subject", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Patient",
            "http://hl7.org/fhir/StructureDefinition/Group",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Request.subject" },
        { identity: "w5", map: "FiveWs.subject[x]" },
        { identity: "w5", map: "FiveWs.subject" },
      ],
    },
    dataPath: "root.subject",
    parentDataPath: "root",
    basePath: "root.subject",
    baseId: "RequestGroup.subject",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.authoredOn",
      path: "RequestGroup.authoredOn",
      short: "When the request group was authored",
      definition: "Indicates when the request group was created.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.authoredOn", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Request.authoredOn" },
        { identity: "w5", map: "FiveWs.recorded" },
      ],
    },
    dataPath: "root.authoredOn",
    parentDataPath: "root",
    basePath: "root.authoredOn",
    baseId: "RequestGroup.authoredOn",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.reasonCode",
      path: "RequestGroup.reasonCode",
      short: "Why the request group is needed",
      definition:
        "Describes the reason for the request group in coded or textual form.",
      min: 0,
      max: "*",
      base: { path: "RequestGroup.reasonCode", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Request.reasonCode" },
        { identity: "w5", map: "FiveWs.why[x]" },
      ],
    },
    dataPath: "root.reasonCode[0]",
    parentDataPath: "root",
    basePath: "root.reasonCode",
    baseId: "RequestGroup.reasonCode",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.note",
      path: "RequestGroup.note",
      short: "Additional notes about the response",
      definition:
        "Provides a mechanism to communicate additional information about the response.",
      min: 0,
      max: "*",
      base: { path: "RequestGroup.note", min: 0, max: "*" },
      type: [{ code: "Annotation" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Request.note" }],
    },
    dataPath: "root.note[0]",
    parentDataPath: "root",
    basePath: "root.note",
    baseId: "RequestGroup.note",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action",
      path: "RequestGroup.action",
      short: "Proposed actions, if any",
      definition:
        "The actions, if any, produced by the evaluation of the artifact.",
      min: 0,
      max: "*",
      base: { path: "RequestGroup.action", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
        {
          key: "rqg-1",
          severity: "error",
          human: "Must have resource or action but not both",
          expression: "resource.exists() != action.exists()",
          xpath: "exists(f:resource) != exists(f:action)",
          source: "http://hl7.org/fhir/StructureDefinition/RequestGroup",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.action[0]",
    parentDataPath: "root",
    basePath: "root.action",
    baseId: "RequestGroup.action",
    isPrimitive: false,
    childPaths: [
      "root.action.prefix",
      "root.action.title",
      "root.action.description",
      "root.action.textEquivalent",
      "root.action.priority",
      "root.action.code[0]",
      "root.action.documentation[0]",
      "root.action.condition[0]",
      "root.action.relatedAction[0]",
      "root.action.timing[x]",
      "root.action.participant[0]",
      "root.action.type",
      "root.action.groupingBehavior",
      "root.action.selectionBehavior",
      "root.action.requiredBehavior",
      "root.action.precheckBehavior",
      "root.action.cardinalityBehavior",
      "root.action.resource",
      "root.action.action[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.prefix",
      path: "RequestGroup.action.prefix",
      short: "User-visible prefix for the action (e.g. 1. or A.)",
      definition: "A user-visible prefix for the action.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.prefix", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.action.prefix",
    parentDataPath: "root.action[0]",
    basePath: "root.prefix",
    baseId: "RequestGroup.action.prefix",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.title",
      path: "RequestGroup.action.title",
      short: "User-visible title",
      definition: "The title of the action displayed to a user.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.title", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.action.title",
    parentDataPath: "root.action[0]",
    basePath: "root.title",
    baseId: "RequestGroup.action.title",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.description",
      path: "RequestGroup.action.description",
      short: "Short description of the action",
      definition:
        "A short description of the action used to provide a summary to display to the user.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.description", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.action.description",
    parentDataPath: "root.action[0]",
    basePath: "root.description",
    baseId: "RequestGroup.action.description",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.textEquivalent",
      path: "RequestGroup.action.textEquivalent",
      short:
        "Static text equivalent of the action, used if the dynamic aspects cannot be interpreted by the receiving system",
      definition:
        "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.textEquivalent", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.action.textEquivalent",
    parentDataPath: "root.action[0]",
    basePath: "root.textEquivalent",
    baseId: "RequestGroup.action.textEquivalent",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.priority",
      path: "RequestGroup.action.priority",
      short: "routine | urgent | asap | stat",
      definition:
        "Indicates how quickly the action should be addressed with respect to other actions.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.priority", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "RequestPriority",
          },
        ],
        strength: "required",
        description:
          "Identifies the level of importance to be assigned to actioning the request.",
        valueSet: "http://hl7.org/fhir/ValueSet/request-priority|4.3.0",
      },
      mapping: [{ identity: "workflow", map: "Request.priority" }],
    },
    dataPath: "root.action.priority",
    parentDataPath: "root.action[0]",
    basePath: "root.priority",
    baseId: "RequestGroup.action.priority",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "routine",
        display: "Routine",
      },
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "urgent",
        display: "Urgent",
      },
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "asap",
        display: "ASAP",
      },
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "stat",
        display: "STAT",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.action.documentation",
      path: "RequestGroup.action.documentation",
      short:
        "Supporting documentation for the intended performer of the action",
      definition:
        "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
      min: 0,
      max: "*",
      base: { path: "RequestGroup.action.documentation", min: 0, max: "*" },
      type: [{ code: "RelatedArtifact" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Request.supportingInfo" }],
    },
    dataPath: "root.action.documentation[0]",
    parentDataPath: "root.action[0]",
    basePath: "root.documentation",
    baseId: "RequestGroup.action.documentation",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.condition",
      path: "RequestGroup.action.condition",
      short: "Whether or not the action is applicable",
      definition:
        "An expression that describes applicability criteria, or start/stop conditions for the action.",
      comment:
        "When multiple conditions of the same kind are present, the effects are combined using AND semantics, so the overall condition is true only if all of the conditions are true.",
      min: 0,
      max: "*",
      base: { path: "RequestGroup.action.condition", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.action.condition[0]",
    parentDataPath: "root.action[0]",
    basePath: "root.condition",
    baseId: "RequestGroup.action.condition",
    isPrimitive: false,
    childPaths: [
      "root.action.condition.kind",
      "root.action.condition.expression",
    ],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.condition.kind",
      path: "RequestGroup.action.condition.kind",
      short: "applicability | start | stop",
      definition: "The kind of condition.",
      comment:
        "Applicability criteria are used to determine immediate applicability when a plan definition is applied to a given context. Start and stop criteria are carried through application and used to describe enter/exit criteria for an action.",
      min: 1,
      max: "1",
      base: { path: "RequestGroup.action.condition.kind", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ActionConditionKind",
          },
        ],
        strength: "required",
        description: "The kind of condition for the action.",
        valueSet: "http://hl7.org/fhir/ValueSet/action-condition-kind|4.3.0",
      },
    },
    dataPath: "root.action.condition.kind",
    parentDataPath: "root.action.condition[0]",
    basePath: "root.kind",
    baseId: "RequestGroup.action.condition.kind",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/action-condition-kind",
        code: "applicability",
        display: "Applicability",
      },
      {
        system: "http://hl7.org/fhir/action-condition-kind",
        code: "start",
        display: "Start",
      },
      {
        system: "http://hl7.org/fhir/action-condition-kind",
        code: "stop",
        display: "Stop",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.action.relatedAction",
      path: "RequestGroup.action.relatedAction",
      short: "Relationship to another action",
      definition:
        'A relationship to another action such as "before" or "30-60 minutes after start of".',
      min: 0,
      max: "*",
      base: { path: "RequestGroup.action.relatedAction", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.action.relatedAction[0]",
    parentDataPath: "root.action[0]",
    basePath: "root.relatedAction",
    baseId: "RequestGroup.action.relatedAction",
    isPrimitive: false,
    childPaths: [
      "root.action.relatedAction.actionId",
      "root.action.relatedAction.relationship",
      "root.action.relatedAction.offset[x]",
    ],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.relatedAction.actionId",
      path: "RequestGroup.action.relatedAction.actionId",
      short: "What action this is related to",
      definition: "The element id of the action this is related to.",
      min: 1,
      max: "1",
      base: {
        path: "RequestGroup.action.relatedAction.actionId",
        min: 1,
        max: "1",
      },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.action.relatedAction.actionId",
    parentDataPath: "root.action.relatedAction[0]",
    basePath: "root.actionId",
    baseId: "RequestGroup.action.relatedAction.actionId",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.relatedAction.relationship",
      path: "RequestGroup.action.relatedAction.relationship",
      short:
        "before-start | before | before-end | concurrent-with-start | concurrent | concurrent-with-end | after-start | after | after-end",
      definition: "The relationship of this action to the related action.",
      min: 1,
      max: "1",
      base: {
        path: "RequestGroup.action.relatedAction.relationship",
        min: 1,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ActionRelationshipType",
          },
        ],
        strength: "required",
        description: "Defines the types of relationships between actions.",
        valueSet: "http://hl7.org/fhir/ValueSet/action-relationship-type|4.3.0",
      },
    },
    dataPath: "root.action.relatedAction.relationship",
    parentDataPath: "root.action.relatedAction[0]",
    basePath: "root.relationship",
    baseId: "RequestGroup.action.relatedAction.relationship",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/action-relationship-type",
        code: "before-start",
        display: "Before Start",
      },
      {
        system: "http://hl7.org/fhir/action-relationship-type",
        code: "before",
        display: "Before",
      },
      {
        system: "http://hl7.org/fhir/action-relationship-type",
        code: "before-end",
        display: "Before End",
      },
      {
        system: "http://hl7.org/fhir/action-relationship-type",
        code: "concurrent-with-start",
        display: "Concurrent With Start",
      },
      {
        system: "http://hl7.org/fhir/action-relationship-type",
        code: "concurrent",
        display: "Concurrent",
      },
      {
        system: "http://hl7.org/fhir/action-relationship-type",
        code: "concurrent-with-end",
        display: "Concurrent With End",
      },
      {
        system: "http://hl7.org/fhir/action-relationship-type",
        code: "after-start",
        display: "After Start",
      },
      {
        system: "http://hl7.org/fhir/action-relationship-type",
        code: "after",
        display: "After",
      },
      {
        system: "http://hl7.org/fhir/action-relationship-type",
        code: "after-end",
        display: "After End",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.action.timing[x]",
      path: "RequestGroup.action.timing[x]",
      short: "When the action should take place",
      definition:
        "An optional value describing when the action should be performed.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.timing[x]", min: 0, max: "1" },
      type: [
        { code: "dateTime" },
        { code: "Age" },
        { code: "Period" },
        { code: "Duration" },
        { code: "Range" },
        { code: "Timing" },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Request.occurrence[x]" }],
    },
    dataPath: "root.action.timing[x]",
    parentDataPath: "root.action[0]",
    basePath: "root.timing[x]",
    baseId: "RequestGroup.action.timing[x]",
    isPrimitive: false,
    childPaths: [],
    multiTypeType: "dateTime",
    value: "",
  },
  {
    element: {
      id: "RequestGroup.action.type",
      path: "RequestGroup.action.type",
      short: "create | update | remove | fire-event",
      definition: "The type of action to perform (create, update, remove).",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.type", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ActionType",
          },
        ],
        strength: "extensible",
        description: "The type of action to be performed.",
        valueSet: "http://hl7.org/fhir/ValueSet/action-type",
      },
    },
    dataPath: "root.action.type",
    parentDataPath: "root.action[0]",
    basePath: "root.type",
    baseId: "RequestGroup.action.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/action-type",
        code: "create",
        display: "Create",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/action-type",
        code: "update",
        display: "Update",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/action-type",
        code: "remove",
        display: "Remove",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/action-type",
        code: "fire-event",
        display: "Fire Event",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.action.groupingBehavior",
      path: "RequestGroup.action.groupingBehavior",
      short: "visual-group | logical-group | sentence-group",
      definition:
        "Defines the grouping behavior for the action and its children.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.groupingBehavior", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ActionGroupingBehavior",
          },
        ],
        strength: "required",
        description: "Defines organization behavior of a group.",
        valueSet: "http://hl7.org/fhir/ValueSet/action-grouping-behavior|4.3.0",
      },
    },
    dataPath: "root.action.groupingBehavior",
    parentDataPath: "root.action[0]",
    basePath: "root.groupingBehavior",
    baseId: "RequestGroup.action.groupingBehavior",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/action-grouping-behavior",
        code: "visual-group",
        display: "Visual Group",
      },
      {
        system: "http://hl7.org/fhir/action-grouping-behavior",
        code: "logical-group",
        display: "Logical Group",
      },
      {
        system: "http://hl7.org/fhir/action-grouping-behavior",
        code: "sentence-group",
        display: "Sentence Group",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.action.selectionBehavior",
      path: "RequestGroup.action.selectionBehavior",
      short:
        "any | all | all-or-none | exactly-one | at-most-one | one-or-more",
      definition:
        "Defines the selection behavior for the action and its children.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.selectionBehavior", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ActionSelectionBehavior",
          },
        ],
        strength: "required",
        description: "Defines selection behavior of a group.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/action-selection-behavior|4.3.0",
      },
    },
    dataPath: "root.action.selectionBehavior",
    parentDataPath: "root.action[0]",
    basePath: "root.selectionBehavior",
    baseId: "RequestGroup.action.selectionBehavior",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/action-selection-behavior",
        code: "any",
        display: "Any",
      },
      {
        system: "http://hl7.org/fhir/action-selection-behavior",
        code: "all",
        display: "All",
      },
      {
        system: "http://hl7.org/fhir/action-selection-behavior",
        code: "all-or-none",
        display: "All Or None",
      },
      {
        system: "http://hl7.org/fhir/action-selection-behavior",
        code: "exactly-one",
        display: "Exactly One",
      },
      {
        system: "http://hl7.org/fhir/action-selection-behavior",
        code: "at-most-one",
        display: "At Most One",
      },
      {
        system: "http://hl7.org/fhir/action-selection-behavior",
        code: "one-or-more",
        display: "One Or More",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.action.requiredBehavior",
      path: "RequestGroup.action.requiredBehavior",
      short: "must | could | must-unless-documented",
      definition: "Defines expectations around whether an action is required.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.requiredBehavior", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ActionRequiredBehavior",
          },
        ],
        strength: "required",
        description:
          "Defines expectations around whether an action or action group is required.",
        valueSet: "http://hl7.org/fhir/ValueSet/action-required-behavior|4.3.0",
      },
    },
    dataPath: "root.action.requiredBehavior",
    parentDataPath: "root.action[0]",
    basePath: "root.requiredBehavior",
    baseId: "RequestGroup.action.requiredBehavior",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/action-required-behavior",
        code: "must",
        display: "Must",
      },
      {
        system: "http://hl7.org/fhir/action-required-behavior",
        code: "could",
        display: "Could",
      },
      {
        system: "http://hl7.org/fhir/action-required-behavior",
        code: "must-unless-documented",
        display: "Must Unless Documented",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.action.precheckBehavior",
      path: "RequestGroup.action.precheckBehavior",
      short: "yes | no",
      definition: "Defines whether the action should usually be preselected.",
      min: 0,
      max: "1",
      base: { path: "RequestGroup.action.precheckBehavior", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ActionPrecheckBehavior",
          },
        ],
        strength: "required",
        description:
          "Defines selection frequency behavior for an action or group.",
        valueSet: "http://hl7.org/fhir/ValueSet/action-precheck-behavior|4.3.0",
      },
    },
    dataPath: "root.action.precheckBehavior",
    parentDataPath: "root.action[0]",
    basePath: "root.precheckBehavior",
    baseId: "RequestGroup.action.precheckBehavior",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/action-precheck-behavior",
        code: "yes",
        display: "Yes",
      },
      {
        system: "http://hl7.org/fhir/action-precheck-behavior",
        code: "no",
        display: "No",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.action.cardinalityBehavior",
      path: "RequestGroup.action.cardinalityBehavior",
      short: "single | multiple",
      definition: "Defines whether the action can be selected multiple times.",
      min: 0,
      max: "1",
      base: {
        path: "RequestGroup.action.cardinalityBehavior",
        min: 0,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ActionCardinalityBehavior",
          },
        ],
        strength: "required",
        description:
          "Defines behavior for an action or a group for how many times that item may be repeated.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/action-cardinality-behavior|4.3.0",
      },
    },
    dataPath: "root.action.cardinalityBehavior",
    parentDataPath: "root.action[0]",
    basePath: "root.cardinalityBehavior",
    baseId: "RequestGroup.action.cardinalityBehavior",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/action-cardinality-behavior",
        code: "single",
        display: "Single",
      },
      {
        system: "http://hl7.org/fhir/action-cardinality-behavior",
        code: "multiple",
        display: "Multiple",
      },
    ],
  },
  {
    element: {
      id: "RequestGroup.action.action",
      path: "RequestGroup.action.action",
      short: "Sub action",
      definition: "Sub actions.",
      min: 0,
      max: "*",
      base: { path: "RequestGroup.action.action", min: 0, max: "*" },
      contentReference: "#RequestGroup.action",
      condition: ["rqg-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.action.action[0]",
    parentDataPath: "root.action[0]",
    basePath: "root.action",
    baseId: "RequestGroup.action.action",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "RequestGroup",
      path: "RequestGroup",
      short: "A group of related requests",
      definition:
        'A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".',
      min: 0,
      max: "*",
      base: { path: "RequestGroup", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Request" },
        { identity: "w5", map: "clinical.general" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "RequestGroup",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
