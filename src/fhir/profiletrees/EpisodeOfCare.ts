const data = [
  {
    element: {
      id: "EpisodeOfCare.meta",
      path: "EpisodeOfCare.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "EpisodeOfCare.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "EpisodeOfCare.implicitRules",
      path: "EpisodeOfCare.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "EpisodeOfCare.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "EpisodeOfCare.language",
      path: "EpisodeOfCare.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "EpisodeOfCare.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "EpisodeOfCare.contained",
      path: "EpisodeOfCare.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "EpisodeOfCare.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "EpisodeOfCare.status",
      path: "EpisodeOfCare.status",
      short:
        "planned | waitlist | active | onhold | finished | cancelled | entered-in-error",
      definition:
        "planned | waitlist | active | onhold | finished | cancelled.",
      comment:
        "This element is labeled as a modifier because the status contains codes that mark the episode as not currently valid.",
      min: 1,
      max: "1",
      base: { path: "EpisodeOfCare.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labelled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "EpisodeOfCareStatus",
          },
        ],
        strength: "required",
        description: "The status of the episode of care.",
        valueSet: "http://hl7.org/fhir/ValueSet/episode-of-care-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Event.status" },
        { identity: "w5", map: "FiveWs.status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "EpisodeOfCare.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "planned",
        display: "Planned",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "waitlist",
        display: "Waitlist",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "onhold",
        display: "On Hold",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "finished",
        display: "Finished",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "cancelled",
        display: "Cancelled",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
    ],
  },
  {
    element: {
      id: "EpisodeOfCare.statusHistory",
      path: "EpisodeOfCare.statusHistory",
      short:
        "Past list of status codes (the current status may be included to cover the start date of the status)",
      definition:
        "The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource).",
      min: 0,
      max: "*",
      base: { path: "EpisodeOfCare.statusHistory", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.statusHistory[0]",
    parentDataPath: "root",
    basePath: "root.statusHistory",
    baseId: "EpisodeOfCare.statusHistory",
    isPrimitive: false,
    childPaths: ["root.statusHistory.status", "root.statusHistory.period"],
    value: "",
  },
  {
    element: {
      id: "EpisodeOfCare.statusHistory.status",
      path: "EpisodeOfCare.statusHistory.status",
      short:
        "planned | waitlist | active | onhold | finished | cancelled | entered-in-error",
      definition:
        "planned | waitlist | active | onhold | finished | cancelled.",
      min: 1,
      max: "1",
      base: { path: "EpisodeOfCare.statusHistory.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "EpisodeOfCareStatus",
          },
        ],
        strength: "required",
        description: "The status of the episode of care.",
        valueSet: "http://hl7.org/fhir/ValueSet/episode-of-care-status|4.3.0",
      },
    },
    dataPath: "root.statusHistory.status",
    parentDataPath: "root.statusHistory[0]",
    basePath: "root.status",
    baseId: "EpisodeOfCare.statusHistory.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "planned",
        display: "Planned",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "waitlist",
        display: "Waitlist",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "onhold",
        display: "On Hold",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "finished",
        display: "Finished",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "cancelled",
        display: "Cancelled",
      },
      {
        system: "http://hl7.org/fhir/episode-of-care-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
    ],
  },
  {
    element: {
      id: "EpisodeOfCare.type",
      path: "EpisodeOfCare.type",
      short: "Type/class  - e.g. specialist referral, disease management",
      definition:
        "A classification of the type of episode of care; e.g. specialist referral, disease management, type of funded care.",
      comment:
        "The type can be very important in processing as this could be used in determining if the EpisodeOfCare is relevant to specific government reporting, or other types of classifications.",
      min: 0,
      max: "*",
      base: { path: "EpisodeOfCare.type", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "EpisodeOfCareType",
          },
        ],
        strength: "example",
        description: "The type of the episode of care.",
        valueSet: "http://hl7.org/fhir/ValueSet/episodeofcare-type",
      },
      mapping: [
        { identity: "workflow", map: "Event.code" },
        { identity: "w5", map: "FiveWs.class" },
      ],
    },
    dataPath: "root.type[0]",
    parentDataPath: "root",
    basePath: "root.type",
    baseId: "EpisodeOfCare.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/episodeofcare-type",
        code: "hacc",
        display: "Home and Community Care",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/episodeofcare-type",
        code: "pac",
        display: "Post Acute Care",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/episodeofcare-type",
        code: "diab",
        display: "Post coordinated diabetes program",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/episodeofcare-type",
        code: "da",
        display: "Drug and alcohol rehabilitation",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/episodeofcare-type",
        code: "cacp",
        display: "Community-based aged care",
      },
    ],
  },
  {
    element: {
      id: "EpisodeOfCare.diagnosis",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Diagnosis",
        },
      ],
      path: "EpisodeOfCare.diagnosis",
      short: "The list of diagnosis relevant to this episode of care",
      definition: "The list of diagnosis relevant to this episode of care.",
      min: 0,
      max: "*",
      base: { path: "EpisodeOfCare.diagnosis", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.diagnosis[0]",
    parentDataPath: "root",
    basePath: "root.diagnosis",
    baseId: "EpisodeOfCare.diagnosis",
    isPrimitive: false,
    childPaths: [
      "root.diagnosis.condition",
      "root.diagnosis.role",
      "root.diagnosis.rank",
    ],
    value: "",
  },
  {
    element: {
      id: "EpisodeOfCare.diagnosis.role",
      path: "EpisodeOfCare.diagnosis.role",
      short:
        "Role that this diagnosis has within the episode of care (e.g. admission, billing, discharge …)",
      definition:
        "Role that this diagnosis has within the episode of care (e.g. admission, billing, discharge …).",
      min: 0,
      max: "1",
      base: { path: "EpisodeOfCare.diagnosis.role", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "DiagnosisRole",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "The type of diagnosis this condition represents.",
        valueSet: "http://hl7.org/fhir/ValueSet/diagnosis-role",
      },
    },
    dataPath: "root.diagnosis.role",
    parentDataPath: "root.diagnosis[0]",
    basePath: "root.role",
    baseId: "EpisodeOfCare.diagnosis.role",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/diagnosis-role",
        code: "AD",
        display: "Admission diagnosis",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diagnosis-role",
        code: "DD",
        display: "Discharge diagnosis",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diagnosis-role",
        code: "CC",
        display: "Chief complaint",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diagnosis-role",
        code: "CM",
        display: "Comorbidity diagnosis",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diagnosis-role",
        code: "pre-op",
        display: "pre-op diagnosis",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diagnosis-role",
        code: "post-op",
        display: "post-op diagnosis",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/diagnosis-role",
        code: "billing",
        display: "Billing",
      },
    ],
  },
  {
    element: {
      id: "EpisodeOfCare.diagnosis.rank",
      path: "EpisodeOfCare.diagnosis.rank",
      short: "Ranking of the diagnosis (for each role type)",
      definition: "Ranking of the diagnosis (for each role type).",
      min: 0,
      max: "1",
      base: { path: "EpisodeOfCare.diagnosis.rank", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.diagnosis.rank",
    parentDataPath: "root.diagnosis[0]",
    basePath: "root.rank",
    baseId: "EpisodeOfCare.diagnosis.rank",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "EpisodeOfCare.managingOrganization",
      path: "EpisodeOfCare.managingOrganization",
      short: "Organization that assumes care",
      definition:
        "The organization that has assumed the specific responsibilities for the specified duration.",
      min: 0,
      max: "1",
      base: { path: "EpisodeOfCare.managingOrganization", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "workflow", map: "Event.performer.actor" }],
    },
    dataPath: "root.managingOrganization",
    parentDataPath: "root",
    basePath: "root.managingOrganization",
    baseId: "EpisodeOfCare.managingOrganization",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "EpisodeOfCare.referralRequest",
      path: "EpisodeOfCare.referralRequest",
      short: "Originating Referral Request(s)",
      definition:
        "Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals.",
      min: 0,
      max: "*",
      base: { path: "EpisodeOfCare.referralRequest", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/ServiceRequest",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Event.basedOn" }],
    },
    dataPath: "root.referralRequest[0]",
    parentDataPath: "root",
    basePath: "root.referralRequest",
    baseId: "EpisodeOfCare.referralRequest",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "EpisodeOfCare.team",
      path: "EpisodeOfCare.team",
      short: "Other practitioners facilitating this episode of care",
      definition:
        "The list of practitioners that may be facilitating this episode of care for specific purposes.",
      alias: ["CareTeam"],
      min: 0,
      max: "*",
      base: { path: "EpisodeOfCare.team", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/CareTeam"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Event.performer.actor" }],
    },
    dataPath: "root.team[0]",
    parentDataPath: "root",
    basePath: "root.team",
    baseId: "EpisodeOfCare.team",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "EpisodeOfCare",
      path: "EpisodeOfCare",
      short:
        "An association of a Patient with an Organization and  Healthcare Provider(s) for a period of time that the Organization assumes some level of responsibility",
      definition:
        "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.",
      alias: ["Case Program Problem"],
      min: 0,
      max: "*",
      base: { path: "EpisodeOfCare", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Event" },
        { identity: "rim", map: "n/a" },
        { identity: "w5", map: "workflow.encounter" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "EpisodeOfCare",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
