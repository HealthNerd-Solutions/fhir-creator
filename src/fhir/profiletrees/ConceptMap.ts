const data = [
  {
    element: {
      id: "ConceptMap.meta",
      path: "ConceptMap.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "ConceptMap.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.implicitRules",
      path: "ConceptMap.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "ConceptMap.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.language",
      path: "ConceptMap.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "ConceptMap.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "ConceptMap.contained",
      path: "ConceptMap.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/ConceptMap",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "ConceptMap.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.url",
      path: "ConceptMap.url",
      short:
        "Canonical identifier for this concept map, represented as a URI (globally unique)",
      definition:
        "An absolute URI that is used to identify this concept map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this concept map is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the concept map is stored on different servers.",
      comment:
        "Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.\n\nThe determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). \n\nIn some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.",
      requirements:
        "Allows the concept map to be referenced by a single globally unique identifier.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.url", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.url" },
        { identity: "w5", map: "FiveWs.identifier" },
      ],
    },
    dataPath: "root.url",
    parentDataPath: "root",
    basePath: "root.url",
    baseId: "ConceptMap.url",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.version",
      path: "ConceptMap.version",
      short: "Business version of the concept map",
      definition:
        "The identifier that is used to identify this version of the concept map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the concept map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
      comment:
        "There may be different concept map instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the concept map with the format [url]|[version].",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.version", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.version" },
        { identity: "w5", map: "FiveWs.version" },
      ],
    },
    dataPath: "root.version",
    parentDataPath: "root",
    basePath: "root.version",
    baseId: "ConceptMap.version",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.name",
      path: "ConceptMap.name",
      short: "Name for this concept map (computer friendly)",
      definition:
        "A natural language name identifying the concept map. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
      comment:
        "The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.",
      requirements: "Support human navigation and code generation.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.name", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.name",
    parentDataPath: "root",
    basePath: "root.name",
    baseId: "ConceptMap.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.title",
      path: "ConceptMap.title",
      short: "Name for this concept map (human friendly)",
      definition:
        "A short, descriptive, user-friendly title for the concept map.",
      comment:
        "This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.title", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "workflow", map: "Definition.title" }],
    },
    dataPath: "root.title",
    parentDataPath: "root",
    basePath: "root.title",
    baseId: "ConceptMap.title",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.status",
      path: "ConceptMap.status",
      short: "draft | active | retired | unknown",
      definition:
        "The status of this concept map. Enables tracking the life-cycle of the content.",
      comment:
        "Allows filtering of concept maps that are appropriate for use versus not.",
      min: 1,
      max: "1",
      base: { path: "ConceptMap.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        'This is labeled as "Is Modifier" because applications should not use a retired {{title}} without due consideration',
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "PublicationStatus",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The lifecycle status of an artifact.",
        valueSet: "http://hl7.org/fhir/ValueSet/publication-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Definition.status" },
        { identity: "w5", map: "FiveWs.status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "ConceptMap.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "retired",
        display: "Retired",
      },
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "ConceptMap.experimental",
      path: "ConceptMap.experimental",
      short: "For testing purposes, not real usage",
      definition:
        "A Boolean value to indicate that this concept map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
      comment:
        "Allows filtering of concept maps that are appropriate for use versus not.",
      requirements:
        "Enables experimental content to be developed following the same lifecycle that would be used for a production-level concept map.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.experimental", min: 0, max: "1" },
      type: [{ code: "boolean" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.experimental" },
        { identity: "w5", map: "FiveWs.class" },
      ],
    },
    dataPath: "root.experimental",
    parentDataPath: "root",
    basePath: "root.experimental",
    baseId: "ConceptMap.experimental",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.date",
      path: "ConceptMap.date",
      short: "Date last changed",
      definition:
        "The date  (and optionally time) when the concept map was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the concept map changes.",
      comment:
        "Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the concept map. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.",
      alias: ["Revision Date"],
      min: 0,
      max: "1",
      base: { path: "ConceptMap.date", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.date" },
        { identity: "w5", map: "FiveWs.recorded" },
      ],
    },
    dataPath: "root.date",
    parentDataPath: "root",
    basePath: "root.date",
    baseId: "ConceptMap.date",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.publisher",
      path: "ConceptMap.publisher",
      short: "Name of the publisher (organization or individual)",
      definition:
        "The name of the organization or individual that published the concept map.",
      comment:
        "Usually an organization but may be an individual. The publisher (or steward) of the concept map is the organization or individual primarily responsible for the maintenance and upkeep of the concept map. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the concept map. This item SHOULD be populated unless the information is available from context.",
      requirements:
        'Helps establish the "authority/credibility" of the concept map.  May also allow for contact.',
      min: 0,
      max: "1",
      base: { path: "ConceptMap.publisher", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.publisher" },
        { identity: "w5", map: "FiveWs.witness" },
      ],
    },
    dataPath: "root.publisher",
    parentDataPath: "root",
    basePath: "root.publisher",
    baseId: "ConceptMap.publisher",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.description",
      path: "ConceptMap.description",
      short: "Natural language description of the concept map",
      definition:
        "A free text natural language description of the concept map from a consumer's perspective.",
      comment:
        "The description is not intended to describe the semantics of the concept map. The description should capture its intended use, which is needed for ensuring integrity for its use in models across future changes.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.description", min: 0, max: "1" },
      type: [{ code: "markdown" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Definition.description" },
        { identity: "rim", map: "N/A" },
      ],
    },
    dataPath: "root.description",
    parentDataPath: "root",
    basePath: "root.description",
    baseId: "ConceptMap.description",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.jurisdiction",
      path: "ConceptMap.jurisdiction",
      short: "Intended jurisdiction for concept map (if applicable)",
      definition:
        "A legal or geographic region in which the concept map is intended to be used.",
      comment:
        "It may be possible for the concept map to be used in jurisdictions other than those for which it was originally designed or intended.",
      min: 0,
      max: "*",
      base: { path: "ConceptMap.jurisdiction", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Jurisdiction",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "extensible",
        description:
          "Countries and regions within which this artifact is targeted for use.",
        valueSet: "http://hl7.org/fhir/ValueSet/jurisdiction",
      },
      mapping: [{ identity: "workflow", map: "Definition.jurisdiction" }],
    },
    dataPath: "root.jurisdiction[0]",
    parentDataPath: "root",
    basePath: "root.jurisdiction",
    baseId: "ConceptMap.jurisdiction",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.purpose",
      path: "ConceptMap.purpose",
      short: "Why this concept map is defined",
      definition:
        "Explanation of why this concept map is needed and why it has been designed as it has.",
      comment:
        "This element does not describe the usage of the concept map. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this concept map.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.purpose", min: 0, max: "1" },
      type: [{ code: "markdown" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Definition.purpose" },
        { identity: "w5", map: "FiveWs.why[x]" },
        { identity: "objimpl", map: "no-gen-base" },
      ],
    },
    dataPath: "root.purpose",
    parentDataPath: "root",
    basePath: "root.purpose",
    baseId: "ConceptMap.purpose",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.copyright",
      path: "ConceptMap.copyright",
      short: "Use and/or publishing restrictions",
      definition:
        "A copyright statement relating to the concept map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the concept map.",
      comment:
        "Frequently the copyright differs between the concept map and codes that are included. The copyright statement should clearly differentiate between these when required.",
      requirements:
        "Consumers must be able to determine any legal restrictions on the use of the concept map and/or its content.",
      alias: ["License", "Restrictions"],
      min: 0,
      max: "1",
      base: { path: "ConceptMap.copyright", min: 0, max: "1" },
      type: [{ code: "markdown" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Definition.copyright" },
        { identity: "objimpl", map: "no-gen-base" },
      ],
    },
    dataPath: "root.copyright",
    parentDataPath: "root",
    basePath: "root.copyright",
    baseId: "ConceptMap.copyright",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.target[x]",
      path: "ConceptMap.target[x]",
      short: "The target value set which provides context for the mappings",
      definition:
        "The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made.",
      comment:
        "Should be a version specific reference. URIs SHOULD be absolute. If there is no source or target value set, the is no specified context for the map.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.target[x]", min: 0, max: "1" },
      type: [
        { code: "uri" },
        {
          code: "canonical",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/ValueSet"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.target[x]",
    parentDataPath: "root",
    basePath: "root.target[x]",
    baseId: "ConceptMap.target[x]",
    isPrimitive: false,
    childPaths: [],
    multiTypeType: "uri",
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group",
      path: "ConceptMap.group",
      short: "Same source and target systems",
      definition:
        "A group of mappings that all have the same source and target system.",
      min: 0,
      max: "*",
      base: { path: "ConceptMap.group", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group[0]",
    parentDataPath: "root",
    basePath: "root.group",
    baseId: "ConceptMap.group",
    isPrimitive: false,
    childPaths: [
      "root.group.source",
      "root.group.sourceVersion",
      "root.group.target",
      "root.group.targetVersion",
      "root.group.element[0]",
      "root.group.unmapped",
    ],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.source",
      path: "ConceptMap.group.source",
      short: "Source system where concepts to be mapped are defined",
      definition:
        "An absolute URI that identifies the source system where the concepts to be mapped are defined.",
      comment:
        "This is not needed if the source value set is specified and it contains concepts from only a single system.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.source", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.source",
    parentDataPath: "root.group[0]",
    basePath: "root.source",
    baseId: "ConceptMap.group.source",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.sourceVersion",
      path: "ConceptMap.group.sourceVersion",
      short: "Specific version of the  code system",
      definition:
        "The specific version of the code system, as determined by the code system authority.",
      comment:
        "The specification of a particular code system version may be required for code systems which lack concept permanence.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.sourceVersion", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.sourceVersion",
    parentDataPath: "root.group[0]",
    basePath: "root.sourceVersion",
    baseId: "ConceptMap.group.sourceVersion",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.target",
      path: "ConceptMap.group.target",
      short: "Target system that the concepts are to be mapped to",
      definition:
        "An absolute URI that identifies the target system that the concepts will be mapped to.",
      comment:
        "This is not needed if the target value set is specified and it contains concepts from only a single system. The group target may also be omitted if all of the target element equivalence values are 'unmatched'.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.target", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.target",
    parentDataPath: "root.group[0]",
    basePath: "root.target",
    baseId: "ConceptMap.group.target",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.targetVersion",
      path: "ConceptMap.group.targetVersion",
      short: "Specific version of the  code system",
      definition:
        "The specific version of the code system, as determined by the code system authority.",
      comment:
        "The specification of a particular code system version may be required for code systems which lack concept permanence.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.targetVersion", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.targetVersion",
    parentDataPath: "root.group[0]",
    basePath: "root.targetVersion",
    baseId: "ConceptMap.group.targetVersion",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "SourceElement",
        },
      ],
      path: "ConceptMap.group.element",
      short: "Mappings for a concept from the source set",
      definition:
        "Mappings for an individual concept in the source to one or more concepts in the target.",
      comment:
        "Generally, the ideal is that there would only be one mapping for each concept in the source value set, but a given concept may be mapped multiple times with different comments or dependencies.",
      alias: ["code", "concept", "item"],
      min: 1,
      max: "*",
      base: { path: "ConceptMap.group.element", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element[0]",
    parentDataPath: "root.group[0]",
    basePath: "root.element",
    baseId: "ConceptMap.group.element",
    isPrimitive: false,
    childPaths: [
      "root.group.element.code",
      "root.group.element.display",
      "root.group.element.target[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.code",
      extension: [
        {
          url: "http://hl7.org/fhir/build/StructureDefinition/no-binding",
          valueBoolean: true,
        },
      ],
      path: "ConceptMap.group.element.code",
      short: "Identifies element being mapped",
      definition: "Identity (code or path) or the element/item being mapped.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.element.code", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.code",
    parentDataPath: "root.group.element[0]",
    basePath: "root.code",
    baseId: "ConceptMap.group.element.code",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.display",
      path: "ConceptMap.group.element.display",
      short: "Display for the code",
      definition:
        "The display for the code. The display is only provided to help editors when editing the concept map.",
      comment: "The display is ignored when processing the map.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.element.display", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.display",
    parentDataPath: "root.group.element[0]",
    basePath: "root.display",
    baseId: "ConceptMap.group.element.display",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.target",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "TargetElement",
        },
      ],
      path: "ConceptMap.group.element.target",
      short: "Concept in target system for element",
      definition:
        "A concept from the target value set that this concept maps to.",
      comment:
        "Ideally there would only be one map, with equal or equivalent mapping. But multiple maps are allowed for several narrower options, or to assert that other concepts are unmatched.",
      min: 0,
      max: "*",
      base: { path: "ConceptMap.group.element.target", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "cmd-1",
          severity: "error",
          human:
            "If the map is narrower or inexact, there SHALL be some comments",
          expression:
            "comment.exists() or equivalence.empty() or ((equivalence != 'narrower') and (equivalence != 'inexact'))",
          xpath:
            "exists(f:comment) or not(exists(f:equivalence)) or ((f:equivalence/@value != 'narrower') and (f:equivalence/@value != 'inexact'))",
          source: "http://hl7.org/fhir/StructureDefinition/ConceptMap",
        },
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.target[0]",
    parentDataPath: "root.group.element[0]",
    basePath: "root.target",
    baseId: "ConceptMap.group.element.target",
    isPrimitive: false,
    childPaths: [
      "root.group.element.target.code",
      "root.group.element.target.display",
      "root.group.element.target.equivalence",
      "root.group.element.target.comment",
      "root.group.element.target.dependsOn[0]",
      "root.group.element.target.product[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.target.code",
      extension: [
        {
          url: "http://hl7.org/fhir/build/StructureDefinition/no-binding",
          valueBoolean: true,
        },
      ],
      path: "ConceptMap.group.element.target.code",
      short: "Code that identifies the target element",
      definition:
        "Identity (code or path) or the element/item that the map refers to.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.element.target.code", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.target.code",
    parentDataPath: "root.group.element.target[0]",
    basePath: "root.code",
    baseId: "ConceptMap.group.element.target.code",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.target.display",
      path: "ConceptMap.group.element.target.display",
      short: "Display for the code",
      definition:
        "The display for the code. The display is only provided to help editors when editing the concept map.",
      comment: "The display is ignored when processing the map.",
      min: 0,
      max: "1",
      base: {
        path: "ConceptMap.group.element.target.display",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.target.display",
    parentDataPath: "root.group.element.target[0]",
    basePath: "root.display",
    baseId: "ConceptMap.group.element.target.display",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.target.equivalence",
      path: "ConceptMap.group.element.target.equivalence",
      short:
        "relatedto | equivalent | equal | wider | subsumes | narrower | specializes | inexact | unmatched | disjoint",
      definition:
        "The equivalence between the source and target concepts (counting for the dependencies and products). The equivalence is read from target to source (e.g. the target is 'wider' than the source).",
      comment:
        "This element is labeled as a modifier because it may indicate that a target does not apply.",
      min: 1,
      max: "1",
      base: {
        path: "ConceptMap.group.element.target.equivalence",
        min: 1,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "Some of the values mean that there is no mapping from the source to the target, particularly 'disjoint', and the mapping cannot be interpreted without knowing this value as it could mean the elements are equivalent, totally mismatched or anything in between",
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ConceptMapEquivalence",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The degree of equivalence between concepts.",
        valueSet: "http://hl7.org/fhir/ValueSet/concept-map-equivalence|4.3.0",
      },
    },
    dataPath: "root.group.element.target.equivalence",
    parentDataPath: "root.group.element.target[0]",
    basePath: "root.equivalence",
    baseId: "ConceptMap.group.element.target.equivalence",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "relatedto",
        display: "Related To",
      },
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "equivalent",
        display: "Equivalent",
      },
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "equal",
        display: "Equal",
      },
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "wider",
        display: "Wider",
      },
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "subsumes",
        display: "Subsumes",
      },
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "narrower",
        display: "Narrower",
      },
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "specializes",
        display: "Specializes",
      },
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "inexact",
        display: "Inexact",
      },
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "unmatched",
        display: "Unmatched",
      },
      {
        system: "http://hl7.org/fhir/concept-map-equivalence",
        code: "disjoint",
        display: "Disjoint",
      },
    ],
  },
  {
    element: {
      id: "ConceptMap.group.element.target.comment",
      path: "ConceptMap.group.element.target.comment",
      short: "Description of status/issues in mapping",
      definition:
        "A description of status/issues in mapping that conveys additional information not represented in  the structured data.",
      min: 0,
      max: "1",
      base: {
        path: "ConceptMap.group.element.target.comment",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      condition: ["cmd-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.target.comment",
    parentDataPath: "root.group.element.target[0]",
    basePath: "root.comment",
    baseId: "ConceptMap.group.element.target.comment",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.target.dependsOn",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "OtherElement",
        },
      ],
      path: "ConceptMap.group.element.target.dependsOn",
      short: "Other elements required for this mapping (from context)",
      definition:
        "A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value.",
      min: 0,
      max: "*",
      base: {
        path: "ConceptMap.group.element.target.dependsOn",
        min: 0,
        max: "*",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.target.dependsOn[0]",
    parentDataPath: "root.group.element.target[0]",
    basePath: "root.dependsOn",
    baseId: "ConceptMap.group.element.target.dependsOn",
    isPrimitive: false,
    childPaths: [
      "root.group.element.target.dependsOn.property",
      "root.group.element.target.dependsOn.system",
      "root.group.element.target.dependsOn.value",
      "root.group.element.target.dependsOn.display",
    ],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.target.dependsOn.property",
      path: "ConceptMap.group.element.target.dependsOn.property",
      short: "Reference to property mapping depends on",
      definition:
        "A reference to an element that holds a coded value that corresponds to a code system property. The idea is that the information model carries an element somewhere that is labeled to correspond with a code system property.",
      min: 1,
      max: "1",
      base: {
        path: "ConceptMap.group.element.target.dependsOn.property",
        min: 1,
        max: "1",
      },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.target.dependsOn.property",
    parentDataPath: "root.group.element.target.dependsOn[0]",
    basePath: "root.property",
    baseId: "ConceptMap.group.element.target.dependsOn.property",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.target.dependsOn.system",
      path: "ConceptMap.group.element.target.dependsOn.system",
      short: "Code System (if necessary)",
      definition:
        "An absolute URI that identifies the code system of the dependency code (if the source/dependency is a value set that crosses code systems).",
      min: 0,
      max: "1",
      base: {
        path: "ConceptMap.group.element.target.dependsOn.system",
        min: 0,
        max: "1",
      },
      type: [
        {
          code: "canonical",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/CodeSystem"],
        },
      ],
      meaningWhenMissing:
        "The code is in the source (dependsOn) or target (product) system",
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.target.dependsOn.system",
    parentDataPath: "root.group.element.target.dependsOn[0]",
    basePath: "root.system",
    baseId: "ConceptMap.group.element.target.dependsOn.system",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.target.dependsOn.value",
      path: "ConceptMap.group.element.target.dependsOn.value",
      short: "Value of the referenced element",
      definition:
        "Identity (code or path) or the element/item/ValueSet/text that the map depends on / refers to.",
      min: 1,
      max: "1",
      base: {
        path: "ConceptMap.group.element.target.dependsOn.value",
        min: 1,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.target.dependsOn.value",
    parentDataPath: "root.group.element.target.dependsOn[0]",
    basePath: "root.value",
    baseId: "ConceptMap.group.element.target.dependsOn.value",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.element.target.dependsOn.display",
      path: "ConceptMap.group.element.target.dependsOn.display",
      short: "Display for the code (if value is a code)",
      definition:
        "The display for the code. The display is only provided to help editors when editing the concept map.",
      comment: "The display is ignored when processing the map.",
      min: 0,
      max: "1",
      base: {
        path: "ConceptMap.group.element.target.dependsOn.display",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.element.target.dependsOn.display",
    parentDataPath: "root.group.element.target.dependsOn[0]",
    basePath: "root.display",
    baseId: "ConceptMap.group.element.target.dependsOn.display",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.unmapped",
      path: "ConceptMap.group.unmapped",
      short: "What to do when there is no mapping for the source concept",
      definition:
        'What to do when there is no mapping for the source concept. "Unmapped" does not include codes that are unmatched, and the unmapped element is ignored in a code is specified to have equivalence = unmatched.',
      comment:
        "This only applies if the source code has a system value that matches the system defined for the group.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.unmapped", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "cmd-2",
          severity: "error",
          human: "If the mode is 'fixed', a code must be provided",
          expression: "(mode = 'fixed') implies code.exists()",
          xpath: "(f:mode/@value != 'fixed') or exists(f:code)",
          source: "http://hl7.org/fhir/StructureDefinition/ConceptMap",
        },
        {
          key: "cmd-3",
          severity: "error",
          human: "If the mode is 'other-map', a url must be provided",
          expression: "(mode = 'other-map') implies url.exists()",
          xpath: "(f:mode/@value != 'other-map') or exists(f:url)",
          source: "http://hl7.org/fhir/StructureDefinition/ConceptMap",
        },
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.unmapped",
    parentDataPath: "root.group[0]",
    basePath: "root.unmapped",
    baseId: "ConceptMap.group.unmapped",
    isPrimitive: false,
    childPaths: [
      "root.group.unmapped.mode",
      "root.group.unmapped.code",
      "root.group.unmapped.display",
      "root.group.unmapped.url",
    ],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.unmapped.mode",
      path: "ConceptMap.group.unmapped.mode",
      short: "provided | fixed | other-map",
      definition:
        "Defines which action to take if there is no match for the source concept in the target system designated for the group. One of 3 actions are possible: use the unmapped code (this is useful when doing a mapping between versions, and only a few codes have changed), use a fixed code (a default code), or alternatively, a reference to a different concept map can be provided (by canonical URL).",
      min: 1,
      max: "1",
      base: { path: "ConceptMap.group.unmapped.mode", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ConceptMapGroupUnmappedMode",
          },
        ],
        strength: "required",
        description:
          "Defines which action to take if there is no match in the group.",
        valueSet: "http://hl7.org/fhir/ValueSet/conceptmap-unmapped-mode|4.3.0",
      },
    },
    dataPath: "root.group.unmapped.mode",
    parentDataPath: "root.group.unmapped",
    basePath: "root.mode",
    baseId: "ConceptMap.group.unmapped.mode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/conceptmap-unmapped-mode",
        code: "provided",
        display: "Provided Code",
      },
      {
        system: "http://hl7.org/fhir/conceptmap-unmapped-mode",
        code: "fixed",
        display: "Fixed Code",
      },
      {
        system: "http://hl7.org/fhir/conceptmap-unmapped-mode",
        code: "other-map",
        display: "Other Map",
      },
    ],
  },
  {
    element: {
      id: "ConceptMap.group.unmapped.code",
      extension: [
        {
          url: "http://hl7.org/fhir/build/StructureDefinition/no-binding",
          valueBoolean: true,
        },
      ],
      path: "ConceptMap.group.unmapped.code",
      short: "Fixed code when mode = fixed",
      definition:
        "The fixed code to use when the mode = 'fixed'  - all unmapped codes are mapped to a single fixed code.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.unmapped.code", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.unmapped.code",
    parentDataPath: "root.group.unmapped",
    basePath: "root.code",
    baseId: "ConceptMap.group.unmapped.code",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.unmapped.display",
      path: "ConceptMap.group.unmapped.display",
      short: "Display for the code",
      definition:
        "The display for the code. The display is only provided to help editors when editing the concept map.",
      comment: "The display is ignored when processing the map.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.unmapped.display", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.unmapped.display",
    parentDataPath: "root.group.unmapped",
    basePath: "root.display",
    baseId: "ConceptMap.group.unmapped.display",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap.group.unmapped.url",
      path: "ConceptMap.group.unmapped.url",
      short:
        "canonical reference to an additional ConceptMap to use for mapping if the source concept is unmapped",
      definition:
        "The canonical reference to an additional ConceptMap resource instance to use for mapping if this ConceptMap resource contains no matching mapping for the source concept.",
      min: 0,
      max: "1",
      base: { path: "ConceptMap.group.unmapped.url", min: 0, max: "1" },
      type: [
        {
          code: "canonical",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/ConceptMap"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.unmapped.url",
    parentDataPath: "root.group.unmapped",
    basePath: "root.url",
    baseId: "ConceptMap.group.unmapped.url",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "ConceptMap",
      path: "ConceptMap",
      short: "A map from one set of concepts to one or more other concepts",
      definition:
        "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
      min: 0,
      max: "*",
      base: { path: "ConceptMap", min: 0, max: "*" },
      constraint: [
        {
          key: "cmd-0",
          severity: "warning",
          human:
            "Name should be usable as an identifier for the module by machine processing applications such as code generation",
          expression:
            "name.exists() implies name.matches('[A-Z]([A-Za-z0-9_]){0,254}')",
          xpath:
            "not(exists(f:name/@value)) or matches(f:name/@value, '[A-Z]([A-Za-z0-9_]){0,254}')",
          source: "http://hl7.org/fhir/StructureDefinition/ConceptMap",
        },
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "rim", map: "N/A" },
        { identity: "w5", map: "conformance.terminology" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "ConceptMap",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
