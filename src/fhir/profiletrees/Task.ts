const data = [
  {
    element: {
      id: "Task.meta",
      path: "Task.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "Task.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.implicitRules",
      path: "Task.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "Task.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.language",
      path: "Task.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "Task.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "Task.contained",
      path: "Task.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/Task",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "Task.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.instantiatesCanonical",
      path: "Task.instantiatesCanonical",
      short: "Formal definition of task",
      definition:
        "The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.",
      requirements:
        "Enables a formal definition of how he task is to be performed, enabling automation.",
      min: 0,
      max: "1",
      base: { path: "Task.instantiatesCanonical", min: 0, max: "1" },
      type: [
        {
          code: "canonical",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/ActivityDefinition",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        {
          identity: "workflow",
          map: "Request.instantiatesCanonical, Event.instantiatesCanonical",
        },
        { identity: "rim", map: ".outboundRelationship[typeCode=DEFN].target" },
      ],
    },
    dataPath: "root.instantiatesCanonical",
    parentDataPath: "root",
    basePath: "root.instantiatesCanonical",
    baseId: "Task.instantiatesCanonical",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.instantiatesUri",
      path: "Task.instantiatesUri",
      short: "Formal definition of task",
      definition:
        "The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.",
      requirements:
        "Enables a formal definition of how he task is to be performed (e.g. using BPMN, BPEL, XPDL or other formal notation to be associated with a task), enabling automation.",
      min: 0,
      max: "1",
      base: { path: "Task.instantiatesUri", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Event.instantiatesUrl" },
        { identity: "rim", map: ".outboundRelationship[typeCode=DEFN].target" },
      ],
    },
    dataPath: "root.instantiatesUri",
    parentDataPath: "root",
    basePath: "root.instantiatesUri",
    baseId: "Task.instantiatesUri",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.groupIdentifier",
      path: "Task.groupIdentifier",
      short: "Requisition or grouper id",
      definition:
        "An identifier that links together multiple tasks and other requests that were created in the same context.",
      requirements:
        "Billing and/or reporting can be linked to whether multiple requests were created as a single unit.",
      min: 0,
      max: "1",
      base: { path: "Task.groupIdentifier", min: 0, max: "1" },
      type: [{ code: "Identifier" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.groupIdentifier" },
        {
          identity: "rim",
          map: ".inboundRelationship[typeCode=COMP].source[moodCode=INT].id",
        },
      ],
    },
    dataPath: "root.groupIdentifier",
    parentDataPath: "root",
    basePath: "root.groupIdentifier",
    baseId: "Task.groupIdentifier",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.status",
      path: "Task.status",
      short: "draft | requested | received | accepted | +",
      definition: "The current status of the task.",
      requirements:
        "These states enable coordination of task status with off-the-shelf workflow solutions that support automation of tasks.",
      min: 1,
      max: "1",
      base: { path: "Task.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because it is a status element that contains status entered-in-error which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TaskStatus",
          },
        ],
        strength: "required",
        description: "The current status of the task.",
        valueSet: "http://hl7.org/fhir/ValueSet/task-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Request.status, Event.status" },
        { identity: "w5", map: "FiveWs.status" },
        { identity: "rim", map: ".statusCode" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "Task.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/task-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "requested",
        display: "Requested",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "received",
        display: "Received",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "accepted",
        display: "Accepted",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "rejected",
        display: "Rejected",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "ready",
        display: "Ready",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "cancelled",
        display: "Cancelled",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "in-progress",
        display: "In Progress",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "on-hold",
        display: "On Hold",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "failed",
        display: "Failed",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "completed",
        display: "Completed",
      },
      {
        system: "http://hl7.org/fhir/task-status",
        code: "entered-in-error",
        display: "Entered in Error",
      },
    ],
  },
  {
    element: {
      id: "Task.businessStatus",
      path: "Task.businessStatus",
      short: 'E.g. "Specimen collected", "IV prepped"',
      definition: "Contains business-specific nuances of the business state.",
      requirements:
        "There's often a need to track substates of a task - this is often variable by specific workflow implementation.",
      min: 0,
      max: "1",
      base: { path: "Task.businessStatus", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TaskBusinessStatus",
          },
        ],
        strength: "example",
        description:
          'The domain-specific business-contextual sub-state of the task.  For example: "Blood drawn", "IV inserted", "Awaiting physician signature", etc.',
      },
      mapping: [
        {
          identity: "rim",
          map: '.inboundRelationship[typeCode=SUBJ].source[classCode=OBS, moodCode=EVN, code="business status"]',
        },
      ],
    },
    dataPath: "root.businessStatus",
    parentDataPath: "root",
    basePath: "root.businessStatus",
    baseId: "Task.businessStatus",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.intent",
      path: "Task.intent",
      short:
        "unknown | proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option",
      definition:
        'Indicates the "level" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc.',
      comment:
        'This element is immutable.  Proposed tasks, planned tasks, etc. must be distinct instances.\n\nIn most cases, Tasks will have an intent of "order".',
      min: 1,
      max: "1",
      base: { path: "Task.intent", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TaskIntent",
          },
        ],
        strength: "required",
        description:
          "Distinguishes whether the task is a proposal, plan or full order.",
        valueSet: "http://hl7.org/fhir/ValueSet/task-intent|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Request.intent" },
        { identity: "w5", map: "FiveWs.class" },
        { identity: "rim", map: ".moodCode" },
      ],
    },
    dataPath: "root.intent",
    parentDataPath: "root",
    basePath: "root.intent",
    baseId: "Task.intent",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/task-intent",
        code: "unknown",
        display: "Unknown",
      },
      { system: "http://hl7.org/fhir/task-intent", code: "proposal" },
      { system: "http://hl7.org/fhir/task-intent", code: "plan" },
      { system: "http://hl7.org/fhir/task-intent", code: "order" },
      { system: "http://hl7.org/fhir/task-intent", code: "original-order" },
      { system: "http://hl7.org/fhir/task-intent", code: "reflex-order" },
      { system: "http://hl7.org/fhir/task-intent", code: "filler-order" },
      { system: "http://hl7.org/fhir/task-intent", code: "instance-order" },
      { system: "http://hl7.org/fhir/task-intent", code: "option" },
    ],
  },
  {
    element: {
      id: "Task.priority",
      path: "Task.priority",
      short: "routine | urgent | asap | stat",
      definition:
        "Indicates how quickly the Task should be addressed with respect to other requests.",
      requirements:
        "Used to identify the service level expected while performing a task.",
      min: 0,
      max: "1",
      base: { path: "Task.priority", min: 0, max: "1" },
      type: [{ code: "code" }],
      meaningWhenMissing:
        "If missing, this task should be performed with normal priority",
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TaskPriority",
          },
        ],
        strength: "required",
        description:
          "The priority of a task (may affect service level applied to the task).",
        valueSet: "http://hl7.org/fhir/ValueSet/request-priority|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Request.priority" },
        { identity: "w5", map: "FiveWs.grade" },
        { identity: "rim", map: ".priorityCode" },
      ],
    },
    dataPath: "root.priority",
    parentDataPath: "root",
    basePath: "root.priority",
    baseId: "Task.priority",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "routine",
        display: "Routine",
      },
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "urgent",
        display: "Urgent",
      },
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "asap",
        display: "ASAP",
      },
      {
        system: "http://hl7.org/fhir/request-priority",
        code: "stat",
        display: "STAT",
      },
    ],
  },
  {
    element: {
      id: "Task.code",
      path: "Task.code",
      short: "Task Type",
      definition:
        "A name or code (or both) briefly describing what the task involves.",
      comment:
        'The title (eg "My Tasks", "Outstanding Tasks for Patient X") should go into the code.',
      min: 0,
      max: "1",
      base: { path: "Task.code", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TaskCode",
          },
        ],
        strength: "example",
        description:
          "Codes to identify what the task involves.  These will typically be specific to a particular workflow.",
        valueSet: "http://hl7.org/fhir/ValueSet/task-code",
      },
      mapping: [
        { identity: "workflow", map: "Request.code, Event.code" },
        { identity: "w5", map: "FiveWs.what[x]" },
        { identity: "rim", map: ".code" },
      ],
    },
    dataPath: "root.code",
    parentDataPath: "root",
    basePath: "root.code",
    baseId: "Task.code",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/CodeSystem/task-code",
        code: "approve",
        display: "Activate/approve the focal resource",
      },
      {
        system: "http://hl7.org/fhir/CodeSystem/task-code",
        code: "fulfill",
        display: "Fulfill the focal request",
      },
      {
        system: "http://hl7.org/fhir/CodeSystem/task-code",
        code: "abort",
        display: "Mark the focal resource as no longer active",
      },
      {
        system: "http://hl7.org/fhir/CodeSystem/task-code",
        code: "replace",
        display: "Replace the focal resource with the input resource",
      },
      {
        system: "http://hl7.org/fhir/CodeSystem/task-code",
        code: "change",
        display: "Change the focal resource",
      },
      {
        system: "http://hl7.org/fhir/CodeSystem/task-code",
        code: "suspend",
        display: "Suspend the focal resource",
      },
      {
        system: "http://hl7.org/fhir/CodeSystem/task-code",
        code: "resume",
        display: "Re-activate the focal resource",
      },
    ],
  },
  {
    element: {
      id: "Task.description",
      path: "Task.description",
      short: "Human-readable explanation of task",
      definition: "A free-text description of what is to be performed.",
      min: 0,
      max: "1",
      base: { path: "Task.description", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "rim", map: ".text" }],
    },
    dataPath: "root.description",
    parentDataPath: "root",
    basePath: "root.description",
    baseId: "Task.description",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.for",
      path: "Task.for",
      short: "Beneficiary of the Task",
      definition:
        "The entity who benefits from the performance of the service specified in the task (e.g., the patient).",
      requirements:
        "Used to track tasks outstanding for a beneficiary.  Do not use to track the task owner or creator (see owner and creator respectively).  This can also affect access control.",
      alias: ["Patient"],
      min: 0,
      max: "1",
      base: { path: "Task.for", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Resource"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.subject, Event.subject" },
        { identity: "w5", map: "FiveWs.subject[x]" },
        { identity: "rim", map: ".participation[typeCode=RCT].role" },
        { identity: "w5", map: "FiveWs.subject" },
      ],
    },
    dataPath: "root.for",
    parentDataPath: "root",
    basePath: "root.for",
    baseId: "Task.for",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.executionPeriod",
      path: "Task.executionPeriod",
      short: "Start and end time of execution",
      definition:
        "Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end).",
      min: 0,
      max: "1",
      base: { path: "Task.executionPeriod", min: 0, max: "1" },
      type: [{ code: "Period" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Event.occurrence[x]" },
        { identity: "w5", map: "FiveWs.done[x]" },
        { identity: "rim", map: ".effectiveTime" },
      ],
    },
    dataPath: "root.executionPeriod",
    parentDataPath: "root",
    basePath: "root.executionPeriod",
    baseId: "Task.executionPeriod",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.authoredOn",
      path: "Task.authoredOn",
      short: "Task Creation Date",
      definition: "The date and time this task was created.",
      requirements:
        "Most often used along with lastUpdated to track duration of task to supporting monitoring and management.",
      alias: ["Created Date"],
      min: 0,
      max: "1",
      base: { path: "Task.authoredOn", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      condition: ["inv-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Request.authoredOn" },
        { identity: "w5", map: "FiveWs.recorded" },
        { identity: "rim", map: ".participation[typeCode=AUT].time" },
      ],
    },
    dataPath: "root.authoredOn",
    parentDataPath: "root",
    basePath: "root.authoredOn",
    baseId: "Task.authoredOn",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.lastModified",
      path: "Task.lastModified",
      short: "Task Last Modified Date",
      definition: "The date and time of last modification to this task.",
      requirements:
        "Used along with history to track task activity and time in a particular task state.  This enables monitoring and management.",
      alias: ["Update Date"],
      min: 0,
      max: "1",
      base: { path: "Task.lastModified", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      condition: ["inv-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        {
          identity: "rim",
          map: ".inboundRelationship[typeCode=SUBJ, ].source[classCode=CACT, moodCode=EVN].effectiveTime",
        },
      ],
    },
    dataPath: "root.lastModified",
    parentDataPath: "root",
    basePath: "root.lastModified",
    baseId: "Task.lastModified",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.performerType",
      path: "Task.performerType",
      short: "Requested performer",
      definition: "The kind of participant that should perform the task.",
      requirements: "Use to distinguish tasks on different activity queues.",
      min: 0,
      max: "*",
      base: { path: "Task.performerType", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "TaskPerformerType",
          },
        ],
        strength: "preferred",
        description: "The type(s) of task performers allowed.",
        valueSet: "http://hl7.org/fhir/ValueSet/performer-role",
      },
      mapping: [
        {
          identity: "workflow",
          map: "Event.performer.role, Request.performerType",
        },
        { identity: "w5", map: "FiveWs.actor" },
        { identity: "rim", map: ".participation[typeCode=PRF].role.code" },
      ],
    },
    dataPath: "root.performerType[0]",
    parentDataPath: "root",
    basePath: "root.performerType",
    baseId: "Task.performerType",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.location",
      path: "Task.location",
      short: "Where task occurs",
      definition:
        "Principal physical location where the this task is performed.",
      requirements:
        "Ties the event to where the records are likely kept and provides context around the event occurrence (e.g. if it occurred inside or outside a dedicated healthcare setting).",
      min: 0,
      max: "1",
      base: { path: "Task.location", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Location"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Request.reasonCode, Event.reasonCode" },
        { identity: "w5", map: "FiveWs.where[x]" },
        { identity: "rim", map: ".participation[typeCode=LOC].role" },
      ],
    },
    dataPath: "root.location",
    parentDataPath: "root",
    basePath: "root.location",
    baseId: "Task.location",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.reasonReference",
      path: "Task.reasonReference",
      short: "Why task is needed",
      definition:
        "A resource reference indicating why this task needs to be performed.",
      comment:
        "Tasks might be justified based on an Observation, a Condition, a past or planned procedure, etc.   This should only be included if there is no focus or if it differs from the reason indicated on the focus.    Use the CodeableConcept text element in `Task.reasonCode` if the data is free (uncoded) text.",
      min: 0,
      max: "1",
      base: { path: "Task.reasonReference", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Resource"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        {
          identity: "workflow",
          map: "Request.reasonReference, Event.reasonReference",
        },
        { identity: "w5", map: "FiveWs.why[x]" },
        { identity: "rim", map: ".outboundRelationship[typeCode=RSON].target" },
      ],
    },
    dataPath: "root.reasonReference",
    parentDataPath: "root",
    basePath: "root.reasonReference",
    baseId: "Task.reasonReference",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.note",
      path: "Task.note",
      short: "Comments made about the task",
      definition:
        "Free-text information captured about the task as it progresses.",
      min: 0,
      max: "*",
      base: { path: "Task.note", min: 0, max: "*" },
      type: [{ code: "Annotation" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Request.note, Event.note" },
        {
          identity: "rim",
          map: '.inboundRelationship[typeCode=SUBJ, ].source[classCode=OBS, moodCode=EVN, code="annotation"].value(string)',
        },
      ],
    },
    dataPath: "root.note[0]",
    parentDataPath: "root",
    basePath: "root.note",
    baseId: "Task.note",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.restriction",
      path: "Task.restriction",
      short: "Constraints on fulfillment tasks",
      definition:
        "If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.",
      requirements:
        "Sometimes when fulfillment is sought, you don't want full fulfillment.",
      min: 0,
      max: "1",
      base: { path: "Task.restriction", min: 0, max: "1" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        {
          identity: "rim",
          map: "Instead of pointing to request, would point to component of request, having these characteristics",
        },
      ],
    },
    dataPath: "root.restriction",
    parentDataPath: "root",
    basePath: "root.restriction",
    baseId: "Task.restriction",
    isPrimitive: false,
    childPaths: [
      "root.restriction.repetitions",
      "root.restriction.period",
      "root.restriction.recipient[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "Task.restriction.repetitions",
      path: "Task.restriction.repetitions",
      short: "How many times to repeat",
      definition:
        "Indicates the number of times the requested action should occur.",
      requirements:
        "E.g. order that requests monthly lab tests, fulfillment is sought for 1.",
      min: 0,
      max: "1",
      base: { path: "Task.restriction.repetitions", min: 0, max: "1" },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: ".repeatNumber" }],
    },
    dataPath: "root.restriction.repetitions",
    parentDataPath: "root.restriction",
    basePath: "root.repetitions",
    baseId: "Task.restriction.repetitions",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.restriction.recipient",
      path: "Task.restriction.recipient",
      short: "For whom is fulfillment sought?",
      definition:
        "For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?",
      min: 0,
      max: "*",
      base: { path: "Task.restriction.recipient", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Patient",
            "http://hl7.org/fhir/StructureDefinition/Practitioner",
            "http://hl7.org/fhir/StructureDefinition/PractitionerRole",
            "http://hl7.org/fhir/StructureDefinition/RelatedPerson",
            "http://hl7.org/fhir/StructureDefinition/Group",
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: ".participation[typeCode=SBJ].role" }],
    },
    dataPath: "root.restriction.recipient[0]",
    parentDataPath: "root.restriction",
    basePath: "root.recipient",
    baseId: "Task.restriction.recipient",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Task.input",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Parameter",
        },
      ],
      path: "Task.input",
      short: "Information used to perform task",
      definition:
        "Additional information that may be needed in the execution of the task.",
      requirements:
        "Resources and data used to perform the task.  This data is used in the business logic of task execution, and is stored separately because it varies between workflows.",
      alias: ["Supporting Information"],
      min: 0,
      max: "*",
      base: { path: "Task.input", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "???" }],
    },
    dataPath: "root.input[0]",
    parentDataPath: "root",
    basePath: "root.input",
    baseId: "Task.input",
    isPrimitive: false,
    childPaths: ["root.input.type", "root.input.value[x]"],
    value: "",
  },
  {
    element: {
      id: "Task.input.value[x]",
      path: "Task.input.value[x]",
      short: "Content to use in performing the task",
      definition: "The value of the input parameter as a basic type.",
      min: 1,
      max: "1",
      base: { path: "Task.input.value[x]", min: 1, max: "1" },
      type: [
        { code: "base64Binary" },
        { code: "boolean" },
        { code: "canonical" },
        { code: "code" },
        { code: "date" },
        { code: "dateTime" },
        { code: "decimal" },
        { code: "id" },
        { code: "instant" },
        { code: "integer" },
        { code: "markdown" },
        { code: "oid" },
        { code: "positiveInt" },
        { code: "string" },
        { code: "time" },
        { code: "unsignedInt" },
        { code: "uri" },
        { code: "url" },
        { code: "uuid" },
        { code: "Address" },
        { code: "Age" },
        { code: "Annotation" },
        { code: "Attachment" },
        { code: "CodeableConcept" },
        { code: "Coding" },
        { code: "ContactPoint" },
        { code: "Count" },
        { code: "Distance" },
        { code: "Duration" },
        { code: "HumanName" },
        { code: "Identifier" },
        { code: "Money" },
        { code: "Period" },
        { code: "Quantity" },
        { code: "Range" },
        { code: "Ratio" },
        { code: "Reference" },
        { code: "SampledData" },
        { code: "Signature" },
        { code: "Timing" },
        { code: "ContactDetail" },
        { code: "Contributor" },
        { code: "DataRequirement" },
        { code: "Expression" },
        { code: "ParameterDefinition" },
        { code: "RelatedArtifact" },
        { code: "TriggerDefinition" },
        { code: "UsageContext" },
        { code: "Dosage" },
        { code: "Meta" },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "???" }],
    },
    dataPath: "root.input.value[x]",
    parentDataPath: "root.input[0]",
    basePath: "root.value[x]",
    baseId: "Task.input.value[x]",
    isPrimitive: false,
    childPaths: [],
    multiTypeType: "base64Binary",
    value: "",
  },
  {
    element: {
      id: "Task.output",
      path: "Task.output",
      short: "Information produced as part of task",
      definition: "Outputs produced by the Task.",
      requirements:
        "Resources and data produced during the execution the task.  This data is generated by the business logic of task execution, and is stored separately because it varies between workflows.",
      min: 0,
      max: "*",
      base: { path: "Task.output", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "???" }],
    },
    dataPath: "root.output[0]",
    parentDataPath: "root",
    basePath: "root.output",
    baseId: "Task.output",
    isPrimitive: false,
    childPaths: ["root.output.type", "root.output.value[x]"],
    value: "",
  },
  {
    element: {
      id: "Task.output.value[x]",
      path: "Task.output.value[x]",
      short: "Result of output",
      definition: "The value of the Output parameter as a basic type.",
      requirements: "Task outputs can take any form.",
      min: 1,
      max: "1",
      base: { path: "Task.output.value[x]", min: 1, max: "1" },
      type: [
        { code: "base64Binary" },
        { code: "boolean" },
        { code: "canonical" },
        { code: "code" },
        { code: "date" },
        { code: "dateTime" },
        { code: "decimal" },
        { code: "id" },
        { code: "instant" },
        { code: "integer" },
        { code: "markdown" },
        { code: "oid" },
        { code: "positiveInt" },
        { code: "string" },
        { code: "time" },
        { code: "unsignedInt" },
        { code: "uri" },
        { code: "url" },
        { code: "uuid" },
        { code: "Address" },
        { code: "Age" },
        { code: "Annotation" },
        { code: "Attachment" },
        { code: "CodeableConcept" },
        { code: "Coding" },
        { code: "ContactPoint" },
        { code: "Count" },
        { code: "Distance" },
        { code: "Duration" },
        { code: "HumanName" },
        { code: "Identifier" },
        { code: "Money" },
        { code: "Period" },
        { code: "Quantity" },
        { code: "Range" },
        { code: "Ratio" },
        { code: "Reference" },
        { code: "SampledData" },
        { code: "Signature" },
        { code: "Timing" },
        { code: "ContactDetail" },
        { code: "Contributor" },
        { code: "DataRequirement" },
        { code: "Expression" },
        { code: "ParameterDefinition" },
        { code: "RelatedArtifact" },
        { code: "TriggerDefinition" },
        { code: "UsageContext" },
        { code: "Dosage" },
        { code: "Meta" },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "???" }],
    },
    dataPath: "root.output.value[x]",
    parentDataPath: "root.output[0]",
    basePath: "root.value[x]",
    baseId: "Task.output.value[x]",
    isPrimitive: false,
    childPaths: [],
    multiTypeType: "base64Binary",
    value: "",
  },
  {
    element: {
      id: "Task",
      path: "Task",
      short: "A task to be performed",
      definition: "A task to be performed.",
      min: 0,
      max: "*",
      base: { path: "Task", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "inv-1",
          severity: "error",
          human:
            "Last modified date must be greater than or equal to authored-on date.",
          expression:
            "lastModified.exists().not() or authoredOn.exists().not() or lastModified >= authoredOn",
          xpath:
            "not(exists(f:lastModified/@value)) or not(exists(f:authoredOn/@value)) or f:lastModified/@value >= f:authoredOn/@value",
          source: "http://hl7.org/fhir/StructureDefinition/Task",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "workflow", map: "Request, Event" },
        { identity: "rim", map: "ControlAct[moodCode=INT]" },
        { identity: "w5", map: "workflow.order" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "Task",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
