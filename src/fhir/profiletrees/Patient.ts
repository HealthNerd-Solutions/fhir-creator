const data = [
  {
    element: {
      id: "Patient.meta",
      path: "Patient.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "Patient.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.implicitRules",
      path: "Patient.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "Patient.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.language",
      path: "Patient.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "Patient.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "Patient.contained",
      path: "Patient.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/Patient",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "Patient.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.active",
      path: "Patient.active",
      short: "Whether this patient's record is in active use",
      definition:
        "Whether this patient record is in active use. \nMany systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization's business rules.\n\nIt is often used to filter patient lists to exclude inactive patients\n\nDeceased patients may also be marked as inactive for the same reasons, but may be active for some time after death.",
      comment:
        "If a record is inactive, and linked to an active record, then future patient/record updates should occur on the other patient.",
      requirements:
        "Need to be able to mark a patient record as not to be used because it was created in error.",
      min: 0,
      max: "1",
      base: { path: "Patient.active", min: 0, max: "1" },
      type: [{ code: "boolean" }],
      meaningWhenMissing:
        "This resource is generally assumed to be active if no value is provided for the active element",
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labelled as a modifier because it is a status element that can indicate that a record should not be treated as valid",
      isSummary: true,
      mapping: [
        { identity: "w5", map: "FiveWs.status" },
        { identity: "rim", map: "statusCode" },
        { identity: "cda", map: "n/a" },
      ],
    },
    dataPath: "root.active",
    parentDataPath: "root",
    basePath: "root.active",
    baseId: "Patient.active",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.telecom",
      path: "Patient.telecom",
      short: "A contact detail for the individual",
      definition:
        "A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted.",
      comment:
        "A Patient may have multiple ways to be contacted with different uses or applicable periods.  May need to have options for contacting the person urgently and also to help with identification. The address might not go directly to the individual, but may reach another party that is able to proxy for the patient (i.e. home phone, or pet owner's phone).",
      requirements:
        "People have (primary) ways to contact them in some way such as phone, email.",
      min: 0,
      max: "*",
      base: { path: "Patient.telecom", min: 0, max: "*" },
      type: [{ code: "ContactPoint" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "v2", map: "PID-13, PID-14, PID-40" },
        { identity: "rim", map: "telecom" },
        { identity: "cda", map: ".telecom" },
      ],
    },
    dataPath: "root.telecom[0]",
    parentDataPath: "root",
    basePath: "root.telecom",
    baseId: "Patient.telecom",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.gender",
      path: "Patient.gender",
      short: "male | female | other | unknown",
      definition:
        "Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.",
      comment:
        'The gender might not match the biological sex as determined by genetics or the individual\'s preferred identification. Note that for both humans and particularly animals, there are other legitimate possibilities than male and female, though the vast majority of systems and contexts only support male and female.  Systems providing decision support or enforcing business rules should ideally do this on the basis of Observations dealing with the specific sex or gender aspect of interest (anatomical, chromosomal, social, etc.)  However, because these observations are infrequently recorded, defaulting to the administrative gender is common practice.  Where such defaulting occurs, rule enforcement should allow for the variation between administrative and biological, chromosomal and other gender aspects.  For example, an alert about a hysterectomy on a male should be handled as a warning or overridable error, not a "hard" error.  See the Patient Gender and Sex section for additional information about communicating patient gender and sex.',
      requirements:
        "Needed for identification of the individual, in combination with (at least) name and birth date.",
      min: 0,
      max: "1",
      base: { path: "Patient.gender", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdministrativeGender",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The gender of a person used for administrative purposes.",
        valueSet: "http://hl7.org/fhir/ValueSet/administrative-gender|4.3.0",
      },
      mapping: [
        { identity: "v2", map: "PID-8" },
        {
          identity: "rim",
          map: "player[classCode=PSN|ANM and determinerCode=INSTANCE]/administrativeGender",
        },
        { identity: "cda", map: ".patient.administrativeGenderCode" },
      ],
    },
    dataPath: "root.gender",
    parentDataPath: "root",
    basePath: "root.gender",
    baseId: "Patient.gender",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/administrative-gender",
        code: "male",
        display: "Male",
      },
      {
        system: "http://hl7.org/fhir/administrative-gender",
        code: "female",
        display: "Female",
      },
      {
        system: "http://hl7.org/fhir/administrative-gender",
        code: "other",
        display: "Other",
      },
      {
        system: "http://hl7.org/fhir/administrative-gender",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "Patient.birthDate",
      path: "Patient.birthDate",
      short: "The date of birth for the individual",
      definition: "The date of birth for the individual.",
      comment:
        'At least an estimated year should be provided as a guess if the real DOB is unknown  There is a standard extension "patient-birthTime" available that should be used where Time is required (such as in maternity/infant care systems).',
      requirements: "Age of the individual drives many clinical processes.",
      min: 0,
      max: "1",
      base: { path: "Patient.birthDate", min: 0, max: "1" },
      type: [{ code: "date" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "v2", map: "PID-7" },
        {
          identity: "rim",
          map: "player[classCode=PSN|ANM and determinerCode=INSTANCE]/birthTime",
        },
        { identity: "cda", map: ".patient.birthTime" },
        { identity: "loinc", map: "21112-8" },
      ],
    },
    dataPath: "root.birthDate",
    parentDataPath: "root",
    basePath: "root.birthDate",
    baseId: "Patient.birthDate",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.address",
      path: "Patient.address",
      short: "An address for the individual",
      definition: "An address for the individual.",
      comment:
        "Patient may have multiple addresses with different uses or applicable periods.",
      requirements:
        "May need to keep track of patient addresses for contacting, billing or reporting requirements and also to help with identification.",
      min: 0,
      max: "*",
      base: { path: "Patient.address", min: 0, max: "*" },
      type: [{ code: "Address" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "v2", map: "PID-11" },
        { identity: "rim", map: "addr" },
        { identity: "cda", map: ".addr" },
      ],
    },
    dataPath: "root.address[0]",
    parentDataPath: "root",
    basePath: "root.address",
    baseId: "Patient.address",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.maritalStatus",
      path: "Patient.maritalStatus",
      short: "Marital (civil) status of a patient",
      definition:
        "This field contains a patient's most recent marital (civil) status.",
      requirements: "Most, if not all systems capture it.",
      min: 0,
      max: "1",
      base: { path: "Patient.maritalStatus", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "MaritalStatus",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "extensible",
        description: "The domestic partnership status of a person.",
        valueSet: "http://hl7.org/fhir/ValueSet/marital-status",
      },
      mapping: [
        { identity: "v2", map: "PID-16" },
        { identity: "rim", map: "player[classCode=PSN]/maritalStatusCode" },
        { identity: "cda", map: ".patient.maritalStatusCode" },
      ],
    },
    dataPath: "root.maritalStatus",
    parentDataPath: "root",
    basePath: "root.maritalStatus",
    baseId: "Patient.maritalStatus",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "A",
        display: "Annulled",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "D",
        display: "Divorced",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "I",
        display: "Interlocutory",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "L",
        display: "Legally Separated",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "M",
        display: "Married",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "C",
        display: "Common Law",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "P",
        display: "Polygamous",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "T",
        display: "Domestic partner",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "U",
        display: "unmarried",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "S",
        display: "Never Married",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "W",
        display: "Widowed",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
        code: "UNK",
      },
    ],
  },
  {
    element: {
      id: "Patient.photo",
      path: "Patient.photo",
      short: "Image of the patient",
      definition: "Image of the patient.",
      comment:
        "Guidelines:\n* Use id photos, not clinical photos.\n* Limit dimensions to thumbnail.\n* Keep byte count low to ease resource updates.",
      requirements:
        "Many EHR systems have the capability to capture an image of the patient. Fits with newer social media usage too.",
      min: 0,
      max: "*",
      base: { path: "Patient.photo", min: 0, max: "*" },
      type: [{ code: "Attachment" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "OBX-5 - needs a profile" },
        {
          identity: "rim",
          map: "player[classCode=PSN|ANM and determinerCode=INSTANCE]/desc",
        },
        { identity: "cda", map: "n/a" },
      ],
    },
    dataPath: "root.photo[0]",
    parentDataPath: "root",
    basePath: "root.photo",
    baseId: "Patient.photo",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.contact",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "Contact",
        },
      ],
      path: "Patient.contact",
      short: "A contact party (e.g. guardian, partner, friend) for the patient",
      definition:
        "A contact party (e.g. guardian, partner, friend) for the patient.",
      comment:
        "Contact covers all kinds of contact parties: family members, business contacts, guardians, caregivers. Not applicable to register pedigree and family ties beyond use of having contact.",
      requirements: "Need to track people you can contact about the patient.",
      min: 0,
      max: "*",
      base: { path: "Patient.contact", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
        {
          key: "pat-1",
          severity: "error",
          human:
            "SHALL at least contain a contact's details or a reference to an organization",
          expression:
            "name.exists() or telecom.exists() or address.exists() or organization.exists()",
          xpath:
            "exists(f:name) or exists(f:telecom) or exists(f:address) or exists(f:organization)",
          source: "http://hl7.org/fhir/StructureDefinition/Patient",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        {
          identity: "rim",
          map: "player[classCode=PSN|ANM and determinerCode=INSTANCE]/scopedRole[classCode=CON]",
        },
        { identity: "cda", map: "n/a" },
      ],
    },
    dataPath: "root.contact[0]",
    parentDataPath: "root",
    basePath: "root.contact",
    baseId: "Patient.contact",
    isPrimitive: false,
    childPaths: [
      "root.contact.relationship[0]",
      "root.contact.name",
      "root.contact.telecom[0]",
      "root.contact.address",
      "root.contact.gender",
      "root.contact.organization",
      "root.contact.period",
    ],
    value: "",
  },
  {
    element: {
      id: "Patient.contact.relationship",
      path: "Patient.contact.relationship",
      short: "The kind of relationship",
      definition:
        "The nature of the relationship between the patient and the contact person.",
      requirements:
        "Used to determine which contact person is the most relevant to approach, depending on circumstances.",
      min: 0,
      max: "*",
      base: { path: "Patient.contact.relationship", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ContactRelationship",
          },
        ],
        strength: "extensible",
        description:
          "The nature of the relationship between a patient and a contact person for that patient.",
        valueSet: "http://hl7.org/fhir/ValueSet/patient-contactrelationship",
      },
      mapping: [
        { identity: "v2", map: "NK1-7, NK1-3" },
        { identity: "rim", map: "code" },
        { identity: "cda", map: "n/a" },
      ],
    },
    dataPath: "root.contact.relationship[0]",
    parentDataPath: "root.contact[0]",
    basePath: "root.relationship",
    baseId: "Patient.contact.relationship",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "BP",
        display: "Billing contact person",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "CP",
        display: "Contact person",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "EP",
        display: "Emergency contact person",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "PR",
        display: "Person preparing referral",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "E",
        display: "Employer",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "C",
        display: "Emergency Contact",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "F",
        display: "Federal Agency",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "I",
        display: "Insurance Company",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "N",
        display: "Next-of-Kin",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "S",
        display: "State Agency",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "O",
        display: "Other",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/v2-0131",
        code: "U",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "Patient.contact.telecom",
      path: "Patient.contact.telecom",
      short: "A contact detail for the person",
      definition:
        "A contact detail for the person, e.g. a telephone number or an email address.",
      comment:
        "Contact may have multiple ways to be contacted with different uses or applicable periods.  May need to have options for contacting the person urgently, and also to help with identification.",
      requirements:
        "People have (primary) ways to contact them in some way such as phone, email.",
      min: 0,
      max: "*",
      base: { path: "Patient.contact.telecom", min: 0, max: "*" },
      type: [{ code: "ContactPoint" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "NK1-5, NK1-6, NK1-40" },
        { identity: "rim", map: "telecom" },
        { identity: "cda", map: "n/a" },
      ],
    },
    dataPath: "root.contact.telecom[0]",
    parentDataPath: "root.contact[0]",
    basePath: "root.telecom",
    baseId: "Patient.contact.telecom",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.contact.gender",
      path: "Patient.contact.gender",
      short: "male | female | other | unknown",
      definition:
        "Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.",
      requirements: "Needed to address the person correctly.",
      min: 0,
      max: "1",
      base: { path: "Patient.contact.gender", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "AdministrativeGender",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The gender of a person used for administrative purposes.",
        valueSet: "http://hl7.org/fhir/ValueSet/administrative-gender|4.3.0",
      },
      mapping: [
        { identity: "v2", map: "NK1-15" },
        {
          identity: "rim",
          map: "player[classCode=PSN|ANM and determinerCode=INSTANCE]/administrativeGender",
        },
        { identity: "cda", map: "n/a" },
      ],
    },
    dataPath: "root.contact.gender",
    parentDataPath: "root.contact[0]",
    basePath: "root.gender",
    baseId: "Patient.contact.gender",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/administrative-gender",
        code: "male",
        display: "Male",
      },
      {
        system: "http://hl7.org/fhir/administrative-gender",
        code: "female",
        display: "Female",
      },
      {
        system: "http://hl7.org/fhir/administrative-gender",
        code: "other",
        display: "Other",
      },
      {
        system: "http://hl7.org/fhir/administrative-gender",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "Patient.contact.period",
      path: "Patient.contact.period",
      short:
        "The period during which this contact person or organization is valid to be contacted relating to this patient",
      definition:
        "The period during which this contact person or organization is valid to be contacted relating to this patient.",
      min: 0,
      max: "1",
      base: { path: "Patient.contact.period", min: 0, max: "1" },
      type: [{ code: "Period" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "effectiveTime" },
        { identity: "cda", map: "n/a" },
      ],
    },
    dataPath: "root.contact.period",
    parentDataPath: "root.contact[0]",
    basePath: "root.period",
    baseId: "Patient.contact.period",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.communication",
      path: "Patient.communication",
      short:
        "A language which may be used to communicate with the patient about his or her health",
      definition:
        "A language which may be used to communicate with the patient about his or her health.",
      comment:
        "If no language is specified, this *implies* that the default local language is spoken.  If you need to convey proficiency for multiple modes, then you need multiple Patient.Communication associations.   For animals, language is not a relevant field, and should be absent from the instance. If the Patient does not speak the default local language, then the Interpreter Required Standard can be used to explicitly declare that an interpreter is required.",
      requirements:
        "If a patient does not speak the local language, interpreters may be required, so languages spoken and proficiency are important things to keep track of both for patient and other persons of interest.",
      min: 0,
      max: "*",
      base: { path: "Patient.communication", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "LanguageCommunication" },
        { identity: "cda", map: "patient.languageCommunication" },
      ],
    },
    dataPath: "root.communication[0]",
    parentDataPath: "root",
    basePath: "root.communication",
    baseId: "Patient.communication",
    isPrimitive: false,
    childPaths: ["root.communication.language", "root.communication.preferred"],
    value: "",
  },
  {
    element: {
      id: "Patient.communication.language",
      path: "Patient.communication.language",
      short:
        "The language which can be used to communicate with the patient about his or her health",
      definition:
        'The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. "en" for English, or "en-US" for American English versus "en-EN" for England English.',
      comment:
        "The structure aa-BB with this exact casing is one the most widely used notations for locale. However not all systems actually code this but instead have it as free text. Hence CodeableConcept instead of code as the data type.",
      requirements:
        "Most systems in multilingual countries will want to convey language. Not all systems actually need the regional dialect.",
      min: 1,
      max: "1",
      base: { path: "Patient.communication.language", min: 1, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
      mapping: [
        { identity: "v2", map: "PID-15, LAN-2" },
        {
          identity: "rim",
          map: "player[classCode=PSN|ANM and determinerCode=INSTANCE]/languageCommunication/code",
        },
        { identity: "cda", map: ".languageCode" },
      ],
    },
    dataPath: "root.communication.language",
    parentDataPath: "root.communication[0]",
    basePath: "root.language",
    baseId: "Patient.communication.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "Patient.communication.preferred",
      path: "Patient.communication.preferred",
      short: "Language preference indicator",
      definition:
        "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).",
      comment:
        "This language is specifically identified for communicating healthcare information.",
      requirements:
        "People that master multiple languages up to certain level may prefer one or more, i.e. feel more confident in communicating in a particular language making other languages sort of a fall back method.",
      min: 0,
      max: "1",
      base: { path: "Patient.communication.preferred", min: 0, max: "1" },
      type: [{ code: "boolean" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "v2", map: "PID-15" },
        { identity: "rim", map: "preferenceInd" },
        { identity: "cda", map: ".preferenceInd" },
      ],
    },
    dataPath: "root.communication.preferred",
    parentDataPath: "root.communication[0]",
    basePath: "root.preferred",
    baseId: "Patient.communication.preferred",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.managingOrganization",
      path: "Patient.managingOrganization",
      short: "Organization that is the custodian of the patient record",
      definition: "Organization that is the custodian of the patient record.",
      comment:
        "There is only one managing organization for a specific patient record. Other organizations will have their own Patient record, and may use the Link property to join the records together (or a Person resource which can include confidence ratings for the association).",
      requirements:
        "Need to know who recognizes this patient record, manages and updates it.",
      min: 0,
      max: "1",
      base: { path: "Patient.managingOrganization", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "rim", map: "scoper" },
        { identity: "cda", map: ".providerOrganization" },
      ],
    },
    dataPath: "root.managingOrganization",
    parentDataPath: "root",
    basePath: "root.managingOrganization",
    baseId: "Patient.managingOrganization",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "Patient.link",
      path: "Patient.link",
      short:
        "Link to another patient resource that concerns the same actual person",
      definition:
        "Link to another patient resource that concerns the same actual patient.",
      comment:
        "There is no assumption that linked patient records have mutual links.",
      requirements:
        "There are multiple use cases:   \n\n* Duplicate patient records due to the clerical errors associated with the difficulties of identifying humans consistently, and \n* Distribution of patient information across multiple servers.",
      min: 0,
      max: "*",
      base: { path: "Patient.link", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because it might not be the main Patient resource, and the referenced patient should be used instead of this Patient record. This is when the link.type value is 'replaced-by'",
      isSummary: true,
      mapping: [
        { identity: "rim", map: "outboundLink" },
        { identity: "cda", map: "n/a" },
      ],
    },
    dataPath: "root.link[0]",
    parentDataPath: "root",
    basePath: "root.link",
    baseId: "Patient.link",
    isPrimitive: false,
    childPaths: ["root.link.other", "root.link.type"],
    value: "",
  },
  {
    element: {
      id: "Patient.link.type",
      path: "Patient.link.type",
      short: "replaced-by | replaces | refer | seealso",
      definition:
        "The type of link between this patient resource and another patient resource.",
      min: 1,
      max: "1",
      base: { path: "Patient.link.type", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "LinkType",
          },
        ],
        strength: "required",
        description:
          "The type of link between this patient resource and another patient resource.",
        valueSet: "http://hl7.org/fhir/ValueSet/link-type|4.3.0",
      },
      mapping: [
        { identity: "rim", map: "typeCode" },
        { identity: "cda", map: "n/a" },
      ],
    },
    dataPath: "root.link.type",
    parentDataPath: "root.link[0]",
    basePath: "root.type",
    baseId: "Patient.link.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/link-type",
        code: "replaced-by",
        display: "Replaced-by",
      },
      {
        system: "http://hl7.org/fhir/link-type",
        code: "replaces",
        display: "Replaces",
      },
      {
        system: "http://hl7.org/fhir/link-type",
        code: "refer",
        display: "Refer",
      },
      {
        system: "http://hl7.org/fhir/link-type",
        code: "seealso",
        display: "See also",
      },
    ],
  },
  {
    element: {
      id: "Patient",
      path: "Patient",
      short:
        "Information about an individual or animal receiving health care services",
      definition:
        "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
      alias: ["SubjectOfCare Client Resident"],
      min: 0,
      max: "*",
      base: { path: "Patient", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "rim", map: "Patient[classCode=PAT]" },
        { identity: "cda", map: "ClinicalDocument.recordTarget.patientRole" },
        { identity: "w5", map: "administrative.individual" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "Patient",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
