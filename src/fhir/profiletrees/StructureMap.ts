const data = [
  {
    element: {
      id: "StructureMap.meta",
      path: "StructureMap.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "StructureMap.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.implicitRules",
      path: "StructureMap.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "StructureMap.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.language",
      path: "StructureMap.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "StructureMap.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "StructureMap.contained",
      path: "StructureMap.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/StructureMap",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "StructureMap.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.url",
      path: "StructureMap.url",
      short:
        "Canonical identifier for this structure map, represented as a URI (globally unique)",
      definition:
        "An absolute URI that is used to identify this structure map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this structure map is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the structure map is stored on different servers.",
      comment:
        "Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.\n\nThe determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). \n\nIn some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.",
      requirements:
        "Allows the structure map to be referenced by a single globally unique identifier.",
      alias: ["url", "authoritative-url", "destination", "identity"],
      min: 1,
      max: "1",
      base: { path: "StructureMap.url", min: 1, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.url" },
        { identity: "w5", map: "FiveWs.identifier" },
      ],
    },
    dataPath: "root.url",
    parentDataPath: "root",
    basePath: "root.url",
    baseId: "StructureMap.url",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.version",
      path: "StructureMap.version",
      short: "Business version of the structure map",
      definition:
        "The identifier that is used to identify this version of the structure map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
      comment:
        "There may be different structure map instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the structure map with the format [url]|[version].",
      min: 0,
      max: "1",
      base: { path: "StructureMap.version", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.version" },
        { identity: "w5", map: "FiveWs.version" },
      ],
    },
    dataPath: "root.version",
    parentDataPath: "root",
    basePath: "root.version",
    baseId: "StructureMap.version",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.name",
      path: "StructureMap.name",
      short: "Name for this structure map (computer friendly)",
      definition:
        "A natural language name identifying the structure map. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
      comment:
        "The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.",
      requirements: "Support human navigation and code generation.",
      min: 1,
      max: "1",
      base: { path: "StructureMap.name", min: 1, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.name",
    parentDataPath: "root",
    basePath: "root.name",
    baseId: "StructureMap.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.title",
      path: "StructureMap.title",
      short: "Name for this structure map (human friendly)",
      definition:
        "A short, descriptive, user-friendly title for the structure map.",
      comment:
        "This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.title", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "workflow", map: "Definition.title" }],
    },
    dataPath: "root.title",
    parentDataPath: "root",
    basePath: "root.title",
    baseId: "StructureMap.title",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.status",
      path: "StructureMap.status",
      short: "draft | active | retired | unknown",
      definition:
        "The status of this structure map. Enables tracking the life-cycle of the content.",
      comment:
        "Allows filtering of structure maps that are appropriate for use versus not.",
      min: 1,
      max: "1",
      base: { path: "StructureMap.status", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        'This is labeled as "Is Modifier" because applications should not use a retired {{title}} without due consideration',
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "PublicationStatus",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The lifecycle status of an artifact.",
        valueSet: "http://hl7.org/fhir/ValueSet/publication-status|4.3.0",
      },
      mapping: [
        { identity: "workflow", map: "Definition.status" },
        { identity: "w5", map: "FiveWs.status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "StructureMap.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "retired",
        display: "Retired",
      },
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "StructureMap.experimental",
      path: "StructureMap.experimental",
      short: "For testing purposes, not real usage",
      definition:
        "A Boolean value to indicate that this structure map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
      comment:
        "Allows filtering of structure maps that are appropriate for use versus not.",
      requirements:
        "Enables experimental content to be developed following the same lifecycle that would be used for a production-level structure map.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.experimental", min: 0, max: "1" },
      type: [{ code: "boolean" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.experimental" },
        { identity: "w5", map: "FiveWs.class" },
      ],
    },
    dataPath: "root.experimental",
    parentDataPath: "root",
    basePath: "root.experimental",
    baseId: "StructureMap.experimental",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.date",
      path: "StructureMap.date",
      short: "Date last changed",
      definition:
        "The date  (and optionally time) when the structure map was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure map changes.",
      comment:
        "Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the structure map. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.",
      alias: ["Revision Date"],
      min: 0,
      max: "1",
      base: { path: "StructureMap.date", min: 0, max: "1" },
      type: [{ code: "dateTime" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.date" },
        { identity: "w5", map: "FiveWs.recorded" },
      ],
    },
    dataPath: "root.date",
    parentDataPath: "root",
    basePath: "root.date",
    baseId: "StructureMap.date",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.publisher",
      path: "StructureMap.publisher",
      short: "Name of the publisher (organization or individual)",
      definition:
        "The name of the organization or individual that published the structure map.",
      comment:
        "Usually an organization but may be an individual. The publisher (or steward) of the structure map is the organization or individual primarily responsible for the maintenance and upkeep of the structure map. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the structure map. This item SHOULD be populated unless the information is available from context.",
      requirements:
        'Helps establish the "authority/credibility" of the structure map.  May also allow for contact.',
      min: 0,
      max: "1",
      base: { path: "StructureMap.publisher", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [
        { identity: "workflow", map: "Definition.publisher" },
        { identity: "w5", map: "FiveWs.witness" },
      ],
    },
    dataPath: "root.publisher",
    parentDataPath: "root",
    basePath: "root.publisher",
    baseId: "StructureMap.publisher",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.description",
      path: "StructureMap.description",
      short: "Natural language description of the structure map",
      definition:
        "A free text natural language description of the structure map from a consumer's perspective.",
      comment:
        "This description can be used to capture details such as why the structure map was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the structure map as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the structure map is presumed to be the predominant language in the place the structure map was created).",
      min: 0,
      max: "1",
      base: { path: "StructureMap.description", min: 0, max: "1" },
      type: [{ code: "markdown" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "workflow", map: "Definition.description" }],
    },
    dataPath: "root.description",
    parentDataPath: "root",
    basePath: "root.description",
    baseId: "StructureMap.description",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.jurisdiction",
      path: "StructureMap.jurisdiction",
      short: "Intended jurisdiction for structure map (if applicable)",
      definition:
        "A legal or geographic region in which the structure map is intended to be used.",
      comment:
        "It may be possible for the structure map to be used in jurisdictions other than those for which it was originally designed or intended.",
      min: 0,
      max: "*",
      base: { path: "StructureMap.jurisdiction", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Jurisdiction",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "extensible",
        description:
          "Countries and regions within which this artifact is targeted for use.",
        valueSet: "http://hl7.org/fhir/ValueSet/jurisdiction",
      },
      mapping: [{ identity: "workflow", map: "Definition.jurisdiction" }],
    },
    dataPath: "root.jurisdiction[0]",
    parentDataPath: "root",
    basePath: "root.jurisdiction",
    baseId: "StructureMap.jurisdiction",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.purpose",
      path: "StructureMap.purpose",
      short: "Why this structure map is defined",
      definition:
        "Explanation of why this structure map is needed and why it has been designed as it has.",
      comment:
        "This element does not describe the usage of the structure map. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this structure map.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.purpose", min: 0, max: "1" },
      type: [{ code: "markdown" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Definition.purpose" },
        { identity: "w5", map: "FiveWs.why[x]" },
        { identity: "objimpl", map: "no-gen-base" },
      ],
    },
    dataPath: "root.purpose",
    parentDataPath: "root",
    basePath: "root.purpose",
    baseId: "StructureMap.purpose",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.copyright",
      path: "StructureMap.copyright",
      short: "Use and/or publishing restrictions",
      definition:
        "A copyright statement relating to the structure map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure map.",
      requirements:
        "Consumers must be able to determine any legal restrictions on the use of the structure map and/or its content.",
      alias: ["License", "Restrictions"],
      min: 0,
      max: "1",
      base: { path: "StructureMap.copyright", min: 0, max: "1" },
      type: [{ code: "markdown" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "workflow", map: "Definition.copyright" },
        { identity: "objimpl", map: "no-gen-base" },
      ],
    },
    dataPath: "root.copyright",
    parentDataPath: "root",
    basePath: "root.copyright",
    baseId: "StructureMap.copyright",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.structure",
      path: "StructureMap.structure",
      short: "Structure Definition used by this map",
      definition:
        "A structure definition used by this map. The structure definition may describe instances that are converted, or the instances that are produced.",
      comment:
        "It is not necessary for a structure map to identify any dependent structures, though not listing them may restrict its usefulness.",
      min: 0,
      max: "*",
      base: { path: "StructureMap.structure", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structure[0]",
    parentDataPath: "root",
    basePath: "root.structure",
    baseId: "StructureMap.structure",
    isPrimitive: false,
    childPaths: [
      "root.structure.url",
      "root.structure.mode",
      "root.structure.alias",
      "root.structure.documentation",
    ],
    value: "",
  },
  {
    element: {
      id: "StructureMap.structure.url",
      path: "StructureMap.structure.url",
      short: "Canonical reference to structure definition",
      definition: "The canonical reference to the structure.",
      min: 1,
      max: "1",
      base: { path: "StructureMap.structure.url", min: 1, max: "1" },
      type: [
        {
          code: "canonical",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/StructureDefinition",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structure.url",
    parentDataPath: "root.structure[0]",
    basePath: "root.url",
    baseId: "StructureMap.structure.url",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.structure.mode",
      path: "StructureMap.structure.mode",
      short: "source | queried | target | produced",
      definition: "How the referenced structure is used in this mapping.",
      min: 1,
      max: "1",
      base: { path: "StructureMap.structure.mode", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "StructureMapModelMode",
          },
        ],
        strength: "required",
        description: "How the referenced structure is used in this mapping.",
        valueSet: "http://hl7.org/fhir/ValueSet/map-model-mode|4.3.0",
      },
    },
    dataPath: "root.structure.mode",
    parentDataPath: "root.structure[0]",
    basePath: "root.mode",
    baseId: "StructureMap.structure.mode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/map-model-mode",
        code: "source",
        display: "Source Structure Definition",
      },
      {
        system: "http://hl7.org/fhir/map-model-mode",
        code: "queried",
        display: "Queried Structure Definition",
      },
      {
        system: "http://hl7.org/fhir/map-model-mode",
        code: "target",
        display: "Target Structure Definition",
      },
      {
        system: "http://hl7.org/fhir/map-model-mode",
        code: "produced",
        display: "Produced Structure Definition",
      },
    ],
  },
  {
    element: {
      id: "StructureMap.structure.alias",
      path: "StructureMap.structure.alias",
      short: "Name for type in this map",
      definition: "The name used for this type in the map.",
      comment:
        "This is needed if both types have the same name (e.g. version conversion).",
      min: 0,
      max: "1",
      base: { path: "StructureMap.structure.alias", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.structure.alias",
    parentDataPath: "root.structure[0]",
    basePath: "root.alias",
    baseId: "StructureMap.structure.alias",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.structure.documentation",
      path: "StructureMap.structure.documentation",
      short: "Documentation on use of structure",
      definition:
        "Documentation that describes how the structure is used in the mapping.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.structure.documentation", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.structure.documentation",
    parentDataPath: "root.structure[0]",
    basePath: "root.documentation",
    baseId: "StructureMap.structure.documentation",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.import",
      path: "StructureMap.import",
      short: "Other maps used by this map (canonical URLs)",
      definition: "Other maps used by this map (canonical URLs).",
      min: 0,
      max: "*",
      base: { path: "StructureMap.import", min: 0, max: "*" },
      type: [
        {
          code: "canonical",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/StructureMap",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.import[0]",
    parentDataPath: "root",
    basePath: "root.import",
    baseId: "StructureMap.import",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group",
      path: "StructureMap.group",
      short: "Named sections for reader convenience",
      definition:
        "Organizes the mapping into manageable chunks for human review/ease of maintenance.",
      min: 1,
      max: "*",
      base: { path: "StructureMap.group", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group[0]",
    parentDataPath: "root",
    basePath: "root.group",
    baseId: "StructureMap.group",
    isPrimitive: false,
    childPaths: [
      "root.group.name",
      "root.group.extends",
      "root.group.typeMode",
      "root.group.documentation",
      "root.group.input[0]",
      "root.group.rule[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.name",
      path: "StructureMap.group.name",
      short: "Human-readable label",
      definition:
        "A unique name for the group for the convenience of human readers.",
      min: 1,
      max: "1",
      base: { path: "StructureMap.group.name", min: 1, max: "1" },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.name",
    parentDataPath: "root.group[0]",
    basePath: "root.name",
    baseId: "StructureMap.group.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.extends",
      path: "StructureMap.group.extends",
      short: "Another group that this group adds rules to",
      definition: "Another group that this group adds rules to.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.group.extends", min: 0, max: "1" },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.extends",
    parentDataPath: "root.group[0]",
    basePath: "root.extends",
    baseId: "StructureMap.group.extends",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.typeMode",
      path: "StructureMap.group.typeMode",
      short: "none | types | type-and-types",
      definition:
        "If this is the default rule set to apply for the source type or this combination of types.",
      comment:
        "Not applicable if the underlying model is untyped. There can only be one default mapping for any particular type combination.",
      min: 1,
      max: "1",
      base: { path: "StructureMap.group.typeMode", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "StructureMapGroupTypeMode",
          },
        ],
        strength: "required",
        description:
          "If this is the default rule set to apply for the source type, or this combination of types.",
        valueSet: "http://hl7.org/fhir/ValueSet/map-group-type-mode|4.3.0",
      },
    },
    dataPath: "root.group.typeMode",
    parentDataPath: "root.group[0]",
    basePath: "root.typeMode",
    baseId: "StructureMap.group.typeMode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/map-group-type-mode",
        code: "none",
        display: "Not a Default",
      },
      {
        system: "http://hl7.org/fhir/map-group-type-mode",
        code: "types",
        display: "Default for Type Combination",
      },
      {
        system: "http://hl7.org/fhir/map-group-type-mode",
        code: "type-and-types",
        display: "Default for type + combination",
      },
    ],
  },
  {
    element: {
      id: "StructureMap.group.documentation",
      path: "StructureMap.group.documentation",
      short: "Additional description/explanation for group",
      definition:
        "Additional supporting documentation that explains the purpose of the group and the types of mappings within it.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.group.documentation", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.documentation",
    parentDataPath: "root.group[0]",
    basePath: "root.documentation",
    baseId: "StructureMap.group.documentation",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.input",
      path: "StructureMap.group.input",
      short: "Named instance provided when invoking the map",
      definition:
        "A name assigned to an instance of data. The instance must be provided when the mapping is invoked.",
      comment:
        "If no inputs are named, then the entry mappings are type based.",
      min: 1,
      max: "*",
      base: { path: "StructureMap.group.input", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.input[0]",
    parentDataPath: "root.group[0]",
    basePath: "root.input",
    baseId: "StructureMap.group.input",
    isPrimitive: false,
    childPaths: [
      "root.group.input.name",
      "root.group.input.type",
      "root.group.input.mode",
      "root.group.input.documentation",
    ],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.input.name",
      path: "StructureMap.group.input.name",
      short: "Name for this instance of data",
      definition: "Name for this instance of data.",
      min: 1,
      max: "1",
      base: { path: "StructureMap.group.input.name", min: 1, max: "1" },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.input.name",
    parentDataPath: "root.group.input[0]",
    basePath: "root.name",
    baseId: "StructureMap.group.input.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.input.type",
      path: "StructureMap.group.input.type",
      short: "Type for this instance of data",
      definition: "Type for this instance of data.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.group.input.type", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.input.type",
    parentDataPath: "root.group.input[0]",
    basePath: "root.type",
    baseId: "StructureMap.group.input.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.input.mode",
      path: "StructureMap.group.input.mode",
      short: "source | target",
      definition: "Mode for this instance of data.",
      min: 1,
      max: "1",
      base: { path: "StructureMap.group.input.mode", min: 1, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "StructureMapInputMode",
          },
        ],
        strength: "required",
        description: "Mode for this instance of data.",
        valueSet: "http://hl7.org/fhir/ValueSet/map-input-mode|4.3.0",
      },
    },
    dataPath: "root.group.input.mode",
    parentDataPath: "root.group.input[0]",
    basePath: "root.mode",
    baseId: "StructureMap.group.input.mode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/map-input-mode",
        code: "source",
        display: "Source Instance",
      },
      {
        system: "http://hl7.org/fhir/map-input-mode",
        code: "target",
        display: "Target Instance",
      },
    ],
  },
  {
    element: {
      id: "StructureMap.group.input.documentation",
      path: "StructureMap.group.input.documentation",
      short: "Documentation for this instance of data",
      definition: "Documentation for this instance of data.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.input.documentation",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.input.documentation",
    parentDataPath: "root.group.input[0]",
    basePath: "root.documentation",
    baseId: "StructureMap.group.input.documentation",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule",
      path: "StructureMap.group.rule",
      short: "Transform Rule from source to target",
      definition: "Transform Rule from source to target.",
      min: 1,
      max: "*",
      base: { path: "StructureMap.group.rule", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule[0]",
    parentDataPath: "root.group[0]",
    basePath: "root.rule",
    baseId: "StructureMap.group.rule",
    isPrimitive: false,
    childPaths: [
      "root.group.rule.name",
      "root.group.rule.source[0]",
      "root.group.rule.target[0]",
      "root.group.rule.rule[0]",
      "root.group.rule.dependent[0]",
      "root.group.rule.documentation",
    ],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.name",
      path: "StructureMap.group.rule.name",
      short: "Name of the rule for internal references",
      definition: "Name of the rule for internal references.",
      min: 1,
      max: "1",
      base: { path: "StructureMap.group.rule.name", min: 1, max: "1" },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.name",
    parentDataPath: "root.group.rule[0]",
    basePath: "root.name",
    baseId: "StructureMap.group.rule.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source",
      path: "StructureMap.group.rule.source",
      short: "Source inputs to the mapping",
      definition: "Source inputs to the mapping.",
      min: 1,
      max: "*",
      base: { path: "StructureMap.group.rule.source", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source[0]",
    parentDataPath: "root.group.rule[0]",
    basePath: "root.source",
    baseId: "StructureMap.group.rule.source",
    isPrimitive: false,
    childPaths: [
      "root.group.rule.source.context",
      "root.group.rule.source.min",
      "root.group.rule.source.max",
      "root.group.rule.source.type",
      "root.group.rule.source.defaultValue[x]",
      "root.group.rule.source.element",
      "root.group.rule.source.listMode",
      "root.group.rule.source.variable",
      "root.group.rule.source.condition",
      "root.group.rule.source.check",
      "root.group.rule.source.logMessage",
    ],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source.context",
      path: "StructureMap.group.rule.source.context",
      short: "Type or variable this rule applies to",
      definition: "Type or variable this rule applies to.",
      min: 1,
      max: "1",
      base: {
        path: "StructureMap.group.rule.source.context",
        min: 1,
        max: "1",
      },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source.context",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.context",
    baseId: "StructureMap.group.rule.source.context",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source.min",
      path: "StructureMap.group.rule.source.min",
      short: "Specified minimum cardinality",
      definition:
        "Specified minimum cardinality for the element. This is optional; if present, it acts an implicit check on the input content.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.group.rule.source.min", min: 0, max: "1" },
      type: [{ code: "integer" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source.min",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.min",
    baseId: "StructureMap.group.rule.source.min",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source.max",
      path: "StructureMap.group.rule.source.max",
      short: "Specified maximum cardinality (number or *)",
      definition:
        'Specified maximum cardinality for the element - a number or a "*". This is optional; if present, it acts an implicit check on the input content (* just serves as documentation; it\'s the default value).',
      min: 0,
      max: "1",
      base: { path: "StructureMap.group.rule.source.max", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source.max",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.max",
    baseId: "StructureMap.group.rule.source.max",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source.type",
      path: "StructureMap.group.rule.source.type",
      short: "Rule only applies if source has this type",
      definition:
        "Specified type for the element. This works as a condition on the mapping - use for polymorphic elements.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.group.rule.source.type", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source.type",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.type",
    baseId: "StructureMap.group.rule.source.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source.element",
      path: "StructureMap.group.rule.source.element",
      short: "Optional field for this source",
      definition: "Optional field for this source.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.source.element",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source.element",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.element",
    baseId: "StructureMap.group.rule.source.element",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source.listMode",
      path: "StructureMap.group.rule.source.listMode",
      short: "first | not_first | last | not_last | only_one",
      definition: "How to handle the list mode for this element.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.source.listMode",
        min: 0,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "StructureMapSourceListMode",
          },
        ],
        strength: "required",
        description: "If field is a list, how to manage the source.",
        valueSet: "http://hl7.org/fhir/ValueSet/map-source-list-mode|4.3.0",
      },
    },
    dataPath: "root.group.rule.source.listMode",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.listMode",
    baseId: "StructureMap.group.rule.source.listMode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/map-source-list-mode",
        code: "first",
        display: "First",
      },
      {
        system: "http://hl7.org/fhir/map-source-list-mode",
        code: "not_first",
        display: "All but the first",
      },
      {
        system: "http://hl7.org/fhir/map-source-list-mode",
        code: "last",
        display: "Last",
      },
      {
        system: "http://hl7.org/fhir/map-source-list-mode",
        code: "not_last",
        display: "All but the last",
      },
      {
        system: "http://hl7.org/fhir/map-source-list-mode",
        code: "only_one",
        display: "Enforce only one",
      },
    ],
  },
  {
    element: {
      id: "StructureMap.group.rule.source.variable",
      path: "StructureMap.group.rule.source.variable",
      short: "Named context for field, if a field is specified",
      definition: "Named context for field, if a field is specified.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.source.variable",
        min: 0,
        max: "1",
      },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source.variable",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.variable",
    baseId: "StructureMap.group.rule.source.variable",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source.condition",
      path: "StructureMap.group.rule.source.condition",
      short: "FHIRPath expression  - must be true or the rule does not apply",
      definition:
        "FHIRPath expression  - must be true or the rule does not apply.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.source.condition",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source.condition",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.condition",
    baseId: "StructureMap.group.rule.source.condition",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source.check",
      path: "StructureMap.group.rule.source.check",
      short:
        "FHIRPath expression  - must be true or the mapping engine throws an error instead of completing",
      definition:
        "FHIRPath expression  - must be true or the mapping engine throws an error instead of completing.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.group.rule.source.check", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source.check",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.check",
    baseId: "StructureMap.group.rule.source.check",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.source.logMessage",
      path: "StructureMap.group.rule.source.logMessage",
      short: "Message to put in log if source exists (FHIRPath)",
      definition:
        "A FHIRPath expression which specifies a message to put in the transform log when content matching the source rule is found.",
      comment:
        "This is typically used for recording that something Is not transformed to the target for some reason.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.source.logMessage",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.source.logMessage",
    parentDataPath: "root.group.rule.source[0]",
    basePath: "root.logMessage",
    baseId: "StructureMap.group.rule.source.logMessage",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.target",
      path: "StructureMap.group.rule.target",
      short: "Content to create because of this mapping rule",
      definition: "Content to create because of this mapping rule.",
      min: 0,
      max: "*",
      base: { path: "StructureMap.group.rule.target", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
        {
          key: "smp-1",
          severity: "error",
          human: "Can only have an element if you have a context",
          expression: "element.exists() implies context.exists()",
          xpath: "not(f:element) or (f:context)",
          source: "http://hl7.org/fhir/StructureDefinition/StructureMap",
        },
        {
          key: "smp-2",
          severity: "error",
          human: "Must have a contextType if you have a context",
          expression: "context.exists() implies contextType.exists()",
          xpath: "not(f:context) or (f:contextType)",
          source: "http://hl7.org/fhir/StructureDefinition/StructureMap",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.target[0]",
    parentDataPath: "root.group.rule[0]",
    basePath: "root.target",
    baseId: "StructureMap.group.rule.target",
    isPrimitive: false,
    childPaths: [
      "root.group.rule.target.context",
      "root.group.rule.target.contextType",
      "root.group.rule.target.element",
      "root.group.rule.target.variable",
      "root.group.rule.target.listMode[0]",
      "root.group.rule.target.listRuleId",
      "root.group.rule.target.transform",
      "root.group.rule.target.parameter[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.target.context",
      path: "StructureMap.group.rule.target.context",
      short: "Type or variable this rule applies to",
      definition: "Type or variable this rule applies to.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.target.context",
        min: 0,
        max: "1",
      },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.target.context",
    parentDataPath: "root.group.rule.target[0]",
    basePath: "root.context",
    baseId: "StructureMap.group.rule.target.context",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.target.contextType",
      path: "StructureMap.group.rule.target.contextType",
      short: "type | variable",
      definition: "How to interpret the context.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.target.contextType",
        min: 0,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "StructureMapContextType",
          },
        ],
        strength: "required",
        description: "How to interpret the context.",
        valueSet: "http://hl7.org/fhir/ValueSet/map-context-type|4.3.0",
      },
    },
    dataPath: "root.group.rule.target.contextType",
    parentDataPath: "root.group.rule.target[0]",
    basePath: "root.contextType",
    baseId: "StructureMap.group.rule.target.contextType",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/map-context-type",
        code: "type",
        display: "Type",
      },
      {
        system: "http://hl7.org/fhir/map-context-type",
        code: "variable",
        display: "Variable",
      },
    ],
  },
  {
    element: {
      id: "StructureMap.group.rule.target.element",
      path: "StructureMap.group.rule.target.element",
      short: "Field to create in the context",
      definition: "Field to create in the context.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.target.element",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.target.element",
    parentDataPath: "root.group.rule.target[0]",
    basePath: "root.element",
    baseId: "StructureMap.group.rule.target.element",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.target.variable",
      path: "StructureMap.group.rule.target.variable",
      short: "Named context for field, if desired, and a field is specified",
      definition:
        "Named context for field, if desired, and a field is specified.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.target.variable",
        min: 0,
        max: "1",
      },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.target.variable",
    parentDataPath: "root.group.rule.target[0]",
    basePath: "root.variable",
    baseId: "StructureMap.group.rule.target.variable",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.target.listMode",
      path: "StructureMap.group.rule.target.listMode",
      short: "first | share | last | collate",
      definition: "If field is a list, how to manage the list.",
      min: 0,
      max: "*",
      base: {
        path: "StructureMap.group.rule.target.listMode",
        min: 0,
        max: "*",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "StructureMapTargetListMode",
          },
        ],
        strength: "required",
        description: "If field is a list, how to manage the production.",
        valueSet: "http://hl7.org/fhir/ValueSet/map-target-list-mode|4.3.0",
      },
    },
    dataPath: "root.group.rule.target.listMode[0]",
    parentDataPath: "root.group.rule.target[0]",
    basePath: "root.listMode",
    baseId: "StructureMap.group.rule.target.listMode",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/map-target-list-mode",
        code: "first",
        display: "First",
      },
      {
        system: "http://hl7.org/fhir/map-target-list-mode",
        code: "share",
        display: "Share",
      },
      {
        system: "http://hl7.org/fhir/map-target-list-mode",
        code: "last",
        display: "Last",
      },
      {
        system: "http://hl7.org/fhir/map-target-list-mode",
        code: "collate",
        display: "Collate",
      },
    ],
  },
  {
    element: {
      id: "StructureMap.group.rule.target.listRuleId",
      path: "StructureMap.group.rule.target.listRuleId",
      short: "Internal rule reference for shared list items",
      definition: "Internal rule reference for shared list items.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.target.listRuleId",
        min: 0,
        max: "1",
      },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.target.listRuleId",
    parentDataPath: "root.group.rule.target[0]",
    basePath: "root.listRuleId",
    baseId: "StructureMap.group.rule.target.listRuleId",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.target.transform",
      path: "StructureMap.group.rule.target.transform",
      short: "create | copy +",
      definition: "How the data is copied / created.",
      min: 0,
      max: "1",
      base: {
        path: "StructureMap.group.rule.target.transform",
        min: 0,
        max: "1",
      },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "StructureMapTransform",
          },
        ],
        strength: "required",
        description: "How data is copied/created.",
        valueSet: "http://hl7.org/fhir/ValueSet/map-transform|4.3.0",
      },
    },
    dataPath: "root.group.rule.target.transform",
    parentDataPath: "root.group.rule.target[0]",
    basePath: "root.transform",
    baseId: "StructureMap.group.rule.target.transform",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "create",
        display: "create",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "copy",
        display: "copy",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "truncate",
        display: "truncate",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "escape",
        display: "escape",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "cast",
        display: "cast",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "append",
        display: "append",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "translate",
        display: "translate",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "reference",
        display: "reference",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "dateOp",
        display: "dateOp",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "uuid",
        display: "uuid",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "pointer",
        display: "pointer",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "evaluate",
        display: "evaluate",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "cc",
        display: "cc",
      },
      { system: "http://hl7.org/fhir/map-transform", code: "c", display: "c" },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "qty",
        display: "qty",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "id",
        display: "id",
      },
      {
        system: "http://hl7.org/fhir/map-transform",
        code: "cp",
        display: "cp",
      },
    ],
  },
  {
    element: {
      id: "StructureMap.group.rule.target.parameter",
      path: "StructureMap.group.rule.target.parameter",
      short: "Parameters to the transform",
      definition: "Parameters to the transform.",
      min: 0,
      max: "*",
      base: {
        path: "StructureMap.group.rule.target.parameter",
        min: 0,
        max: "*",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.target.parameter[0]",
    parentDataPath: "root.group.rule.target[0]",
    basePath: "root.parameter",
    baseId: "StructureMap.group.rule.target.parameter",
    isPrimitive: false,
    childPaths: ["root.group.rule.target.parameter.value[x]"],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.rule",
      path: "StructureMap.group.rule.rule",
      short: "Rules contained in this rule",
      definition: "Rules contained in this rule.",
      min: 0,
      max: "*",
      base: { path: "StructureMap.group.rule.rule", min: 0, max: "*" },
      contentReference: "#StructureMap.group.rule",
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.rule[0]",
    parentDataPath: "root.group.rule[0]",
    basePath: "root.rule",
    baseId: "StructureMap.group.rule.rule",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.dependent",
      path: "StructureMap.group.rule.dependent",
      short: "Which other rules to apply in the context of this rule",
      definition: "Which other rules to apply in the context of this rule.",
      min: 0,
      max: "*",
      base: { path: "StructureMap.group.rule.dependent", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.dependent[0]",
    parentDataPath: "root.group.rule[0]",
    basePath: "root.dependent",
    baseId: "StructureMap.group.rule.dependent",
    isPrimitive: false,
    childPaths: [
      "root.group.rule.dependent.name",
      "root.group.rule.dependent.variable[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.dependent.name",
      path: "StructureMap.group.rule.dependent.name",
      short: "Name of a rule or group to apply",
      definition: "Name of a rule or group to apply.",
      min: 1,
      max: "1",
      base: {
        path: "StructureMap.group.rule.dependent.name",
        min: 1,
        max: "1",
      },
      type: [{ code: "id" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.dependent.name",
    parentDataPath: "root.group.rule.dependent[0]",
    basePath: "root.name",
    baseId: "StructureMap.group.rule.dependent.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.dependent.variable",
      path: "StructureMap.group.rule.dependent.variable",
      short: "Variable to pass to the rule or group",
      definition: "Variable to pass to the rule or group.",
      min: 1,
      max: "*",
      base: {
        path: "StructureMap.group.rule.dependent.variable",
        min: 1,
        max: "*",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.group.rule.dependent.variable[0]",
    parentDataPath: "root.group.rule.dependent[0]",
    basePath: "root.variable",
    baseId: "StructureMap.group.rule.dependent.variable",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap.group.rule.documentation",
      path: "StructureMap.group.rule.documentation",
      short: "Documentation for this instance of data",
      definition: "Documentation for this instance of data.",
      min: 0,
      max: "1",
      base: { path: "StructureMap.group.rule.documentation", min: 0, max: "1" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.group.rule.documentation",
    parentDataPath: "root.group.rule[0]",
    basePath: "root.documentation",
    baseId: "StructureMap.group.rule.documentation",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "StructureMap",
      path: "StructureMap",
      short:
        "A Map of relationships between 2 structures that can be used to transform data",
      definition:
        "A Map of relationships between 2 structures that can be used to transform data.",
      alias: ["Template", "Profile"],
      min: 0,
      max: "*",
      base: { path: "StructureMap", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "smp-0",
          severity: "warning",
          human:
            "Name should be usable as an identifier for the module by machine processing applications such as code generation",
          expression:
            "name.exists() implies name.matches('[A-Z]([A-Za-z0-9_]){0,254}')",
          xpath:
            "not(exists(f:name/@value)) or matches(f:name/@value, '[A-Z]([A-Za-z0-9_]){0,254}')",
          source: "http://hl7.org/fhir/StructureDefinition/StructureMap",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "rim", map: "n/a" },
        { identity: "w5", map: "conformance.content" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "StructureMap",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
