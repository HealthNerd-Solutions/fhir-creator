const data = [
  {
    element: {
      id: "InsurancePlan.meta",
      path: "InsurancePlan.meta",
      short: "Metadata about the resource",
      definition:
        "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      min: 0,
      max: "1",
      base: { path: "Resource.meta", min: 0, max: "1" },
      type: [{ code: "Meta" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.meta",
    parentDataPath: "root",
    basePath: "root.meta",
    baseId: "InsurancePlan.meta",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.implicitRules",
      path: "InsurancePlan.implicitRules",
      short: "A set of rules under which this content was created",
      definition:
        "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
      comment:
        "Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.",
      min: 0,
      max: "1",
      base: { path: "Resource.implicitRules", min: 0, max: "1" },
      type: [{ code: "uri" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because the implicit rules may provide additional knowledge about the resource that modifies it's meaning or interpretation",
      isSummary: true,
    },
    dataPath: "root.implicitRules",
    parentDataPath: "root",
    basePath: "root.implicitRules",
    baseId: "InsurancePlan.implicitRules",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.language",
      path: "InsurancePlan.language",
      short: "Language of the resource content",
      definition: "The base language in which the resource is written.",
      comment:
        "Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).",
      min: 0,
      max: "1",
      base: { path: "Resource.language", min: 0, max: "1" },
      type: [{ code: "code" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet",
            valueCanonical: "http://hl7.org/fhir/ValueSet/all-languages",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "Language",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "preferred",
        description: "IETF language tag",
        valueSet: "http://hl7.org/fhir/ValueSet/languages",
      },
    },
    dataPath: "root.language",
    parentDataPath: "root",
    basePath: "root.language",
    baseId: "InsurancePlan.language",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      { code: "ar", display: "Arabic" },
      { code: "bn", display: "Bengali" },
      { code: "cs", display: "Czech" },
      { code: "da", display: "Danish" },
      { code: "de", display: "German" },
      { code: "de-AT", display: "German (Austria)" },
      { code: "de-CH", display: "German (Switzerland)" },
      { code: "de-DE", display: "German (Germany)" },
      { code: "el", display: "Greek" },
      { code: "en", display: "English" },
      { code: "en-AU", display: "English (Australia)" },
      { code: "en-CA", display: "English (Canada)" },
      { code: "en-GB", display: "English (Great Britain)" },
      { code: "en-IN", display: "English (India)" },
      { code: "en-NZ", display: "English (New Zeland)" },
      { code: "en-SG", display: "English (Singapore)" },
      { code: "en-US", display: "English (United States)" },
      { code: "es", display: "Spanish" },
      { code: "es-AR", display: "Spanish (Argentina)" },
      { code: "es-ES", display: "Spanish (Spain)" },
      { code: "es-UY", display: "Spanish (Uruguay)" },
      { code: "fi", display: "Finnish" },
      { code: "fr", display: "French" },
      { code: "fr-BE", display: "French (Belgium)" },
      { code: "fr-CH", display: "French (Switzerland)" },
      { code: "fr-FR", display: "French (France)" },
      { code: "fy", display: "Frysian" },
      { code: "fy-NL", display: "Frysian (Netherlands)" },
      { code: "hi", display: "Hindi" },
      { code: "hr", display: "Croatian" },
      { code: "it", display: "Italian" },
      { code: "it-CH", display: "Italian (Switzerland)" },
      { code: "it-IT", display: "Italian (Italy)" },
      { code: "ja", display: "Japanese" },
      { code: "ko", display: "Korean" },
      { code: "nl", display: "Dutch" },
      { code: "nl-BE", display: "Dutch (Belgium)" },
      { code: "nl-NL", display: "Dutch (Netherlands)" },
      { code: "no", display: "Norwegian" },
      { code: "no-NO", display: "Norwegian (Norway)" },
      { code: "pa", display: "Punjabi" },
      { code: "pl", display: "Polish" },
      { code: "pt", display: "Portuguese" },
      { code: "pt-BR", display: "Portuguese (Brazil)" },
      { code: "ru", display: "Russian" },
      { code: "ru-RU", display: "Russian (Russia)" },
      { code: "sr", display: "Serbian" },
      { code: "sr-RS", display: "Serbian (Serbia)" },
      { code: "sv", display: "Swedish" },
      { code: "sv-SE", display: "Swedish (Sweden)" },
      { code: "te", display: "Telegu" },
      { code: "zh", display: "Chinese" },
      { code: "zh-CN", display: "Chinese (China)" },
      { code: "zh-HK", display: "Chinese (Hong Kong)" },
      { code: "zh-SG", display: "Chinese (Singapore)" },
      { code: "zh-TW", display: "Chinese (Taiwan)" },
    ],
  },
  {
    element: {
      id: "InsurancePlan.contained",
      path: "InsurancePlan.contained",
      short: "Contained, inline Resources",
      definition:
        "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
      comment:
        "This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.",
      alias: ["inline resources", "anonymous resources", "contained resources"],
      min: 0,
      max: "*",
      base: { path: "DomainResource.contained", min: 0, max: "*" },
      type: [{ code: "Resource" }],
      constraint: [
        {
          key: "dom-r4b",
          severity: "warning",
          human:
            "Containing new R4B resources within R4 resources may cause interoperability issues if instances are shared with R4 systems",
          expression:
            "($this is Citation or $this is Evidence or $this is EvidenceReport or $this is EvidenceVariable or $this is MedicinalProductDefinition or $this is PackagedProductDefinition or $this is AdministrableProductDefinition or $this is Ingredient or $this is ClinicalUseDefinition or $this is RegulatedAuthorization or $this is SubstanceDefinition or $this is SubscriptionStatus or $this is SubscriptionTopic) implies (%resource is Citation or %resource is Evidence or %resource is EvidenceReport or %resource is EvidenceVariable or %resource is MedicinalProductDefinition or %resource is PackagedProductDefinition or %resource is AdministrableProductDefinition or %resource is Ingredient or %resource is ClinicalUseDefinition or %resource is RegulatedAuthorization or %resource is SubstanceDefinition or %resource is SubscriptionStatus or %resource is SubscriptionTopic)",
          xpath:
            "not(f:Citation|f:Evidence|f:EvidenceReport|f:EvidenceVariable|f:MedicinalProductDefinition|f:PackagedProductDefinition|f:AdministrableProductDefinition|f:Ingredient|f:ClinicalUseDefinition|f:RegulatedAuthorization|f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic) or not(parent::f:Citation|parent::f:Evidence|parent::f:EvidenceReport|parent::f:EvidenceVariable|parent::f:MedicinalProductDefinition|parent::f:PackagedProductDefinition|parent::f:AdministrableProductDefinition|parent::f:Ingredient|parent::f:ClinicalUseDefinition|parent::f:RegulatedAuthorization|parent::f:SubstanceDefinition|f:SubscriptionStatus|f:SubscriptionTopic)",
          source: "http://hl7.org/fhir/StructureDefinition/InsurancePlan",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "N/A" }],
    },
    dataPath: "root.contained[0]",
    parentDataPath: "root",
    basePath: "root.contained",
    baseId: "InsurancePlan.contained",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.status",
      path: "InsurancePlan.status",
      short: "draft | active | retired | unknown",
      definition: "The current state of the health insurance product.",
      requirements:
        "Need a flag to indicate a record is no longer to be used and should generally be hidden for the user in the UI.",
      min: 0,
      max: "1",
      base: { path: "InsurancePlan.status", min: 0, max: "1" },
      type: [{ code: "code" }],
      meaningWhenMissing: "Default interpretation is active.",
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: true,
      isModifierReason:
        "This element is labeled as a modifier because it is a status element that contains codes which means that the resource should not be treated as valid",
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "PublicationStatus",
          },
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
            valueBoolean: true,
          },
        ],
        strength: "required",
        description: "The lifecycle status of an artifact.",
        valueSet: "http://hl7.org/fhir/ValueSet/publication-status|4.3.0",
      },
      mapping: [
        { identity: "w5", map: "FiveWs.status" },
        { identity: "rim", map: ".status" },
      ],
    },
    dataPath: "root.status",
    parentDataPath: "root",
    basePath: "root.status",
    baseId: "InsurancePlan.status",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "draft",
        display: "Draft",
      },
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "active",
        display: "Active",
      },
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "retired",
        display: "Retired",
      },
      {
        system: "http://hl7.org/fhir/publication-status",
        code: "unknown",
        display: "Unknown",
      },
    ],
  },
  {
    element: {
      id: "InsurancePlan.type",
      path: "InsurancePlan.type",
      short: "Kind of product",
      definition: "The kind of health insurance product.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.type", min: 0, max: "*" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "InsurancePlanType",
          },
        ],
        strength: "example",
        description: "Used to categorize the product/plan.",
        valueSet: "http://hl7.org/fhir/ValueSet/insuranceplan-type",
      },
      mapping: [
        { identity: "w5", map: "FiveWs.class" },
        { identity: "rim", map: ".code" },
      ],
    },
    dataPath: "root.type[0]",
    parentDataPath: "root",
    basePath: "root.type",
    baseId: "InsurancePlan.type",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "medical",
        display: "Medical",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "dental",
        display: "Dental",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "mental",
        display: "Mental Health",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "subst-ab",
        display: "Substance Abuse",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "vision",
        display: "Vision",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "drug",
        display: "Drug",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "short-term",
        display: "Short Term",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "long-term",
        display: "Long Term Care",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "hospice",
        display: "Hospice",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "home",
        display: "Home Health",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
        code: "Drug",
        display: "Drug",
      },
    ],
  },
  {
    element: {
      id: "InsurancePlan.name",
      path: "InsurancePlan.name",
      short: "Official name",
      definition:
        "Official name of the health insurance product as designated by the owner.",
      comment:
        "If the name of the product/plan changes, consider putting the old name in the alias column so that it can still be located through searches.",
      min: 0,
      max: "1",
      base: { path: "InsurancePlan.name", min: 0, max: "1" },
      type: [{ code: "string" }],
      condition: ["ipn-1"],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
      mapping: [{ identity: "rim", map: ".name" }],
    },
    dataPath: "root.name",
    parentDataPath: "root",
    basePath: "root.name",
    baseId: "InsurancePlan.name",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.alias",
      path: "InsurancePlan.alias",
      short: "Alternate names",
      definition:
        "A list of alternate names that the product is known as, or was known as in the past.",
      comment:
        "There are no dates associated with the alias/historic names, as this is not intended to track when names were used, but to assist in searching so that older names can still result in identifying the product/plan.",
      requirements:
        "Over time products/plans go through many changes and can be known by different names.\n\nFor searching knowing previous names that the product/plan was known by can be very useful.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.alias", min: 0, max: "*" },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: ".name" }],
    },
    dataPath: "root.alias[0]",
    parentDataPath: "root",
    basePath: "root.alias",
    baseId: "InsurancePlan.alias",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.ownedBy",
      path: "InsurancePlan.ownedBy",
      short: "Plan issuer",
      definition:
        "The entity that is providing  the health insurance product and underwriting the risk.  This is typically an insurance carriers, other third-party payers, or health plan sponsors comonly referred to as 'payers'.",
      alias: ["Payer"],
      min: 0,
      max: "1",
      base: { path: "InsurancePlan.ownedBy", min: 0, max: "1" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.ownedBy",
    parentDataPath: "root",
    basePath: "root.ownedBy",
    baseId: "InsurancePlan.ownedBy",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.coverageArea",
      path: "InsurancePlan.coverageArea",
      short: "Where product applies",
      definition:
        "The geographic region in which a health insurance product's benefits apply.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.coverageArea", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Location"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: true,
    },
    dataPath: "root.coverageArea[0]",
    parentDataPath: "root",
    basePath: "root.coverageArea",
    baseId: "InsurancePlan.coverageArea",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.contact",
      path: "InsurancePlan.contact",
      short: "Contact for the product",
      definition:
        "The contact for the health insurance product for a certain purpose.",
      comment:
        "Where multiple contacts for the same purpose are provided there is a standard extension that can be used to determine which one is the preferred contact to use.",
      requirements:
        "Need to keep track of assigned contact points within bigger organization.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.contact", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: ".contactParty" }],
    },
    dataPath: "root.contact[0]",
    parentDataPath: "root",
    basePath: "root.contact",
    baseId: "InsurancePlan.contact",
    isPrimitive: false,
    childPaths: [
      "root.contact.purpose",
      "root.contact.name",
      "root.contact.telecom[0]",
      "root.contact.address",
    ],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.contact.purpose",
      path: "InsurancePlan.contact.purpose",
      short: "The type of contact",
      definition: "Indicates a purpose for which the contact can be reached.",
      requirements: "Need to distinguish between multiple contact persons.",
      min: 0,
      max: "1",
      base: { path: "InsurancePlan.contact.purpose", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "ContactPartyType",
          },
        ],
        strength: "extensible",
        description: "The purpose for which you would contact a contact party.",
        valueSet: "http://hl7.org/fhir/ValueSet/contactentity-type",
      },
      mapping: [{ identity: "rim", map: "./type" }],
    },
    dataPath: "root.contact.purpose",
    parentDataPath: "root.contact[0]",
    basePath: "root.purpose",
    baseId: "InsurancePlan.contact.purpose",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
        code: "BILL",
        display: "Billing",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
        code: "ADMIN",
        display: "Administrative",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
        code: "HR",
        display: "Human Resource",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
        code: "PAYOR",
        display: "Payor",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
        code: "PATINF",
        display: "Patient",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
        code: "PRESS",
        display: "Press",
      },
    ],
  },
  {
    element: {
      id: "InsurancePlan.contact.telecom",
      path: "InsurancePlan.contact.telecom",
      short: "Contact details (telephone, email, etc.)  for a contact",
      definition:
        "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.",
      requirements:
        "People have (primary) ways to contact them in some way such as phone, email.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.contact.telecom", min: 0, max: "*" },
      type: [{ code: "ContactPoint" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "./telecom" }],
    },
    dataPath: "root.contact.telecom[0]",
    parentDataPath: "root.contact[0]",
    basePath: "root.telecom",
    baseId: "InsurancePlan.contact.telecom",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.endpoint",
      path: "InsurancePlan.endpoint",
      short: "Technical endpoint",
      definition:
        "The technical endpoints providing access to services operated for the health insurance product.",
      requirements:
        "Organizations have multiple systems that provide various services and need to be able to define the technical connection details for how to connect to them, and for what purpose.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.endpoint", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: ["http://hl7.org/fhir/StructureDefinition/Endpoint"],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [{ identity: "rim", map: "n/a" }],
    },
    dataPath: "root.endpoint[0]",
    parentDataPath: "root",
    basePath: "root.endpoint",
    baseId: "InsurancePlan.endpoint",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.coverage",
      path: "InsurancePlan.coverage",
      short: "Coverage details",
      definition:
        "Details about the coverage offered by the insurance product.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.coverage", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.coverage[0]",
    parentDataPath: "root",
    basePath: "root.coverage",
    baseId: "InsurancePlan.coverage",
    isPrimitive: false,
    childPaths: [
      "root.coverage.type",
      "root.coverage.network[0]",
      "root.coverage.benefit[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.coverage.network",
      path: "InsurancePlan.coverage.network",
      short: "What networks provide coverage",
      definition:
        "Reference to the network that providing the type of coverage.",
      comment:
        "Networks are represented as a hierarchy of organization resources.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.coverage.network", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.coverage.network[0]",
    parentDataPath: "root.coverage[0]",
    basePath: "root.network",
    baseId: "InsurancePlan.coverage.network",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.coverage.benefit",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "CoverageBenefit",
        },
      ],
      path: "InsurancePlan.coverage.benefit",
      short: "List of benefits",
      definition: "Specific benefits under this type of coverage.",
      min: 1,
      max: "*",
      base: { path: "InsurancePlan.coverage.benefit", min: 1, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.coverage.benefit[0]",
    parentDataPath: "root.coverage[0]",
    basePath: "root.benefit",
    baseId: "InsurancePlan.coverage.benefit",
    isPrimitive: false,
    childPaths: [
      "root.coverage.benefit.type",
      "root.coverage.benefit.requirement",
      "root.coverage.benefit.limit[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.coverage.benefit.requirement",
      path: "InsurancePlan.coverage.benefit.requirement",
      short: "Referral requirements",
      definition:
        "The referral requirements to have access/coverage for this benefit.",
      min: 0,
      max: "1",
      base: {
        path: "InsurancePlan.coverage.benefit.requirement",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.coverage.benefit.requirement",
    parentDataPath: "root.coverage.benefit[0]",
    basePath: "root.requirement",
    baseId: "InsurancePlan.coverage.benefit.requirement",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.coverage.benefit.limit",
      path: "InsurancePlan.coverage.benefit.limit",
      short: "Benefit limits",
      definition: "The specific limits on the benefit.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.coverage.benefit.limit", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.coverage.benefit.limit[0]",
    parentDataPath: "root.coverage.benefit[0]",
    basePath: "root.limit",
    baseId: "InsurancePlan.coverage.benefit.limit",
    isPrimitive: false,
    childPaths: [
      "root.coverage.benefit.limit.value",
      "root.coverage.benefit.limit.code",
    ],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.coverage.benefit.limit.code",
      path: "InsurancePlan.coverage.benefit.limit.code",
      short: "Benefit limit details",
      definition: "The specific limit on the benefit.",
      comment:
        "Use `CodeableConcept.text` element if the data is free (uncoded) text.",
      min: 0,
      max: "1",
      base: {
        path: "InsurancePlan.coverage.benefit.limit.code",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.coverage.benefit.limit.code",
    parentDataPath: "root.coverage.benefit.limit[0]",
    basePath: "root.code",
    baseId: "InsurancePlan.coverage.benefit.limit.code",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan",
      path: "InsurancePlan.plan",
      short: "Plan details",
      definition: "Details about an insurance plan.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.plan", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan[0]",
    parentDataPath: "root",
    basePath: "root.plan",
    baseId: "InsurancePlan.plan",
    isPrimitive: false,
    childPaths: [
      "root.plan.identifier[0]",
      "root.plan.type",
      "root.plan.coverageArea[0]",
      "root.plan.network[0]",
      "root.plan.generalCost[0]",
      "root.plan.specificCost[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan.type",
      path: "InsurancePlan.plan.type",
      short: "Type of plan",
      definition: 'Type of plan. For example, "Platinum" or "High Deductable".',
      min: 0,
      max: "1",
      base: { path: "InsurancePlan.plan.type", min: 0, max: "1" },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan.type",
    parentDataPath: "root.plan[0]",
    basePath: "root.type",
    baseId: "InsurancePlan.plan.type",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan.network",
      path: "InsurancePlan.plan.network",
      short: "What networks provide coverage",
      definition:
        "Reference to the network that providing the type of coverage.",
      comment:
        "Networks are represented as a hierarchy of organization resources.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.plan.network", min: 0, max: "*" },
      type: [
        {
          code: "Reference",
          targetProfile: [
            "http://hl7.org/fhir/StructureDefinition/Organization",
          ],
        },
      ],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan.network[0]",
    parentDataPath: "root.plan[0]",
    basePath: "root.network",
    baseId: "InsurancePlan.plan.network",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan.generalCost",
      path: "InsurancePlan.plan.generalCost",
      short: "Overall costs",
      definition: "Overall costs associated with the plan.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.plan.generalCost", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan.generalCost[0]",
    parentDataPath: "root.plan[0]",
    basePath: "root.generalCost",
    baseId: "InsurancePlan.plan.generalCost",
    isPrimitive: false,
    childPaths: [
      "root.plan.generalCost.type",
      "root.plan.generalCost.groupSize",
      "root.plan.generalCost.cost",
      "root.plan.generalCost.comment",
    ],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan.generalCost.groupSize",
      path: "InsurancePlan.plan.generalCost.groupSize",
      short: "Number of enrollees",
      definition: "Number of participants enrolled in the plan.",
      min: 0,
      max: "1",
      base: {
        path: "InsurancePlan.plan.generalCost.groupSize",
        min: 0,
        max: "1",
      },
      type: [{ code: "positiveInt" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan.generalCost.groupSize",
    parentDataPath: "root.plan.generalCost[0]",
    basePath: "root.groupSize",
    baseId: "InsurancePlan.plan.generalCost.groupSize",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan.generalCost.comment",
      path: "InsurancePlan.plan.generalCost.comment",
      short: "Additional cost information",
      definition:
        "Additional information about the general costs associated with this plan.",
      min: 0,
      max: "1",
      base: {
        path: "InsurancePlan.plan.generalCost.comment",
        min: 0,
        max: "1",
      },
      type: [{ code: "string" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan.generalCost.comment",
    parentDataPath: "root.plan.generalCost[0]",
    basePath: "root.comment",
    baseId: "InsurancePlan.plan.generalCost.comment",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan.specificCost",
      path: "InsurancePlan.plan.specificCost",
      short: "Specific costs",
      definition: "Costs associated with the coverage provided by the product.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan.plan.specificCost", min: 0, max: "*" },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan.specificCost[0]",
    parentDataPath: "root.plan[0]",
    basePath: "root.specificCost",
    baseId: "InsurancePlan.plan.specificCost",
    isPrimitive: false,
    childPaths: [
      "root.plan.specificCost.category",
      "root.plan.specificCost.benefit[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan.specificCost.benefit",
      extension: [
        {
          url: "http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name",
          valueString: "PlanBenefit",
        },
      ],
      path: "InsurancePlan.plan.specificCost.benefit",
      short: "Benefits list",
      definition:
        "List of the specific benefits under this category of benefit.",
      min: 0,
      max: "*",
      base: {
        path: "InsurancePlan.plan.specificCost.benefit",
        min: 0,
        max: "*",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan.specificCost.benefit[0]",
    parentDataPath: "root.plan.specificCost[0]",
    basePath: "root.benefit",
    baseId: "InsurancePlan.plan.specificCost.benefit",
    isPrimitive: false,
    childPaths: [
      "root.plan.specificCost.benefit.type",
      "root.plan.specificCost.benefit.cost[0]",
    ],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan.specificCost.benefit.cost",
      path: "InsurancePlan.plan.specificCost.benefit.cost",
      short: "List of the costs",
      definition: "List of the costs associated with a specific benefit.",
      min: 0,
      max: "*",
      base: {
        path: "InsurancePlan.plan.specificCost.benefit.cost",
        min: 0,
        max: "*",
      },
      type: [{ code: "BackboneElement" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human:
            "All FHIR elements must have a @value or children unless an empty Parameters resource",
          expression:
            "hasValue() or (children().count() > id.count()) or $this is Parameters",
          xpath: "@value|f:*|h:div|self::f:Parameters",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan.specificCost.benefit.cost[0]",
    parentDataPath: "root.plan.specificCost.benefit[0]",
    basePath: "root.cost",
    baseId: "InsurancePlan.plan.specificCost.benefit.cost",
    isPrimitive: false,
    childPaths: [
      "root.plan.specificCost.benefit.cost.type",
      "root.plan.specificCost.benefit.cost.applicability",
      "root.plan.specificCost.benefit.cost.qualifiers[0]",
      "root.plan.specificCost.benefit.cost.value",
    ],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan.plan.specificCost.benefit.cost.applicability",
      path: "InsurancePlan.plan.specificCost.benefit.cost.applicability",
      short: "in-network | out-of-network | other",
      definition:
        "Whether the cost applies to in-network or out-of-network providers (in-network; out-of-network; other).",
      min: 0,
      max: "1",
      base: {
        path: "InsurancePlan.plan.specificCost.benefit.cost.applicability",
        min: 0,
        max: "1",
      },
      type: [{ code: "CodeableConcept" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      binding: {
        extension: [
          {
            url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
            valueString: "BenefitCostApplicability",
          },
        ],
        strength: "required",
        description:
          "Whether the cost applies to in-network or out-of-network providers.",
        valueSet:
          "http://hl7.org/fhir/ValueSet/insuranceplan-applicability|4.3.0",
      },
    },
    dataPath: "root.plan.specificCost.benefit.cost.applicability",
    parentDataPath: "root.plan.specificCost.benefit.cost[0]",
    basePath: "root.applicability",
    baseId: "InsurancePlan.plan.specificCost.benefit.cost.applicability",
    isPrimitive: true,
    isRootPrimitive: true,
    childPaths: [],
    value: "",
    bindingCodes: [
      {
        system: "http://terminology.hl7.org/CodeSystem/applicability",
        code: "in-network",
        display: "In Network",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/applicability",
        code: "out-of-network",
        display: "Out of Network",
      },
      {
        system: "http://terminology.hl7.org/CodeSystem/applicability",
        code: "other",
        display: "Other",
      },
    ],
  },
  {
    element: {
      id: "InsurancePlan.plan.specificCost.benefit.cost.value",
      path: "InsurancePlan.plan.specificCost.benefit.cost.value",
      short: "The actual cost value",
      definition:
        "The actual cost value. (some of the costs may be represented as percentages rather than currency, e.g. 10% coinsurance).",
      min: 0,
      max: "1",
      base: {
        path: "InsurancePlan.plan.specificCost.benefit.cost.value",
        min: 0,
        max: "1",
      },
      type: [{ code: "Quantity" }],
      constraint: [
        {
          key: "ele-1",
          severity: "error",
          human: "All FHIR elements must have a @value or children",
          expression: "hasValue() or (children().count() > id.count())",
          xpath: "@value|f:*|h:div",
          source: "http://hl7.org/fhir/StructureDefinition/Element",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
    },
    dataPath: "root.plan.specificCost.benefit.cost.value",
    parentDataPath: "root.plan.specificCost.benefit.cost[0]",
    basePath: "root.value",
    baseId: "InsurancePlan.plan.specificCost.benefit.cost.value",
    isPrimitive: false,
    childPaths: [],
    value: "",
  },
  {
    element: {
      id: "InsurancePlan",
      path: "InsurancePlan",
      short:
        "Details of a Health Insurance product/plan provided by an organization",
      definition:
        "Details of a Health Insurance product/plan provided by an organization.",
      min: 0,
      max: "*",
      base: { path: "InsurancePlan", min: 0, max: "*" },
      constraint: [
        {
          key: "dom-2",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL NOT contain nested Resources",
          expression: "contained.contained.empty()",
          xpath: "not(parent::f:contained and f:contained)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-3",
          severity: "error",
          human:
            "If the resource is contained in another resource, it SHALL be referred to from elsewhere in the resource or SHALL refer to the containing resource",
          expression:
            "contained.where(((id.exists() and ('#'+id in (%resource.descendants().reference | %resource.descendants().as(canonical) | %resource.descendants().as(uri) | %resource.descendants().as(url)))) or descendants().where(reference = '#').exists() or descendants().where(as(canonical) = '#').exists() or descendants().where(as(uri) = '#').exists()).not()).trace('unmatched', id).empty()",
          xpath:
            "not(exists(for $contained in f:contained return $contained[not(exists(parent::*/descendant::f:reference/@value=concat('#', $contained/*/f:id/@value)) or exists(descendant::f:reference[@value='#']))]))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-4",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a meta.versionId or a meta.lastUpdated",
          expression:
            "contained.meta.versionId.empty() and contained.meta.lastUpdated.empty()",
          xpath:
            "not(exists(f:contained/*/f:meta/f:versionId)) and not(exists(f:contained/*/f:meta/f:lastUpdated))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "dom-5",
          severity: "error",
          human:
            "If a resource is contained in another resource, it SHALL NOT have a security label",
          expression: "contained.meta.security.empty()",
          xpath: "not(exists(f:contained/*/f:meta/f:security))",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          extension: [
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice",
              valueBoolean: true,
            },
            {
              url: "http://hl7.org/fhir/StructureDefinition/elementdefinition-bestpractice-explanation",
              valueMarkdown:
                "When a resource has no narrative, only systems that fully understand the data can display the resource to a human safely. Including a human readable representation in the resource makes for a much more robust eco-system and cheaper handling of resources by intermediary systems. Some ecosystems restrict distribution of resources to only those systems that do fully understand the resources, and as a consequence implementers may believe that the narrative is superfluous. However experience shows that such eco-systems often open up to new participants over time.",
            },
          ],
          key: "dom-6",
          severity: "warning",
          human: "A resource should have narrative for robust management",
          expression: "text.`div`.exists()",
          xpath: "exists(f:text/h:div)",
          source: "http://hl7.org/fhir/StructureDefinition/DomainResource",
        },
        {
          key: "ipn-1",
          severity: "error",
          human:
            "The organization SHALL at least have a name or an idendtifier, and possibly more than one",
          expression: "(identifier.count() + name.count()) > 0",
          xpath: "count(f:identifier | f:name) > 0",
          source: "http://hl7.org/fhir/StructureDefinition/InsurancePlan",
        },
      ],
      mustSupport: false,
      isModifier: false,
      isSummary: false,
      mapping: [
        { identity: "rim", map: "Entity. Role, or Act" },
        { identity: "w5", map: "administrative.entity" },
      ],
    },
    dataPath: "root",
    parentDataPath: "",
    basePath: "root",
    baseId: "InsurancePlan",
    isPrimitive: false,
    isRoot: true,
    childPaths: [],
    value: "",
  },
];
export default data;
